{"version":3,"file":"static/js/9059.aa80078d.chunk.js","mappings":"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","sources":["experiment-tracking/components/run-page/RunViewArtifactTab.tsx","experiment-tracking/components/run-page/useRunViewActiveTab.tsx","experiment-tracking/components/run-page/RunViewModeSwitch.tsx","experiment-tracking/components/run-page/RunViewHeaderRegisterModelButton.tsx","experiment-tracking/components/run-page/RunViewHeader.tsx","experiment-tracking/components/run-page/overview/RunViewStatusBox.tsx","experiment-tracking/components/run-page/overview/RunViewUserLinkBox.tsx","experiment-tracking/components/run-page/overview/RunViewMetricsTable.tsx","experiment-tracking/components/run-page/overview/RunViewDatasetBox.tsx","experiment-tracking/components/run-page/overview/RunViewParentRunBox.tsx","experiment-tracking/components/run-page/overview/RunViewTagsBox.tsx","experiment-tracking/components/run-page/overview/RunViewDescriptionBox.tsx","experiment-tracking/components/run-page/overview/RunViewRegisteredModelsBox.tsx","experiment-tracking/pages/prompts/hooks/usePromptVersionsForRunQuery.tsx","experiment-tracking/components/run-page/overview/RunViewRegisteredPromptsBox.tsx","experiment-tracking/components/run-page/overview/RunViewLoggedModelsBox.tsx","experiment-tracking/components/run-page/overview/RunViewSourceBox.tsx","experiment-tracking/components/run-page/overview/RunViewLoggedModelsTable.tsx","experiment-tracking/hooks/logged-models/useCombinedRunInputsOutputsModels.tsx","experiment-tracking/components/run-page/overview/RunViewDatasetBoxV2.tsx","experiment-tracking/components/run-page/hooks/useRunDetailsPageOverviewSectionsV2.tsx","experiment-tracking/components/run-page/RunViewOverview.tsx","experiment-tracking/components/RunNotFoundView.tsx","experiment-tracking/components/run-page/RunViewChartTooltipBody.tsx","experiment-tracking/components/run-page/RunViewMetricCharts.tsx","experiment-tracking/components/experiment-page/hooks/useLoggedModelsForExperimentRunV2.tsx","experiment-tracking/components/evaluations/hooks/useCompareToRunUuid.tsx","experiment-tracking/components/evaluations/EvaluationRunCompareSelector.tsx","experiment-tracking/components/evaluations/hooks/useRunLoggedTraceTableArtifacts.tsx","experiment-tracking/components/run-page/hooks/useSearchRunsQuery.tsx","experiment-tracking/components/evaluations/RunViewEvaluationsTabArtifacts.tsx","experiment-tracking/components/evaluations/RunViewEvaluationsTab.tsx","experiment-tracking/components/run-page/RunPage.tsx","experiment-tracking/components/experiment-page/hooks/useLoggedModelsForExperimentRun.tsx","graphql/get-graphql-error.ts","shared/web-shared/unified-tagging/components/TagAssignmentUI/TagAssignmentRowContainer.tsx","shared/web-shared/unified-tagging/context/TagAssignmentContextProvider.tsx","shared/web-shared/unified-tagging/components/TagAssignmentRoot.tsx","shared/web-shared/unified-tagging/components/TagAssignmentRow.tsx","shared/web-shared/unified-tagging/components/TagAssignmentLabel.tsx","shared/web-shared/unified-tagging/components/TagAssignmentField/TagAssignmentInput.tsx","shared/web-shared/unified-tagging/components/TagAssignmentKey.tsx","shared/web-shared/unified-tagging/components/TagAssignmentValue.tsx","shared/web-shared/unified-tagging/components/TagAssignmentUI/TagAssignmentRemoveButtonUI.tsx","shared/web-shared/unified-tagging/components/TagAssignmentRemoveButton.tsx","shared/web-shared/unified-tagging/hooks/useTagAssignmentFieldArray.ts","shared/web-shared/unified-tagging/hooks/useTagAssignmentForm.tsx","common/components/UnifiedTaggingForm.tsx","common/hooks/useTagAssignmentModal.tsx","common/utils/StringUtils.ts","common/components/PageContainer.tsx","experiment-tracking/components/NotFoundPage.tsx","experiment-tracking/utils/ExperimentKindUtils.ts"],"sourcesContent":["import { useDesignSystemTheme } from '@databricks/design-system';\nimport type { KeyValueEntity } from '../../../common/types';\nimport ArtifactPage from '../ArtifactPage';\nimport { useMediaQuery } from '@databricks/web-shared/hooks';\nimport { UseGetRunQueryResponseOutputs } from './hooks/useGetRunQuery';\n\n/**\n * A run page tab containing the artifact browser\n */\nexport const RunViewArtifactTab = ({\n  runTags,\n  experimentId,\n  runOutputs,\n  artifactUri,\n  runUuid,\n}: {\n  runUuid: string;\n  experimentId: string;\n  artifactUri?: string;\n  runOutputs?: UseGetRunQueryResponseOutputs;\n  runTags: Record<string, KeyValueEntity>;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  // Use scrollable artifact area only for non-xs screens\n  const useFullHeightPage = useMediaQuery(`(min-width: ${theme.responsive.breakpoints.sm}px)`);\n\n  return (\n    <div\n      css={{\n        flex: 1,\n        overflow: 'hidden',\n        display: 'flex',\n        paddingBottom: theme.spacing.md,\n        position: 'relative',\n      }}\n    >\n      <ArtifactPage\n        runUuid={runUuid}\n        runTags={runTags}\n        runOutputs={runOutputs}\n        useAutoHeight={useFullHeightPage}\n        artifactRootUri={artifactUri}\n        experimentId={experimentId}\n      />\n    </div>\n  );\n};\n","import { useParams } from '../../../common/utils/RoutingUtils';\nimport { RunPageTabName } from '../../constants';\n\n/**\n * Returns the run view's active tab.\n * - Supports multi-slash artifact paths (hence '*' catch-all param)\n * - Supports both new (/artifacts/...) and previous (/artifactPath/...) routes\n */\nexport const useRunViewActiveTab = (): RunPageTabName => {\n  const { '*': tabParam } = useParams<{ '*': string }>();\n  if (tabParam === 'model-metrics') {\n    return RunPageTabName.MODEL_METRIC_CHARTS;\n  }\n  if (tabParam === 'system-metrics') {\n    return RunPageTabName.SYSTEM_METRIC_CHARTS;\n  }\n  if (tabParam === 'traces') {\n    return RunPageTabName.TRACES;\n  }\n  if (tabParam?.match(/^(artifactPath|artifacts)/)) {\n    return RunPageTabName.ARTIFACTS;\n  }\n\n  return RunPageTabName.OVERVIEW;\n};\n","import { InfoPopover, LegacyTabs, useDesignSystemTheme, Typography } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { useNavigate, useParams } from '../../../common/utils/RoutingUtils';\nimport Routes from '../../routes';\nimport { RunPageTabName } from '../../constants';\nimport { useRunViewActiveTab } from './useRunViewActiveTab';\nimport { useState } from 'react';\n\n// Set of tabs that when active, the margin of the tab selector should be removed for better displaying\nconst TABS_WITHOUT_MARGIN = [RunPageTabName.ARTIFACTS, RunPageTabName.EVALUATIONS];\n\n/**\n * Mode switcher for the run details page.\n */\nexport const RunViewModeSwitch = () => {\n  const { experimentId, runUuid } = useParams<{ runUuid: string; experimentId: string }>();\n  const navigate = useNavigate();\n  const { theme } = useDesignSystemTheme();\n  const currentTab = useRunViewActiveTab();\n  const [removeTabMargin, setRemoveTabMargin] = useState(TABS_WITHOUT_MARGIN.includes(currentTab));\n\n  const onTabChanged = (newTabKey: string) => {\n    if (!experimentId || !runUuid || currentTab === newTabKey) {\n      return;\n    }\n\n    setRemoveTabMargin(TABS_WITHOUT_MARGIN.includes(newTabKey as RunPageTabName));\n\n    if (newTabKey === RunPageTabName.OVERVIEW) {\n      navigate(Routes.getRunPageRoute(experimentId, runUuid));\n      return;\n    }\n    navigate(Routes.getRunPageTabRoute(experimentId, runUuid, newTabKey));\n  };\n\n  const getLegacyTracesTabLink = () => {\n    return (\n      <LegacyTabs.TabPane\n        tab={<FormattedMessage defaultMessage=\"Traces\" description=\"Run details page > tab selector > Traces tab\" />}\n        key={RunPageTabName.TRACES}\n      />\n    );\n  };\n\n  return (\n    // @ts-expect-error TS(2322)\n    <LegacyTabs activeKey={currentTab} onChange={onTabChanged} tabBarStyle={{ margin: removeTabMargin && '0px' }}>\n      <LegacyTabs.TabPane\n        tab={\n          <FormattedMessage defaultMessage=\"Overview\" description=\"Run details page > tab selector > overview tab\" />\n        }\n        key={RunPageTabName.OVERVIEW}\n      />\n\n      <LegacyTabs.TabPane\n        tab={\n          <FormattedMessage\n            defaultMessage=\"Model metrics\"\n            description=\"Run details page > tab selector > Model metrics tab\"\n          />\n        }\n        key={RunPageTabName.MODEL_METRIC_CHARTS}\n      />\n      <LegacyTabs.TabPane\n        tab={\n          <FormattedMessage\n            defaultMessage=\"System metrics\"\n            description=\"Run details page > tab selector > Model metrics tab\"\n          />\n        }\n        key={RunPageTabName.SYSTEM_METRIC_CHARTS}\n      />\n      {getLegacyTracesTabLink()}\n      <LegacyTabs.TabPane\n        tab={\n          <FormattedMessage defaultMessage=\"Artifacts\" description=\"Run details page > tab selector > artifacts tab\" />\n        }\n        key={RunPageTabName.ARTIFACTS}\n      />\n    </LegacyTabs>\n  );\n};\n","import {\n  Button,\n  ChevronDownIcon,\n  DropdownMenu,\n  NewWindowIcon,\n  Tag,\n  LegacyTooltip,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\nimport { first, last, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Link } from '../../../common/utils/RoutingUtils';\nimport Utils from '../../../common/utils/Utils';\nimport { RegisterModel } from '../../../model-registry/components/RegisterModel';\nimport { ModelVersionStatusIcons } from '../../../model-registry/constants';\nimport { ModelRegistryRoutes } from '../../../model-registry/routes';\nimport Routes from '../../routes';\nimport { ModelVersionInfoEntity } from '../../types';\nimport { KeyValueEntity } from '../../../common/types';\nimport { ReactComponent as RegisteredModelOkIcon } from '../../../common/static/registered-model-grey-ok.svg';\nimport { RunPageModelVersionSummary } from './hooks/useUnifiedRegisteredModelVersionsSummariesForRun';\n\ninterface LoggedModelWithRegistrationInfo {\n  path: string;\n  absolutePath: string;\n  registeredModelVersionSummaries: RunPageModelVersionSummary[];\n}\n\nfunction LoggedModelsDropdownContent({\n  models,\n  onRegisterClick,\n  experimentId,\n  runUuid,\n}: {\n  models: LoggedModelWithRegistrationInfo[];\n  onRegisterClick: (model: LoggedModelWithRegistrationInfo) => void;\n  experimentId: string;\n  runUuid: string;\n}) {\n  const { theme } = useDesignSystemTheme();\n  const renderSection = (title: string, sectionModels: LoggedModelWithRegistrationInfo[]) => {\n    return (\n      <DropdownMenu.Group>\n        <DropdownMenu.Label>{title}</DropdownMenu.Label>\n        {sectionModels.map((model) => {\n          const registeredModelSummary = first(model.registeredModelVersionSummaries);\n          if (!registeredModelSummary) {\n            return (\n              <DropdownMenu.Item\n                componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_50\"\n                onClick={() => onRegisterClick(model)}\n                key={model.absolutePath}\n              >\n                <div css={{ marginRight: theme.spacing.md }}>{last(model.path.split('/'))}</div>\n                <DropdownMenu.HintColumn>\n                  <Link\n                    target=\"_blank\"\n                    to={Routes.getRunPageTabRoute(experimentId, runUuid, 'artifacts/' + model.path)}\n                  >\n                    <Button\n                      componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_58\"\n                      type=\"link\"\n                      size=\"small\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                      }}\n                      endIcon={<NewWindowIcon />}\n                    >\n                      <FormattedMessage\n                        defaultMessage=\"View model\"\n                        description=\"Run page > Header > Register model dropdown > View model button label\"\n                      />\n                    </Button>\n                  </Link>\n                </DropdownMenu.HintColumn>\n              </DropdownMenu.Item>\n            );\n          }\n          const { status, displayedName, version, link } = registeredModelSummary;\n\n          return (\n            <Link target=\"_blank\" to={link} key={model.absolutePath}>\n              <DropdownMenu.Item componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_80\">\n                <DropdownMenu.IconWrapper css={{ display: 'flex', alignItems: 'center' }}>\n                  {status === 'READY' ? <RegisteredModelOkIcon /> : status ? ModelVersionStatusIcons[status] : null}\n                </DropdownMenu.IconWrapper>\n                <span css={{ marginRight: theme.spacing.md }}>\n                  {displayedName}\n                  <Tag\n                    componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_90\"\n                    css={{ marginLeft: 8, marginRight: 4 }}\n                  >\n                    v{version}\n                  </Tag>\n                </span>\n                <DropdownMenu.HintColumn>\n                  <Button\n                    componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_89\"\n                    type=\"link\"\n                    size=\"small\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                    endIcon={<NewWindowIcon />}\n                  >\n                    <FormattedMessage\n                      defaultMessage=\"Go to model\"\n                      description=\"Run page > Header > Register model dropdown > Go to model button label\"\n                    />\n                  </Button>\n                </DropdownMenu.HintColumn>\n              </DropdownMenu.Item>\n            </Link>\n          );\n        })}\n      </DropdownMenu.Group>\n    );\n  };\n  const registeredModels = models.filter((model) => model.registeredModelVersionSummaries.length > 0);\n  const unregisteredModels = models.filter((model) => !model.registeredModelVersionSummaries.length);\n  return (\n    <>\n      {unregisteredModels.length ? renderSection('Unregistered models', unregisteredModels) : null}\n      {unregisteredModels.length && registeredModels.length ? <DropdownMenu.Separator /> : null}\n      {registeredModels.length ? renderSection('Registered models', registeredModels) : null}\n    </>\n  );\n}\n\nconst getRegisteredModelVersionLink = (modelVersion: ModelVersionInfoEntity) => {\n  const { name, version } = modelVersion;\n  return ModelRegistryRoutes.getModelVersionPageRoute(name, version);\n};\n\nexport const RunViewHeaderRegisterModelButton = ({\n  runUuid,\n  experimentId,\n  runTags,\n  artifactRootUri,\n  registeredModelVersionSummaries,\n}: {\n  runUuid: string;\n  experimentId: string;\n  runTags: Record<string, KeyValueEntity>;\n  artifactRootUri?: string;\n  registeredModelVersionSummaries: RunPageModelVersionSummary[];\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  const loggedModelPaths = useMemo(\n    () => (runTags ? Utils.getLoggedModelsFromTags(runTags).map(({ artifactPath }) => artifactPath) : []),\n    [runTags],\n  );\n\n  const models = useMemo<LoggedModelWithRegistrationInfo[]>(\n    () =>\n      orderBy(\n        loggedModelPaths.map((path) => ({\n          path,\n          absolutePath: `${artifactRootUri}/${path}`,\n          registeredModelVersionSummaries:\n            registeredModelVersionSummaries?.filter(({ source }) => source === `${artifactRootUri}/${path}`) || [],\n        })),\n        (model) => parseInt(model.registeredModelVersionSummaries[0]?.version || '0', 10),\n        'desc',\n      ),\n    [loggedModelPaths, registeredModelVersionSummaries, artifactRootUri],\n  );\n\n  const [selectedModelToRegister, setSelectedModelToRegister] = useState<LoggedModelWithRegistrationInfo | null>(null);\n\n  if (models.length > 1) {\n    const modelsRegistered = models.filter((model) => model.registeredModelVersionSummaries.length > 0);\n\n    return (\n      <>\n        {selectedModelToRegister && (\n          <RegisterModel\n            runUuid={runUuid}\n            modelPath={selectedModelToRegister.absolutePath}\n            modelRelativePath={selectedModelToRegister.path}\n            disabled={false}\n            showButton={false}\n            modalVisible\n            onCloseModal={() => setSelectedModelToRegister(null)}\n          />\n        )}\n        <DropdownMenu.Root modal={false}>\n          <LegacyTooltip\n            placement=\"bottom\"\n            title={\n              <FormattedMessage\n                defaultMessage=\"{registeredCount}/{loggedCount} logged models are registered\"\n                description=\"Run page > Header > Register model dropdown > Button tooltip\"\n                values={{ registeredCount: modelsRegistered.length, loggedCount: models.length }}\n              />\n            }\n          >\n            <DropdownMenu.Trigger asChild>\n              <Button\n                componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_195\"\n                type=\"primary\"\n                endIcon={<ChevronDownIcon />}\n              >\n                <FormattedMessage\n                  defaultMessage=\"Register model\"\n                  description=\"Run page > Header > Register model dropdown > Button label when some models are not registered\"\n                />\n              </Button>\n            </DropdownMenu.Trigger>\n          </LegacyTooltip>\n          <DropdownMenu.Content align=\"end\">\n            <LoggedModelsDropdownContent\n              models={models}\n              onRegisterClick={setSelectedModelToRegister}\n              experimentId={experimentId}\n              runUuid={runUuid}\n            />\n          </DropdownMenu.Content>\n        </DropdownMenu.Root>\n      </>\n    );\n  }\n\n  const singleModel = first(models);\n\n  if (!singleModel) {\n    return null;\n  }\n\n  const registeredModelVersionSummary = first(singleModel.registeredModelVersionSummaries);\n\n  if (registeredModelVersionSummary) {\n    return (\n      <Link to={registeredModelVersionSummary.link} target=\"_blank\" css={{ marginLeft: theme.spacing.sm }}>\n        <Button\n          componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewheaderregistermodelbutton.tsx_231\"\n          endIcon={<NewWindowIcon />}\n          type=\"link\"\n        >\n          Model registered\n        </Button>\n      </Link>\n    );\n  }\n  return (\n    <RegisterModel\n      disabled={false}\n      runUuid={runUuid}\n      modelPath={singleModel.absolutePath}\n      modelRelativePath={singleModel.path}\n      showButton\n      buttonType=\"primary\"\n    />\n  );\n};\n","import { FormattedMessage } from 'react-intl';\nimport { Link } from '../../../common/utils/RoutingUtils';\nimport { OverflowMenu, PageHeader } from '../../../shared/building_blocks/PageHeader';\nimport Routes, { PageId as ExperimentTrackingPageId } from '../../routes';\nimport type { ExperimentEntity } from '../../types';\nimport { KeyValueEntity } from '../../../common/types';\nimport { RunViewModeSwitch } from './RunViewModeSwitch';\nimport Utils from '../../../common/utils/Utils';\nimport { RunViewHeaderRegisterModelButton } from './RunViewHeaderRegisterModelButton';\nimport type { UseGetRunQueryResponseExperiment } from './hooks/useGetRunQuery';\nimport type { RunPageModelVersionSummary } from './hooks/useUnifiedRegisteredModelVersionsSummariesForRun';\nimport { ExperimentPageTabName } from '@mlflow/mlflow/src/experiment-tracking/constants';\nimport { shouldEnableExperimentPageHeaderV2 } from '../../../common/utils/FeatureUtils';\n\n/**\n * Run details page header component, common for all page view modes\n */\nexport const RunViewHeader = ({\n  hasComparedExperimentsBefore,\n  comparedExperimentIds = [],\n  experiment,\n  runDisplayName,\n  runTags,\n  runParams,\n  runUuid,\n  handleRenameRunClick,\n  handleDeleteRunClick,\n  artifactRootUri,\n  registeredModelVersionSummaries,\n  isLoading,\n}: {\n  hasComparedExperimentsBefore?: boolean;\n  comparedExperimentIds?: string[];\n  runDisplayName: string;\n  runUuid: string;\n  runTags: Record<string, KeyValueEntity>;\n  runParams: Record<string, KeyValueEntity>;\n  experiment: ExperimentEntity | UseGetRunQueryResponseExperiment;\n  handleRenameRunClick: () => void;\n  handleDeleteRunClick?: () => void;\n  artifactRootUri?: string;\n  registeredModelVersionSummaries: RunPageModelVersionSummary[];\n  isLoading?: boolean;\n}) => {\n  function getExperimentPageLink() {\n    return hasComparedExperimentsBefore && comparedExperimentIds ? (\n      <Link to={Routes.getCompareExperimentsPageRoute(comparedExperimentIds)}>\n        <FormattedMessage\n          defaultMessage=\"Displaying Runs from {numExperiments} Experiments\"\n          // eslint-disable-next-line max-len\n          description=\"Breadcrumb nav item to link to the compare-experiments page on compare runs page\"\n          values={{\n            numExperiments: comparedExperimentIds.length,\n          }}\n        />\n      </Link>\n    ) : (\n      <Link to={Routes.getExperimentPageRoute(experiment?.experimentId ?? '')} data-testid=\"experiment-runs-link\">\n        {experiment.name}\n      </Link>\n    );\n  }\n\n  const breadcrumbs = [getExperimentPageLink()];\n  if (shouldEnableExperimentPageHeaderV2() && experiment.experimentId) {\n    breadcrumbs.push(\n      <Link\n        to={Routes.getExperimentPageTabRoute(experiment.experimentId, ExperimentPageTabName.Runs)}\n        data-testid=\"experiment-observatory-link-runs\"\n      >\n        <FormattedMessage\n          defaultMessage=\"Runs\"\n          description=\"Breadcrumb nav item to link to the list of runs on the parent experiment\"\n        />\n      </Link>,\n    );\n  }\n\n  const renderRegisterModelButton = () => {\n    return (\n      <RunViewHeaderRegisterModelButton\n        runUuid={runUuid}\n        experimentId={experiment?.experimentId ?? ''}\n        runTags={runTags}\n        artifactRootUri={artifactRootUri}\n        registeredModelVersionSummaries={registeredModelVersionSummaries}\n      />\n    );\n  };\n\n  return (\n    <div css={{ flexShrink: 0 }}>\n      <PageHeader\n        title={<span data-testid=\"runs-header\">{runDisplayName}</span>}\n        breadcrumbs={breadcrumbs}\n        /* prettier-ignore */\n      >\n        <OverflowMenu\n          menu={[\n            {\n              id: 'overflow-rename-button',\n              onClick: handleRenameRunClick,\n              itemName: (\n                <FormattedMessage defaultMessage=\"Rename\" description=\"Menu item to rename an experiment run\" />\n              ),\n            },\n            ...(handleDeleteRunClick\n              ? [\n                  {\n                    id: 'overflow-delete-button',\n                    onClick: handleDeleteRunClick,\n                    itemName: (\n                      <FormattedMessage defaultMessage=\"Delete\" description=\"Menu item to delete an experiment run\" />\n                    ),\n                  },\n                ]\n              : []),\n          ]}\n        />\n\n        {renderRegisterModelButton()}\n      </PageHeader>\n      <RunViewModeSwitch />\n    </div>\n  );\n};\n","import { Tag, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport { RunInfoEntity } from '../../../types';\nimport { RunStatusIcon } from '../../RunStatusIcon';\nimport { FormattedMessage } from 'react-intl';\nimport type { MlflowRunStatus } from '../../../../graphql/__generated__/graphql';\n\n/**\n * Displays run status cell in run detail overview.\n */\nexport const RunViewStatusBox = ({ status }: { status: RunInfoEntity['status'] | MlflowRunStatus | null }) => {\n  const { theme } = useDesignSystemTheme();\n  const getTagColor = () => {\n    if (status === 'FINISHED') {\n      return theme.isDarkMode ? theme.colors.green800 : theme.colors.green100;\n    }\n    if (status === 'KILLED' || status === 'FAILED') {\n      return theme.isDarkMode ? theme.colors.red800 : theme.colors.red100;\n    }\n    if (status === 'SCHEDULED' || status === 'RUNNING') {\n      return theme.isDarkMode ? theme.colors.blue800 : theme.colors.blue100;\n    }\n\n    return undefined;\n  };\n\n  const getStatusLabel = () => {\n    if (status === 'FINISHED') {\n      return (\n        <Typography.Text color=\"success\">\n          <FormattedMessage\n            defaultMessage=\"Finished\"\n            description=\"Run page > Overview > Run status cell > Value for finished state\"\n          />\n        </Typography.Text>\n      );\n    }\n    if (status === 'KILLED') {\n      return (\n        <Typography.Text color=\"error\">\n          <FormattedMessage\n            defaultMessage=\"Killed\"\n            description=\"Run page > Overview > Run status cell > Value for killed state\"\n          />\n        </Typography.Text>\n      );\n    }\n    if (status === 'FAILED') {\n      return (\n        <Typography.Text color=\"error\">\n          <FormattedMessage\n            defaultMessage=\"Failed\"\n            description=\"Run page > Overview > Run status cell > Value for failed state\"\n          />\n        </Typography.Text>\n      );\n    }\n    if (status === 'RUNNING') {\n      return (\n        <Typography.Text color=\"info\">\n          <FormattedMessage\n            defaultMessage=\"Running\"\n            description=\"Run page > Overview > Run status cell > Value for running state\"\n          />\n        </Typography.Text>\n      );\n    }\n    if (status === 'SCHEDULED') {\n      return (\n        <Typography.Text color=\"info\">\n          <FormattedMessage\n            defaultMessage=\"Scheduled\"\n            description=\"Run page > Overview > Run status cell > Value for scheduled state\"\n          />\n        </Typography.Text>\n      );\n    }\n    return status;\n  };\n\n  return (\n    <Tag\n      componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewstatusbox.tsx_81\"\n      css={{ backgroundColor: getTagColor() }}\n    >\n      {status && <RunStatusIcon status={status} />}{' '}\n      <Typography.Text css={{ marginLeft: theme.spacing.sm }}>{getStatusLabel()}</Typography.Text>\n    </Tag>\n  );\n};\n","import { Link } from '../../../../common/utils/RoutingUtils';\nimport Utils from '../../../../common/utils/Utils';\nimport Routes from '../../../routes';\nimport type { RunInfoEntity } from '../../../types';\nimport { KeyValueEntity } from '../../../../common/types';\nimport type { UseGetRunQueryResponseRunInfo } from '../hooks/useGetRunQuery';\n\nexport const RunViewUserLinkBox = ({\n  runInfo,\n  tags,\n}: {\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  tags: Record<string, KeyValueEntity>;\n}) => {\n  const user = Utils.getUser(runInfo, tags);\n  return <Link to={Routes.searchRunsByUser(runInfo?.experimentId ?? '', user)}>{user}</Link>;\n};\n","import {\n  Empty,\n  Input,\n  Overflow,\n  SearchIcon,\n  Table,\n  TableCell,\n  TableHeader,\n  TableRow,\n  Typography,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\nimport { LoggedModelProto, MetricEntitiesByName, MetricEntity, RunInfoEntity } from '../../../types';\nimport { compact, flatMap, groupBy, isEmpty, keyBy, mapValues, sum, values } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { Link } from '../../../../common/utils/RoutingUtils';\nimport Routes from '../../../routes';\nimport { RunPageTabName } from '../../../constants';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport { isSystemMetricKey } from '../../../utils/MetricsUtils';\nimport { ColumnDef, Table as TableDef, flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table';\nimport type { UseGetRunQueryResponseRunInfo } from '../hooks/useGetRunQuery';\nimport { useExperimentTrackingDetailsPageLayoutStyles } from '../../../hooks/useExperimentTrackingDetailsPageLayoutStyles';\n\nconst { systemMetricsLabel, modelMetricsLabel } = defineMessages({\n  systemMetricsLabel: {\n    defaultMessage: 'System metrics',\n    description: 'Run page > Overview > Metrics table > System charts section > title',\n  },\n  modelMetricsLabel: {\n    defaultMessage: 'Model metrics',\n    description: 'Run page > Overview > Metrics table > Model charts section > title',\n  },\n});\n\nconst metricKeyMatchesFilter =\n  (filter: string) =>\n  ({ key }: MetricEntity) =>\n    key.toLowerCase().includes(filter.toLowerCase());\n\ninterface MetricEntityWithLoggedModels extends MetricEntity {\n  loggedModels?: LoggedModelProto[];\n}\n\nconst RunViewMetricsTableSection = ({\n  metricsList,\n  runInfo,\n  header,\n  table,\n}: {\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  metricsList: MetricEntityWithLoggedModels[];\n  header?: React.ReactNode;\n  table: TableDef<MetricEntityWithLoggedModels>;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [{ column: keyColumn }, ...otherColumns] = table.getLeafHeaders();\n\n  const valueColumn = otherColumns.find((column) => column.id === 'value')?.column;\n\n  const anyRowHasModels = metricsList.some(({ loggedModels }) => !isEmpty(loggedModels));\n  const modelColumn = otherColumns.find((column) => column.id === 'models')?.column;\n\n  return metricsList.length ? (\n    <>\n      {header && (\n        <TableRow>\n          <TableCell css={{ flex: 1, backgroundColor: theme.colors.backgroundSecondary }}>\n            <Typography.Text bold>\n              {header} ({metricsList.length})\n            </Typography.Text>\n          </TableCell>\n        </TableRow>\n      )}\n      {metricsList.map(\n        ({\n          // Get metric key and value to display in table\n          key,\n          value,\n          loggedModels,\n        }) => (\n          <TableRow key={key}>\n            <TableCell\n              style={{\n                flex: keyColumn.getCanResize() ? keyColumn.getSize() / 100 : undefined,\n              }}\n            >\n              <Link\n                to={Routes.getRunPageTabRoute(\n                  runInfo.experimentId ?? '',\n                  runInfo.runUuid ?? '',\n                  RunPageTabName.MODEL_METRIC_CHARTS,\n                )}\n              >\n                {key}\n              </Link>\n            </TableCell>\n            <TableCell\n              css={{\n                flex: valueColumn?.getCanResize() ? valueColumn.getSize() / 100 : undefined,\n              }}\n            >\n              {value.toString()}\n            </TableCell>\n            {anyRowHasModels && (\n              <TableCell\n                css={{\n                  flex: modelColumn?.getCanResize() ? modelColumn.getSize() / 100 : undefined,\n                }}\n              >\n                {!isEmpty(loggedModels) ? (\n                  <Overflow>\n                    {loggedModels?.map((model) => (\n                      <Link\n                        key={model.info?.model_id}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        to={Routes.getExperimentLoggedModelDetailsPage(\n                          model.info?.experiment_id ?? '',\n                          model.info?.model_id ?? '',\n                        )}\n                      >\n                        {model.info?.name}\n                      </Link>\n                    ))}\n                  </Overflow>\n                ) : (\n                  '-'\n                )}\n              </TableCell>\n            )}\n          </TableRow>\n        ),\n      )}\n    </>\n  ) : null;\n};\n\n/**\n * Displays table with metrics key/values in run detail overview.\n */\nexport const RunViewMetricsTable = ({\n  latestMetrics,\n  runInfo,\n  loggedModels,\n}: {\n  latestMetrics: MetricEntitiesByName;\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  loggedModels?: LoggedModelProto[];\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const {\n    detailsPageTableStyles,\n    detailsPageNoEntriesStyles,\n    detailsPageNoResultsWrapperStyles,\n    usingUnifiedDetailsLayout,\n  } = useExperimentTrackingDetailsPageLayoutStyles();\n  const intl = useIntl();\n  const [filter, setFilter] = useState('');\n\n  /**\n   * Aggregate logged models by metric key.\n   * This is used to display the models associated with each metric in the table.\n   */\n  const loggedModelsByMetricKey = useMemo(() => {\n    if (!loggedModels) {\n      return {};\n    }\n    const metricsWithModels = compact(\n      flatMap(loggedModels, (model) => model.data?.metrics?.map(({ key }) => ({ key, model }))),\n    );\n    const groupedMetrics = groupBy(metricsWithModels, 'key');\n    return mapValues(groupedMetrics, (group) => group.map(({ model }) => model));\n  }, [loggedModels]);\n\n  /**\n   * Enrich the metric list with related logged models.\n   */\n  const metricValues = useMemo<MetricEntityWithLoggedModels[]>(() => {\n    const metricList = values(latestMetrics);\n\n    if (isEmpty(loggedModelsByMetricKey)) {\n      return metricList;\n    }\n    return metricList.map((metric) => ({\n      ...metric,\n      loggedModels: loggedModelsByMetricKey[metric.key] ?? [],\n    }));\n  }, [latestMetrics, loggedModelsByMetricKey]);\n\n  const anyRowHasModels = metricValues.some(({ loggedModels }) => !isEmpty(loggedModels));\n\n  const modelColumnDefs: ColumnDef<MetricEntityWithLoggedModels>[] = useMemo(\n    () => [\n      {\n        id: 'models',\n        header: intl.formatMessage({\n          defaultMessage: 'Models',\n          description: 'Run page > Overview > Metrics table > Models column header',\n        }),\n        accessorKey: 'models',\n        enableResizing: true,\n      },\n    ],\n    [intl],\n  );\n\n  const columns = useMemo(() => {\n    const columnDefs: ColumnDef<MetricEntityWithLoggedModels>[] = [\n      {\n        id: 'key',\n        accessorKey: 'key',\n        header: () => (\n          <FormattedMessage\n            defaultMessage=\"Metric\"\n            description=\"Run page > Overview > Metrics table > Key column header\"\n          />\n        ),\n        enableResizing: true,\n        size: 240,\n      },\n      {\n        id: 'value',\n        header: () => (\n          <FormattedMessage\n            defaultMessage=\"Value\"\n            description=\"Run page > Overview > Metrics table > Value column header\"\n          />\n        ),\n        accessorKey: 'value',\n        enableResizing: true,\n      },\n    ];\n\n    if (anyRowHasModels) {\n      columnDefs.push(...modelColumnDefs);\n    }\n\n    return columnDefs;\n  }, [anyRowHasModels, modelColumnDefs]);\n\n  // Break down metric lists into system and model segments. If no system (or model) metrics\n  // are detected, return a single segment.\n  const metricSegments = useMemo(() => {\n    const systemMetrics = metricValues.filter(({ key }) => isSystemMetricKey(key));\n    const modelMetrics = metricValues.filter(({ key }) => !isSystemMetricKey(key));\n    const isSegmented = systemMetrics.length > 0 && modelMetrics.length > 0;\n    if (!isSegmented) {\n      return [{ header: undefined, metrics: metricValues.filter(metricKeyMatchesFilter(filter)) }];\n    }\n    return [\n      {\n        header: intl.formatMessage(systemMetricsLabel),\n        metrics: systemMetrics.filter(metricKeyMatchesFilter(filter)),\n      },\n      {\n        header: intl.formatMessage(modelMetricsLabel),\n        metrics: modelMetrics.filter(metricKeyMatchesFilter(filter)),\n      },\n    ];\n  }, [filter, metricValues, intl]);\n\n  const table = useReactTable<MetricEntity>({\n    data: metricValues,\n    getCoreRowModel: getCoreRowModel(),\n    getRowId: (row) => row.key,\n    enableColumnResizing: true,\n    columnResizeMode: 'onChange',\n    columns,\n  });\n\n  const renderTableContent = () => {\n    if (!metricValues.length) {\n      return (\n        <div css={detailsPageNoEntriesStyles}>\n          <Empty\n            description={\n              <FormattedMessage\n                defaultMessage=\"No metrics recorded\"\n                description=\"Run page > Overview > Metrics table > No metrics recorded\"\n              />\n            }\n          />\n        </div>\n      );\n    }\n\n    const areAllResultsFiltered = sum(metricSegments.map(({ metrics }) => metrics.length)) < 1;\n\n    return (\n      <>\n        <div css={{ marginBottom: theme.spacing.sm }}>\n          <Input\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewmetricstable.tsx_186\"\n            prefix={<SearchIcon />}\n            placeholder={intl.formatMessage({\n              defaultMessage: 'Search metrics',\n              description: 'Run page > Overview > Metrics table > Filter input placeholder',\n            })}\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n            allowClear\n          />\n        </div>\n\n        <Table\n          scrollable\n          empty={\n            areAllResultsFiltered ? (\n              <div css={detailsPageNoResultsWrapperStyles}>\n                <Empty\n                  description={\n                    <FormattedMessage\n                      defaultMessage=\"No metrics match the search filter\"\n                      description=\"Message displayed when no metrics match the search filter in the run details page details metrics table\"\n                    />\n                  }\n                />\n              </div>\n            ) : null\n          }\n          css={detailsPageTableStyles}\n        >\n          <TableRow isHeader>\n            {table.getLeafHeaders().map((header) => (\n              <TableHeader\n                componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewmetricstable.tsx_312\"\n                key={header.id}\n                header={header}\n                column={header.column}\n                setColumnSizing={table.setColumnSizing}\n                isResizing={header.column.getIsResizing()}\n                style={{\n                  flex: header.column.getCanResize() ? header.column.getSize() / 100 : undefined,\n                }}\n              >\n                {flexRender(header.column.columnDef.header, header.getContext())}\n              </TableHeader>\n            ))}\n          </TableRow>\n          {metricSegments.map((segment, index) => (\n            <RunViewMetricsTableSection\n              key={segment.header || index}\n              metricsList={segment.metrics}\n              runInfo={runInfo}\n              header={segment.header}\n              table={table}\n            />\n          ))}\n        </Table>\n      </>\n    );\n  };\n  return (\n    <div\n      css={{\n        flex: usingUnifiedDetailsLayout ? '0 0 auto' : 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n      }}\n    >\n      <Typography.Title level={4} css={{ flexShrink: 0 }}>\n        <FormattedMessage\n          defaultMessage=\"Metrics ({length})\"\n          description=\"Run page > Overview > Metrics table > Section title\"\n          values={{ length: metricValues.filter(metricKeyMatchesFilter(filter)).length }}\n        />\n      </Typography.Title>\n      <div\n        css={{\n          padding: theme.spacing.sm,\n          border: `1px solid ${theme.colors.borderDecorative}`,\n          borderRadius: theme.general.borderRadiusBase,\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          overflow: 'hidden',\n        }}\n      >\n        {renderTableContent()}\n      </div>\n    </div>\n  );\n};\n","import type { RunDatasetWithTags, RunInfoEntity } from '../../../types';\nimport { KeyValueEntity } from '../../../../common/types';\nimport { Button, DropdownMenu, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport { ExperimentViewDatasetWithContext } from '../../experiment-page/components/runs/ExperimentViewDatasetWithContext';\nimport { useState } from 'react';\nimport {\n  DatasetWithRunType,\n  ExperimentViewDatasetDrawer,\n} from '../../experiment-page/components/runs/ExperimentViewDatasetDrawer';\nimport type { UseGetRunQueryResponseRunInfo } from '../hooks/useGetRunQuery';\n\n/**\n * Renders single dataset, either in overview table cell or within a dropdown\n */\nconst DatasetEntry = ({ dataset, onClick }: { dataset: RunDatasetWithTags; onClick: () => void }) => {\n  return (\n    <Typography.Link\n      componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewdatasetbox.tsx_16\"\n      role=\"link\"\n      css={{\n        textAlign: 'left',\n      }}\n      onClick={onClick}\n    >\n      <ExperimentViewDatasetWithContext datasetWithTags={dataset} displayTextAsLink css={{ margin: 0 }} />\n    </Typography.Link>\n  );\n};\n\n/**\n * Displays run datasets section in run detail overview.\n */\nexport const RunViewDatasetBox = ({\n  tags,\n  runInfo,\n  datasets,\n}: {\n  tags: Record<string, KeyValueEntity>;\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  datasets: RunDatasetWithTags[];\n}) => {\n  const [selectedDatasetWithRun, setSelectedDatasetWithRun] = useState<DatasetWithRunType | null>(null);\n  const { theme } = useDesignSystemTheme();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  if (!datasets || !datasets.length) {\n    return null;\n  }\n\n  const firstDataset = datasets[0];\n  const remainingDatasets = datasets.slice(1);\n\n  const datasetClicked = (dataset: RunDatasetWithTags) => {\n    setSelectedDatasetWithRun({\n      datasetWithTags: dataset,\n      runData: {\n        experimentId: runInfo.experimentId ?? undefined,\n        runUuid: runInfo.runUuid ?? '',\n        runName: runInfo.runName ?? undefined,\n        datasets: datasets,\n        tags: tags,\n      },\n    });\n    setIsDrawerOpen(true);\n  };\n\n  return (\n    <div css={{ display: 'flex', gap: theme.spacing.sm, alignItems: 'center' }}>\n      <DatasetEntry dataset={firstDataset} onClick={() => datasetClicked(firstDataset)} />\n      {remainingDatasets.length ? (\n        <DropdownMenu.Root modal={false}>\n          <DropdownMenu.Trigger asChild>\n            <Button\n              componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewdatasetbox.tsx_70\"\n              size=\"small\"\n            >\n              +{remainingDatasets.length}\n            </Button>\n          </DropdownMenu.Trigger>\n          <DropdownMenu.Content>\n            {remainingDatasets.map((datasetWithTags) => {\n              return (\n                <DropdownMenu.Item\n                  componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewdatasetbox.tsx_81\"\n                  key={datasetWithTags.dataset.digest}\n                >\n                  <DatasetEntry dataset={datasetWithTags} onClick={() => datasetClicked(datasetWithTags)} />\n                </DropdownMenu.Item>\n              );\n            })}\n          </DropdownMenu.Content>\n        </DropdownMenu.Root>\n      ) : null}\n      {selectedDatasetWithRun && (\n        <ExperimentViewDatasetDrawer\n          isOpen={isDrawerOpen}\n          setIsOpen={setIsDrawerOpen}\n          selectedDatasetWithRun={selectedDatasetWithRun}\n          setSelectedDatasetWithRun={setSelectedDatasetWithRun}\n        />\n      )}\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ReduxState, ThunkDispatch } from '../../../../redux-types';\nimport { useEffect, useMemo } from 'react';\nimport { getRunApi } from '../../../actions';\nimport { ParagraphSkeleton } from '@databricks/design-system';\nimport { Link } from '../../../../common/utils/RoutingUtils';\nimport Routes from '../../../routes';\nimport { FormattedMessage } from 'react-intl';\nimport { shouldEnableGraphQLRunDetailsPage } from '../../../../common/utils/FeatureUtils';\nimport { useGetRunQuery } from '../hooks/useGetRunQuery';\n\nexport const RunViewParentRunBox = ({ parentRunUuid }: { parentRunUuid: string }) => {\n  const dispatch = useDispatch<ThunkDispatch>();\n\n  const parentRunInfoRedux = useSelector(({ entities }: ReduxState) => {\n    return entities.runInfosByUuid[parentRunUuid];\n  });\n\n  const parentRunInfoGraphql = useGetRunQuery({\n    runUuid: parentRunUuid,\n    disabled: !shouldEnableGraphQLRunDetailsPage(),\n  });\n\n  const parentRunInfo = useMemo(() => {\n    return shouldEnableGraphQLRunDetailsPage() ? parentRunInfoGraphql?.data?.info : parentRunInfoRedux;\n  }, [parentRunInfoGraphql, parentRunInfoRedux]);\n\n  useEffect(() => {\n    // Don't call REST API if GraphQL is enabled\n    if (shouldEnableGraphQLRunDetailsPage()) {\n      return;\n    }\n    if (!parentRunInfo) {\n      dispatch(getRunApi(parentRunUuid));\n    }\n  }, [dispatch, parentRunUuid, parentRunInfo]);\n\n  if (!parentRunInfo) {\n    return (\n      <ParagraphSkeleton\n        loading\n        label={\n          <FormattedMessage\n            defaultMessage=\"Parent run name loading\"\n            description=\"Run page > Overview > Parent run name loading\"\n          />\n        }\n      />\n    );\n  }\n\n  if (!parentRunInfo.experimentId || !parentRunInfo.runUuid) {\n    return null;\n  }\n\n  return (\n    <Link to={Routes.getRunPageRoute(parentRunInfo.experimentId, parentRunInfo.runUuid)}>{parentRunInfo.runName}</Link>\n  );\n};\n","import { Button, PencilIcon, Spinner, Tooltip, useDesignSystemTheme } from '@databricks/design-system';\nimport { shouldUseSharedTaggingUI } from '../../../../common/utils/FeatureUtils';\nimport { useEditKeyValueTagsModal } from '../../../../common/hooks/useEditKeyValueTagsModal';\nimport { useTagAssignmentModal } from '../../../../common/hooks/useTagAssignmentModal';\nimport { KeyValueEntity } from '../../../../common/types';\nimport { KeyValueTag } from '../../../../common/components/KeyValueTag';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { keys, values } from 'lodash';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from '../../../../redux-types';\nimport { setRunTagsBulkApi, saveRunTagsApi } from '../../../actions';\nimport { useMemo, useState } from 'react';\nimport { isUserFacingTag } from '../../../../common/utils/TagUtils';\n\n/**\n * Displays run tags cell in run detail overview.\n */\nexport const RunViewTagsBox = ({\n  runUuid,\n  tags,\n  onTagsUpdated,\n}: {\n  runUuid: string;\n  tags: Record<string, KeyValueEntity>;\n  onTagsUpdated: () => void;\n}) => {\n  const sharedTaggingUIEnabled = shouldUseSharedTaggingUI();\n\n  const [isSavingTags, setIsSavingTags] = useState(false);\n\n  const { theme } = useDesignSystemTheme();\n  const dispatch = useDispatch<ThunkDispatch>();\n  const intl = useIntl();\n\n  // Get keys and tag entities while excluding system tags\n  const [visibleTagKeys, visibleTagEntities] = useMemo(\n    () => [keys(tags).filter(isUserFacingTag), values(tags).filter(({ key }) => isUserFacingTag(key))],\n    [tags],\n  );\n\n  const tagsKeyValueMap: KeyValueEntity[] = visibleTagEntities.map(({ key, value }) => ({ key, value }));\n\n  const { TagAssignmentModal, showTagAssignmentModal } = useTagAssignmentModal({\n    componentIdPrefix: 'mlflow.run-view-tags-box',\n    initialTags: tagsKeyValueMap,\n    isLoading: isSavingTags,\n    onSubmit: (newTags: KeyValueEntity[], deletedTags: KeyValueEntity[]) => {\n      setIsSavingTags(true);\n      return dispatch(saveRunTagsApi(runUuid, newTags, deletedTags)).then(() => {\n        setIsSavingTags(false);\n      });\n    },\n    onSuccess: onTagsUpdated,\n  });\n\n  const { EditTagsModal, showEditTagsModal, isLoading } = useEditKeyValueTagsModal({\n    valueRequired: true,\n    allAvailableTags: visibleTagKeys,\n    saveTagsHandler: async (_, existingTags, newTags) =>\n      dispatch(setRunTagsBulkApi(runUuid, existingTags, newTags)).then(onTagsUpdated),\n  });\n\n  const showEditModal = () => {\n    if (sharedTaggingUIEnabled) {\n      showTagAssignmentModal();\n      return;\n    }\n\n    showEditTagsModal({ tags: visibleTagEntities });\n  };\n\n  const editTagsLabel = intl.formatMessage({\n    defaultMessage: 'Edit tags',\n    description: \"Run page > Overview > Tags cell > 'Edit' button label\",\n  });\n\n  return (\n    <div\n      css={{\n        paddingTop: theme.spacing.xs,\n        paddingBottom: theme.spacing.xs,\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        '> *': {\n          marginRight: '0 !important',\n        },\n        gap: theme.spacing.xs,\n      }}\n    >\n      {tagsKeyValueMap.length < 1 ? (\n        <Button\n          componentId=\"mlflow.run_details.overview.tags.add_button\"\n          size=\"small\"\n          type=\"tertiary\"\n          onClick={showEditModal}\n        >\n          <FormattedMessage\n            defaultMessage=\"Add tags\"\n            description=\"Run page > Overview > Tags cell > 'Add' button label\"\n          />\n        </Button>\n      ) : (\n        <>\n          {tagsKeyValueMap.map((tag) => (\n            <KeyValueTag tag={tag} key={`${tag.key}-${tag.value}`} enableFullViewModal css={{ marginRight: 0 }} />\n          ))}\n          <Tooltip componentId=\"mlflow.run_details.overview.tags.edit_button.tooltip\" content={editTagsLabel}>\n            <Button\n              componentId=\"mlflow.run_details.overview.tags.edit_button\"\n              aria-label={editTagsLabel}\n              size=\"small\"\n              icon={<PencilIcon />}\n              onClick={showEditModal}\n            />\n          </Tooltip>\n        </>\n      )}\n      {isLoading && <Spinner size=\"small\" />}\n      {/** Old modal for editing tags */}\n      {EditTagsModal}\n      {/** New modal for editing tags, using shared tagging UI */}\n      {TagAssignmentModal}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { EditableNote } from '../../../../common/components/EditableNote';\nimport { KeyValueEntity } from '../../../../common/types';\nimport { NOTE_CONTENT_TAG } from '../../../utils/NoteUtils';\nimport { Button, PencilIcon, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from '../../../../redux-types';\nimport { setTagApi } from '../../../actions';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\n/**\n * Displays editable description section in run detail overview.\n */\nexport const RunViewDescriptionBox = ({\n  runUuid,\n  tags,\n  onDescriptionChanged,\n}: {\n  runUuid: string;\n  tags: Record<string, KeyValueEntity>;\n  onDescriptionChanged: () => void | Promise<void>;\n}) => {\n  const noteContent = tags[NOTE_CONTENT_TAG]?.value || '';\n\n  const [showNoteEditor, setShowNoteEditor] = useState(false);\n  const intl = useIntl();\n  const { theme } = useDesignSystemTheme();\n\n  const dispatch = useDispatch<ThunkDispatch>();\n\n  const handleSubmitEditNote = (markdown: string) =>\n    dispatch(setTagApi(runUuid, NOTE_CONTENT_TAG, markdown))\n      .then(onDescriptionChanged)\n      .then(() => setShowNoteEditor(false));\n  const handleCancelEditNote = () => setShowNoteEditor(false);\n\n  const isEmpty = !noteContent;\n\n  return (\n    <div css={{ marginBottom: theme.spacing.md }}>\n      <Typography.Title level={4} css={{ display: 'flex', alignItems: 'center', gap: theme.spacing.xs }}>\n        <FormattedMessage\n          defaultMessage=\"Description\"\n          description=\"Run page > Overview > Description section > Section title\"\n        />\n        <Button\n          componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewdescriptionbox.tsx_46\"\n          size=\"small\"\n          type=\"tertiary\"\n          aria-label={intl.formatMessage({\n            defaultMessage: 'Edit description',\n            description: 'Run page > Overview > Description section > Edit button label',\n          })}\n          onClick={() => setShowNoteEditor(true)}\n          icon={<PencilIcon />}\n        />\n      </Typography.Title>\n      {isEmpty && !showNoteEditor && (\n        <Typography.Hint>\n          <FormattedMessage\n            defaultMessage=\"No description\"\n            description=\"Run page > Overview > Description section > Empty value placeholder\"\n          />\n        </Typography.Hint>\n      )}\n      {(!isEmpty || showNoteEditor) && (\n        <EditableNote\n          defaultMarkdown={noteContent}\n          onSubmit={handleSubmitEditNote}\n          onCancel={handleCancelEditNote}\n          showEditor={showNoteEditor}\n        />\n      )}\n    </div>\n  );\n};\n","import { Overflow, Tag, useDesignSystemTheme } from '@databricks/design-system';\nimport { Link } from '../../../../common/utils/RoutingUtils';\nimport { ReactComponent as RegisteredModelOkIcon } from '../../../../common/static/registered-model-grey-ok.svg';\nimport type { RunPageModelVersionSummary } from '../hooks/useUnifiedRegisteredModelVersionsSummariesForRun';\n\n/**\n * Displays list of registered models in run detail overview.\n * TODO: expand with logged models after finalizing design\n */\nexport const RunViewRegisteredModelsBox = ({\n  registeredModelVersionSummaries,\n}: {\n  registeredModelVersionSummaries: RunPageModelVersionSummary[];\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <Overflow>\n      {registeredModelVersionSummaries?.map((modelSummary) => (\n        <Link\n          key={modelSummary.displayedName}\n          to={modelSummary.link}\n          css={{ display: 'flex', alignItems: 'center', gap: theme.spacing.sm }}\n        >\n          <RegisteredModelOkIcon /> {modelSummary.displayedName}{' '}\n          <Tag\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewregisteredmodelsbox.tsx_40\"\n            css={{ cursor: 'pointer' }}\n          >\n            v{modelSummary.version}\n          </Tag>\n        </Link>\n      ))}\n    </Overflow>\n  );\n};\n","import { QueryFunctionContext, useQuery, UseQueryOptions } from '@mlflow/mlflow/src/common/utils/reactQueryHooks';\nimport type { PromptVersionsForRunResponse, RegisteredPromptDetailsResponse, RegisteredPromptVersion } from '../types';\nimport { RegisteredPromptsApi } from '../api';\n\nconst queryFn = async ({ queryKey }: QueryFunctionContext<PromptVersionsForRunQueryKey>) => {\n  const [, { runUuid }] = queryKey;\n  return RegisteredPromptsApi.getPromptVersionsForRun(runUuid);\n};\n\ntype PromptVersionsForRunQueryKey = ['run_uuid', { runUuid: string }];\n\nexport const usePromptVersionsForRunQuery = (\n  { runUuid }: { runUuid: string },\n  options: UseQueryOptions<\n    PromptVersionsForRunResponse,\n    Error,\n    PromptVersionsForRunResponse,\n    PromptVersionsForRunQueryKey\n  > = {},\n) => {\n  const queryResult = useQuery<\n    PromptVersionsForRunResponse,\n    Error,\n    PromptVersionsForRunResponse,\n    PromptVersionsForRunQueryKey\n  >(['run_uuid', { runUuid }], {\n    queryFn,\n    retry: false,\n    ...options,\n  });\n\n  return {\n    data: queryResult.data,\n    error: queryResult.error ?? undefined,\n    isLoading: queryResult.isLoading,\n    refetch: queryResult.refetch,\n  };\n};\n","import { ParagraphSkeleton, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport type { KeyValueEntity } from '@mlflow/mlflow/src/common/types';\n\nimport { Link } from '../../../../common/utils/RoutingUtils';\nimport { usePromptVersionsForRunQuery } from '../../../pages/prompts/hooks/usePromptVersionsForRunQuery';\nimport Routes from '../../../routes';\nimport { parseLinkedPromptsFromRunTags } from '../../../pages/prompts/utils';\n\nexport const RunViewRegisteredPromptsBox = ({\n  tags,\n  runUuid,\n}: {\n  tags: Record<string, KeyValueEntity>;\n  runUuid: string;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  // This part is for supporting prompt versions created using mlflow < 3.1.0\n  const { data, error, isLoading } = usePromptVersionsForRunQuery({ runUuid });\n  const promptVersionsFromPromptTags = data?.model_versions || [];\n  const promptVersionsFromRunTags = parseLinkedPromptsFromRunTags(tags);\n  const promptVersions = [...promptVersionsFromPromptTags, ...promptVersionsFromRunTags];\n\n  if (isLoading) {\n    return <ParagraphSkeleton />;\n  }\n\n  if (error || !promptVersions || promptVersions.length === 0) {\n    return <Typography.Hint>—</Typography.Hint>;\n  }\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        flexDirection: 'row',\n        gap: theme.spacing.sm,\n        flexWrap: 'wrap',\n        padding: `${theme.spacing.sm}px 0px`,\n      }}\n    >\n      {promptVersions.map((promptVersion, index) => {\n        const to = Routes.getPromptDetailsPageRoute(encodeURIComponent(promptVersion.name));\n        const displayText = `${promptVersion.name} (v${promptVersion.version})`;\n        return (\n          <Typography.Text key={displayText} css={{ whiteSpace: 'nowrap' }}>\n            <Link to={to}>{displayText}</Link>\n            {index < promptVersions.length - 1 && ','}\n          </Typography.Text>\n        );\n      })}\n    </div>\n  );\n};\n","import { ModelsIcon, Overflow, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport { Link } from '../../../../common/utils/RoutingUtils';\nimport { RunInfoEntity } from '../../../types';\nimport { type LoggedModelProto } from '../../../types';\nimport Routes from '../../../routes';\nimport { first } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { useMemo } from 'react';\nimport type { UseGetRunQueryResponseRunInfo } from '../hooks/useGetRunQuery';\n\n/**\n * Displays list of registered models in run detail overview.\n */\nexport const RunViewLoggedModelsBox = ({\n  loggedModels,\n  loggedModelsV3,\n  runInfo,\n}: {\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  loggedModelsV3: LoggedModelProto[];\n  loggedModels: {\n    artifactPath: string;\n    flavors: string[];\n    utcTimeCreated: number;\n  }[];\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const { experimentId, runUuid } = runInfo;\n\n  const getModelFlavorName = (flavors: string[]) => {\n    return (\n      first(flavors) || (\n        <FormattedMessage\n          defaultMessage=\"Model\"\n          description=\"Run page > Overview > Logged models > Unknown model flavor\"\n        />\n      )\n    );\n  };\n\n  // Check if list has models with same flavor names.\n  // If true, display artifact path in dropdown menu to reduce ambiguity.\n  const shouldDisplayArtifactPaths = useMemo(() => {\n    const flavors = loggedModels.map((model) => getModelFlavorName(model.flavors));\n    const uniqueFlavors = new Set(flavors);\n    return uniqueFlavors.size !== flavors.length;\n  }, [loggedModels]);\n\n  return (\n    <Overflow>\n      {loggedModels.map((model, index) => {\n        return (\n          <Link\n            to={Routes.getRunPageRoute(experimentId ?? '', runUuid ?? '', model.artifactPath)}\n            key={model.artifactPath}\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: theme.spacing.sm,\n              cursor: 'pointer',\n              height: shouldDisplayArtifactPaths && index > 0 ? theme.general.heightBase : theme.general.heightSm,\n            }}\n          >\n            <ModelsIcon />\n            <div>\n              {getModelFlavorName(model.flavors)}\n              {shouldDisplayArtifactPaths && index > 0 && <Typography.Hint>{model.artifactPath}</Typography.Hint>}\n            </div>\n          </Link>\n        );\n      })}\n      {loggedModelsV3.map((model, index) => {\n        return (\n          <Link\n            to={Routes.getExperimentLoggedModelDetailsPageRoute(experimentId ?? '', model.info?.model_id ?? '')}\n            key={model.info?.model_id ?? index}\n            css={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: theme.spacing.sm,\n              cursor: 'pointer',\n              height: shouldDisplayArtifactPaths && index > 0 ? theme.general.heightBase : theme.general.heightSm,\n            }}\n          >\n            <ModelsIcon />\n            <div>{model.info?.name}</div>\n          </Link>\n        );\n      })}\n    </Overflow>\n  );\n};\n","import {\n  BranchIcon,\n  CopyIcon,\n  GitCommitIcon,\n  Tag,\n  LegacyTooltip,\n  Typography,\n  useDesignSystemTheme,\n  Popover,\n} from '@databricks/design-system';\nimport Utils from '../../../../common/utils/Utils';\nimport { KeyValueEntity } from '../../../../common/types';\nimport { MLFLOW_RUN_GIT_SOURCE_BRANCH_TAG } from '../../../constants';\nimport { CopyButton } from '@mlflow/mlflow/src/shared/building_blocks/CopyButton';\nimport { ExperimentSourceTypeIcon } from '../../ExperimentSourceTypeIcon';\n\nexport const RunViewSourceBox = ({\n  runUuid,\n  tags,\n  search,\n  className,\n}: {\n  runUuid: string;\n  tags: Record<string, KeyValueEntity>;\n  search: string;\n  className?: string;\n}) => {\n  const branchName = tags?.[MLFLOW_RUN_GIT_SOURCE_BRANCH_TAG]?.value;\n  const commitHash = tags?.[Utils.gitCommitTag]?.value;\n  const runSource = Utils.renderSource(tags, search, runUuid, branchName);\n\n  const { theme } = useDesignSystemTheme();\n  return runSource ? (\n    <div\n      css={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.spacing.sm,\n        paddingTop: theme.spacing.sm,\n        paddingBottom: theme.spacing.sm,\n        flexWrap: 'wrap',\n      }}\n      className={className}\n    >\n      <ExperimentSourceTypeIcon\n        sourceType={tags[Utils.sourceTypeTag]?.value}\n        css={{ color: theme.colors.actionPrimaryBackgroundDefault }}\n      />\n      {runSource}{' '}\n      {branchName && (\n        <LegacyTooltip title={branchName}>\n          <Tag\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_overview_runviewsourcebox.tsx_48\"\n            css={{ marginRight: 0 }}\n          >\n            <div css={{ display: 'flex', gap: 4, whiteSpace: 'nowrap' }}>\n              <BranchIcon /> {branchName}\n            </div>\n          </Tag>\n        </LegacyTooltip>\n      )}\n      {commitHash && (\n        <Popover.Root componentId=\"mlflow.run_details.overview.source.commit_hash_popover\">\n          <Popover.Trigger asChild>\n            <Tag\n              componentId=\"mlflow.run_details.overview.source.commit_hash\"\n              css={{ marginRight: 0, '&>div': { paddingRight: 0 } }}\n            >\n              <div css={{ display: 'flex', gap: theme.spacing.xs, whiteSpace: 'nowrap', alignContent: 'center' }}>\n                <GitCommitIcon />\n                {commitHash.slice(0, 7)}\n              </div>\n            </Tag>\n          </Popover.Trigger>\n          <Popover.Content align=\"start\">\n            <Popover.Arrow />\n            <div css={{ display: 'flex', gap: theme.spacing.xs, alignItems: 'center' }}>\n              {commitHash}\n              <CopyButton showLabel={false} size=\"small\" type=\"tertiary\" copyText={commitHash} icon={<CopyIcon />} />\n            </div>\n          </Popover.Content>\n        </Popover.Root>\n      )}\n    </div>\n  ) : (\n    <Typography.Hint>—</Typography.Hint>\n  );\n};\n","import {\n  Alert,\n  Button,\n  ColumnsIcon,\n  getShadowScrollStyles,\n  Spacer,\n  Typography,\n  useDesignSystemTheme,\n} from '@databricks/design-system';\nimport { Theme } from '@emotion/react';\nimport { useMemo, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useCombinedRunInputsOutputsModels } from '../../../hooks/logged-models/useCombinedRunInputsOutputsModels';\nimport { LoggedModelProto, RunInfoEntity } from '../../../types';\nimport { ExperimentLoggedModelListPageTable } from '../../experiment-logged-models/ExperimentLoggedModelListPageTable';\nimport {\n  ExperimentLoggedModelListPageKnownColumns,\n  useExperimentLoggedModelListPageTableColumns,\n} from '../../experiment-logged-models/hooks/useExperimentLoggedModelListPageTableColumns';\nimport { ExperimentLoggedModelOpenDatasetDetailsContextProvider } from '../../experiment-logged-models/hooks/useExperimentLoggedModelOpenDatasetDetails';\nimport {\n  UseGetRunQueryResponseInputs,\n  UseGetRunQueryResponseOutputs,\n  UseGetRunQueryResponseRunInfo,\n} from '../hooks/useGetRunQuery';\nimport { ExperimentLoggedModelListPageColumnSelector } from '../../experiment-logged-models/ExperimentLoggedModelListPageColumnSelector';\n\nconst supportedAttributeColumnKeys = [\n  ExperimentLoggedModelListPageKnownColumns.RelationshipType,\n  ExperimentLoggedModelListPageKnownColumns.Step,\n  ExperimentLoggedModelListPageKnownColumns.Name,\n  ExperimentLoggedModelListPageKnownColumns.Status,\n  ExperimentLoggedModelListPageKnownColumns.CreationTime,\n  ExperimentLoggedModelListPageKnownColumns.RegisteredModels,\n  ExperimentLoggedModelListPageKnownColumns.Dataset,\n];\n\nexport const RunViewLoggedModelsTable = ({\n  inputs,\n  outputs,\n  runInfo,\n  loggedModelsV3,\n  isLoadingLoggedModels = false,\n  loggedModelsError,\n}: {\n  inputs?: UseGetRunQueryResponseInputs;\n  outputs?: UseGetRunQueryResponseOutputs;\n  runInfo?: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  loggedModelsV3: LoggedModelProto[];\n  isLoadingLoggedModels?: boolean;\n  loggedModelsError?: Error;\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  const { models: loggedModels } = useCombinedRunInputsOutputsModels(inputs, outputs, runInfo, loggedModelsV3);\n\n  const [columnVisibility, setColumnVisibility] = useState<Record<string, boolean>>({});\n\n  const { columnDefs } = useExperimentLoggedModelListPageTableColumns({\n    loggedModels: loggedModels,\n    columnVisibility,\n    disablePinnedColumns: true,\n    disableOrderBy: true,\n    supportedAttributeColumnKeys,\n  });\n\n  return (\n    <div css={{ flex: 1, display: 'flex', flexDirection: 'column', overflow: 'hidden' }}>\n      <div css={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography.Title level={4} css={{ flexShrink: 0 }}>\n          <FormattedMessage\n            defaultMessage=\"Logged models ({length})\"\n            description=\"A header for a table of logged models displayed on the run page. The 'length' variable is being replaced with the number of displayed logged models.\"\n            values={{ length: loggedModels.length }}\n          />\n        </Typography.Title>\n        <ExperimentLoggedModelListPageColumnSelector\n          columnDefs={columnDefs}\n          onUpdateColumns={setColumnVisibility}\n          columnVisibility={columnVisibility}\n          customTrigger={<Button componentId=\"mlflow.logged_model.list.columns\" icon={<ColumnsIcon />} />}\n        />\n      </div>\n      <Spacer size=\"sm\" shrinks={false} />\n      <div\n        css={{\n          padding: theme.spacing.sm,\n          border: `1px solid ${theme.colors.border}`,\n          borderRadius: theme.general.borderRadiusBase,\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          overflow: 'hidden',\n        }}\n      >\n        {loggedModelsError instanceof Error && loggedModelsError.message && (\n          <>\n            <Alert\n              type=\"error\"\n              description={loggedModelsError.message}\n              message={\n                <FormattedMessage\n                  defaultMessage=\"Error loading logged models\"\n                  description=\"Error message displayed in the experiment run details page when loading logged models fails\"\n                />\n              }\n              closable={false}\n              componentId=\"mlflow.run_page.logged_model.list.error\"\n            />\n            <Spacer size=\"sm\" shrinks={false} />\n          </>\n        )}\n        <ExperimentLoggedModelOpenDatasetDetailsContextProvider>\n          <ExperimentLoggedModelListPageTable\n            columnDefs={columnDefs}\n            loggedModels={loggedModels}\n            columnVisibility={columnVisibility}\n            isLoading={isLoadingLoggedModels}\n            isLoadingMore={false}\n            moreResultsAvailable={false}\n            disableLoadMore\n            css={getTableTheme(theme)}\n            displayShowExampleButton={false}\n          />\n        </ExperimentLoggedModelOpenDatasetDetailsContextProvider>\n      </div>\n    </div>\n  );\n};\n\nconst getTableTheme = (theme: Theme) => ({\n  '&.ag-theme-balham': {\n    '--ag-border-color': theme.colors.border,\n    '--ag-row-border-color': theme.colors.border,\n    '--ag-foreground-color': theme.colors.textPrimary,\n    '--ag-background-color': 'transparent',\n    '--ag-odd-row-background-color': 'transparent',\n    '--ag-row-hover-color': theme.colors.actionDefaultBackgroundHover,\n    '--ag-selected-row-background-color': theme.colors.actionDefaultBackgroundPress,\n    '--ag-header-foreground-color': theme.colors.textPrimary,\n    '--ag-header-background-color': theme.colors.backgroundPrimary,\n    '--ag-modal-overlay-background-color': theme.colors.overlayOverlay,\n    '.ag-header-row.ag-header-row-column-group': {\n      '--ag-header-foreground-color': theme.colors.textPrimary,\n    },\n    borderTop: 0,\n    fontSize: theme.typography.fontSizeBase,\n    '.ag-center-cols-viewport': {\n      ...getShadowScrollStyles(theme, {\n        orientation: 'horizontal',\n      }),\n    },\n  },\n});\n","import { compact, uniq, uniqBy } from 'lodash';\nimport { useMemo } from 'react';\nimport type {\n  UseGetRunQueryResponseInputs,\n  UseGetRunQueryResponseOutputs,\n  UseGetRunQueryResponseRunInfo,\n} from '../../components/run-page/hooks/useGetRunQuery';\nimport type { LoggedModelProto, RunInfoEntity } from '../../types';\n\ntype LoggedModelProtoWithRunDirection = LoggedModelProto & { direction: 'input' | 'output'; step?: string };\n\nconst filterMetricsByMatchingRunId = (runUuid?: string | null) => (loggedModel: LoggedModelProtoWithRunDirection) => {\n  if (loggedModel.data?.metrics) {\n    return {\n      ...loggedModel,\n      data: {\n        ...loggedModel.data,\n        metrics: loggedModel.data.metrics.filter((metric) => !runUuid || metric.run_id === runUuid),\n      },\n    };\n  }\n  return loggedModel;\n};\n\nexport const useCombinedRunInputsOutputsModels = (\n  inputs?: UseGetRunQueryResponseInputs,\n  outputs?: UseGetRunQueryResponseOutputs,\n  runInfo?: RunInfoEntity | UseGetRunQueryResponseRunInfo,\n  loggedModelsV3?: LoggedModelProto[],\n) => {\n  const inputLoggedModels = useMemo(() => {\n    const inputModelIds = compact(uniq(inputs?.modelInputs?.map((modelInput) => modelInput.modelId)));\n    return inputModelIds.map<LoggedModelProtoWithRunDirection | undefined>((model_id) => {\n      const model = loggedModelsV3?.find((model) => model.info?.model_id === model_id);\n      if (!model) return undefined;\n      return { ...model, direction: 'input' as const };\n    });\n  }, [inputs?.modelInputs, loggedModelsV3]);\n\n  const outputLoggedModels = useMemo(() => {\n    const outputModelIds = compact(uniq(outputs?.modelOutputs?.map((modelOutput) => modelOutput.modelId)));\n    return outputModelIds.map<LoggedModelProtoWithRunDirection | undefined>((model_id) => {\n      const model = loggedModelsV3?.find((model) => model.info?.model_id === model_id);\n\n      const correspondingOutputEntry = outputs?.modelOutputs?.find(({ modelId }) => modelId === model?.info?.model_id);\n\n      if (!model) return undefined;\n      return { ...model, direction: 'output' as const, step: correspondingOutputEntry?.step ?? undefined };\n    });\n  }, [outputs?.modelOutputs, loggedModelsV3]);\n\n  const modelsWithDirection = useMemo(() => {\n    return (\n      uniqBy(\n        compact([...inputLoggedModels, ...outputLoggedModels]).map(filterMetricsByMatchingRunId(runInfo?.runUuid)),\n        (modelData) => modelData.info?.model_id,\n      ) ?? []\n    );\n  }, [inputLoggedModels, outputLoggedModels, runInfo]);\n\n  return { models: modelsWithDirection };\n};\n","import { Overflow, Typography, useDesignSystemTheme } from '@databricks/design-system';\nimport { useState } from 'react';\nimport type { RunDatasetWithTags, RunInfoEntity } from '../../../types';\nimport { KeyValueEntity } from '../../../../common/types';\nimport {\n  DatasetWithRunType,\n  ExperimentViewDatasetDrawer,\n} from '../../experiment-page/components/runs/ExperimentViewDatasetDrawer';\nimport { ExperimentViewDatasetWithContext } from '../../experiment-page/components/runs/ExperimentViewDatasetWithContext';\nimport type { UseGetRunQueryResponseRunInfo } from '../hooks/useGetRunQuery';\n\n/**\n * Displays run datasets section in run detail overview.\n */\nexport const RunViewDatasetBoxV2 = ({\n  tags,\n  runInfo,\n  datasets,\n}: {\n  tags: Record<string, KeyValueEntity>;\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  datasets: RunDatasetWithTags[];\n}) => {\n  const [selectedDatasetWithRun, setSelectedDatasetWithRun] = useState<DatasetWithRunType | null>(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  if (!datasets || !datasets.length) {\n    return null;\n  }\n\n  const datasetClicked = (dataset: RunDatasetWithTags) => {\n    setSelectedDatasetWithRun({\n      datasetWithTags: dataset,\n      runData: {\n        experimentId: runInfo.experimentId ?? undefined,\n        runUuid: runInfo.runUuid ?? '',\n        runName: runInfo.runName ?? undefined,\n        datasets: datasets,\n        tags: tags,\n      },\n    });\n    setIsDrawerOpen(true);\n  };\n\n  return (\n    <>\n      <Overflow>\n        {datasets.map((datasetWithTags) => (\n          // eslint-disable-next-line react/jsx-key\n          <Typography.Link\n            componentId=\"mlflow.run_details.datasets_box.dataset_link\"\n            css={{\n              textAlign: 'left',\n              '.anticon': {\n                fontSize: theme.general.iconFontSize,\n              },\n            }}\n            onClick={() => datasetClicked(datasetWithTags)}\n          >\n            <ExperimentViewDatasetWithContext datasetWithTags={datasetWithTags} displayTextAsLink css={{ margin: 0 }} />\n          </Typography.Link>\n        ))}\n      </Overflow>\n      {selectedDatasetWithRun && (\n        <ExperimentViewDatasetDrawer\n          isOpen={isDrawerOpen}\n          setIsOpen={setIsDrawerOpen}\n          selectedDatasetWithRun={selectedDatasetWithRun}\n          setSelectedDatasetWithRun={setSelectedDatasetWithRun}\n        />\n      )}\n    </>\n  );\n};\n","import { Button, FileIcon, useDesignSystemTheme } from '@databricks/design-system';\nimport { KeyValueProperty, NoneCell, AsideSections } from '@databricks/web-shared/utils';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { LoggedModelProto, RunDatasetWithTags, RunInfoEntity } from '../../../types';\nimport { KeyValueEntity } from '../../../../common/types';\nimport { UseGetRunQueryResponseRunInfo } from './useGetRunQuery';\nimport Utils from '../../../../common/utils/Utils';\nimport { RunViewTagsBox } from '../overview/RunViewTagsBox';\nimport { RunViewUserLinkBox } from '../overview/RunViewUserLinkBox';\nimport { DetailsOverviewCopyableIdBox } from '../../DetailsOverviewCopyableIdBox';\nimport { RunViewStatusBox } from '../overview/RunViewStatusBox';\nimport { RunViewParentRunBox } from '../overview/RunViewParentRunBox';\nimport { EXPERIMENT_PARENT_ID_TAG } from '../../experiment-page/utils/experimentPage.common-utils';\nimport { RunViewDatasetBoxV2 } from '../overview/RunViewDatasetBoxV2';\nimport { RunViewSourceBox } from '../overview/RunViewSourceBox';\nimport { Link, useLocation } from '../../../../common/utils/RoutingUtils';\nimport { RunViewLoggedModelsBox } from '../overview/RunViewLoggedModelsBox';\nimport { useMemo } from 'react';\nimport { RunPageModelVersionSummary } from './useUnifiedRegisteredModelVersionsSummariesForRun';\nimport { RunViewRegisteredModelsBox } from '../overview/RunViewRegisteredModelsBox';\nimport Routes from '../../../routes';\n\nenum RunDetailsPageMetadataSections {\n  DETAILS = 'DETAILS',\n  DATASETS = 'DATASETS',\n  TAGS = 'TAGS',\n  REGISTERED_MODELS = 'REGISTERED_MODELS',\n}\n\nexport const useRunDetailsPageOverviewSectionsV2 = ({\n  runUuid,\n  runInfo,\n  tags,\n  onTagsUpdated,\n  datasets,\n  shouldRenderLoggedModelsBox,\n  loggedModelsV3,\n  registeredModelVersionSummaries,\n}: {\n  runUuid: string;\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  tags: Record<string, KeyValueEntity>;\n  onTagsUpdated: () => void;\n  datasets?: RunDatasetWithTags[];\n  shouldRenderLoggedModelsBox?: boolean;\n  loggedModelsV3: LoggedModelProto[];\n  registeredModelVersionSummaries: RunPageModelVersionSummary[];\n}): AsideSections => {\n  const intl = useIntl();\n  const { theme } = useDesignSystemTheme();\n  const { search } = useLocation();\n  const loggedModelsFromTags = useMemo(() => Utils.getLoggedModelsFromTags(tags), [tags]);\n\n  const parentRunIdTag = tags[EXPERIMENT_PARENT_ID_TAG];\n\n  const detailsContent = runInfo && (\n    <>\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Created at',\n          description: 'Run page > Overview > Run start time section label',\n        })}\n        value={runInfo.startTime ? Utils.formatTimestamp(runInfo.startTime, intl) : <NoneCell />}\n      />\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Created by',\n          description: 'Run page > Overview > Run author section label',\n        })}\n        value={<RunViewUserLinkBox runInfo={runInfo} tags={tags} />}\n      />\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Experiment ID',\n          description: 'Run page > Overview > experiment ID section label',\n        })}\n        value={\n          <DetailsOverviewCopyableIdBox\n            value={runInfo?.experimentId ?? ''}\n            element={\n              runInfo?.experimentId ? (\n                <Link to={Routes.getExperimentPageRoute(runInfo.experimentId)}>{runInfo?.experimentId}</Link>\n              ) : undefined\n            }\n          />\n        }\n      />\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Status',\n          description: 'Run page > Overview > Run status section label',\n        })}\n        value={<RunViewStatusBox status={runInfo.status} />}\n      />\n\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Run ID',\n          description: 'Run page > Overview > Run ID section label',\n        })}\n        value={<DetailsOverviewCopyableIdBox value={runInfo.runUuid ?? ''} />}\n      />\n\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Duration',\n          description: 'Run page > Overview > Run duration section label',\n        })}\n        value={Utils.getDuration(runInfo.startTime, runInfo.endTime)}\n      />\n\n      {parentRunIdTag && (\n        <KeyValueProperty\n          keyValue={intl.formatMessage({\n            defaultMessage: 'Parent run',\n            description: 'Run page > Overview > Parent run',\n          })}\n          value={<RunViewParentRunBox parentRunUuid={parentRunIdTag.value} />}\n        />\n      )}\n      <KeyValueProperty\n        keyValue={intl.formatMessage({\n          defaultMessage: 'Source',\n          description: 'Run page > Overview > Run source section label',\n        })}\n        value={\n          <RunViewSourceBox\n            tags={tags}\n            search={search}\n            runUuid={runUuid}\n            css={{\n              paddingTop: theme.spacing.xs,\n              paddingBottom: theme.spacing.xs,\n            }}\n          />\n        }\n      />\n      {shouldRenderLoggedModelsBox && (\n        <KeyValueProperty\n          keyValue={intl.formatMessage({\n            defaultMessage: 'Logged models',\n            description: 'Run page > Overview > Run models section label',\n          })}\n          value={\n            <RunViewLoggedModelsBox\n              // Pass the run info and logged models\n              runInfo={runInfo}\n              loggedModels={loggedModelsFromTags}\n              loggedModelsV3={loggedModelsV3}\n            />\n          }\n        />\n      )}\n    </>\n  );\n\n  return [\n    {\n      id: RunDetailsPageMetadataSections.DETAILS,\n      title: intl.formatMessage({\n        defaultMessage: 'About this run',\n        description: 'Title for the details/metadata section on the run details page',\n      }),\n      content: detailsContent,\n    },\n    {\n      id: RunDetailsPageMetadataSections.DATASETS,\n      title: intl.formatMessage({\n        defaultMessage: 'Datasets',\n        description: 'Title for the datasets section on the run details page',\n      }),\n      content: datasets?.length ? (\n        <RunViewDatasetBoxV2 tags={tags} runInfo={runInfo} datasets={datasets} />\n      ) : (\n        <NoneCell />\n      ),\n    },\n    {\n      id: RunDetailsPageMetadataSections.TAGS,\n      title: intl.formatMessage({\n        defaultMessage: 'Tags',\n        description: 'Title for the tags section on the run details page',\n      }),\n      content: <RunViewTagsBox runUuid={runInfo.runUuid ?? ''} tags={tags} onTagsUpdated={onTagsUpdated} />,\n    },\n    {\n      id: RunDetailsPageMetadataSections.REGISTERED_MODELS,\n      title: intl.formatMessage({\n        defaultMessage: 'Registered models',\n        description: 'Title for the registered models section on the run details page',\n      }),\n      content:\n        registeredModelVersionSummaries?.length > 0 ? (\n          <RunViewRegisteredModelsBox registeredModelVersionSummaries={registeredModelVersionSummaries} />\n        ) : (\n          <NoneCell />\n        ),\n    },\n  ];\n};\n","import { FormattedMessage, useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\n\nimport { Button, FileIcon, Spacer, Spinner, Typography, useDesignSystemTheme } from '@databricks/design-system';\n\nimport Utils from '../../../common/utils/Utils';\nimport type { ReduxState } from '../../../redux-types';\nimport { useLocation } from '../../../common/utils/RoutingUtils';\nimport { EXPERIMENT_PARENT_ID_TAG } from '../experiment-page/utils/experimentPage.common-utils';\n\nimport { RunViewStatusBox } from './overview/RunViewStatusBox';\nimport { RunViewUserLinkBox } from './overview/RunViewUserLinkBox';\nimport { DetailsOverviewParamsTable } from '../DetailsOverviewParamsTable';\nimport { RunViewMetricsTable } from './overview/RunViewMetricsTable';\nimport { RunViewDatasetBox } from './overview/RunViewDatasetBox';\nimport { RunViewParentRunBox } from './overview/RunViewParentRunBox';\nimport { RunViewTagsBox } from './overview/RunViewTagsBox';\nimport { RunViewDescriptionBox } from './overview/RunViewDescriptionBox';\nimport { DetailsOverviewMetadataRow } from '../DetailsOverviewMetadataRow';\nimport { RunViewRegisteredModelsBox } from './overview/RunViewRegisteredModelsBox';\nimport { RunViewRegisteredPromptsBox } from './overview/RunViewRegisteredPromptsBox';\nimport { RunViewLoggedModelsBox } from './overview/RunViewLoggedModelsBox';\nimport { RunViewSourceBox } from './overview/RunViewSourceBox';\nimport { DetailsOverviewMetadataTable } from '@mlflow/mlflow/src/experiment-tracking/components/DetailsOverviewMetadataTable';\nimport type { LoggedModelProto } from '../../types';\nimport { useExperimentLoggedModelRegisteredVersions } from '../experiment-logged-models/hooks/useExperimentLoggedModelRegisteredVersions';\nimport { DetailsOverviewCopyableIdBox } from '../DetailsOverviewCopyableIdBox';\nimport type { RunInfoEntity } from '../../types';\nimport type {\n  UseGetRunQueryResponseInputs,\n  UseGetRunQueryResponseOutputs,\n  UseGetRunQueryResponseRunInfo,\n} from './hooks/useGetRunQuery';\nimport type { MetricEntitiesByName, RunDatasetWithTags } from '../../types';\nimport { KeyValueEntity } from '../../../common/types';\nimport { type RunPageModelVersionSummary } from './hooks/useUnifiedRegisteredModelVersionsSummariesForRun';\nimport { isEmpty, uniqBy } from 'lodash';\nimport { RunViewLoggedModelsTable } from './overview/RunViewLoggedModelsTable';\nimport { isRunPageLoggedModelsTableEnabled } from '../../../common/utils/FeatureUtils';\nimport { useExperimentTrackingDetailsPageLayoutStyles } from '../../hooks/useExperimentTrackingDetailsPageLayoutStyles';\nimport { DetailsPageLayout } from '../../../common/components/details-page-layout/DetailsPageLayout';\nimport { useRunDetailsPageOverviewSectionsV2 } from './hooks/useRunDetailsPageOverviewSectionsV2';\n\nconst EmptyValue = () => <Typography.Hint>—</Typography.Hint>;\n\nexport const RunViewOverview = ({\n  runUuid,\n  onRunDataUpdated,\n  tags,\n  runInfo,\n  datasets,\n  params,\n  latestMetrics,\n  runInputs,\n  runOutputs,\n  registeredModelVersionSummaries: registeredModelVersionSummariesForRun,\n  loggedModelsV3 = [],\n  isLoadingLoggedModels = false,\n  loggedModelsError,\n}: {\n  runUuid: string;\n  onRunDataUpdated: () => void | Promise<any>;\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  tags: Record<string, KeyValueEntity>;\n  latestMetrics: MetricEntitiesByName;\n  runInputs?: UseGetRunQueryResponseInputs;\n  runOutputs?: UseGetRunQueryResponseOutputs;\n  datasets?: RunDatasetWithTags[];\n  params: Record<string, KeyValueEntity>;\n  registeredModelVersionSummaries: RunPageModelVersionSummary[];\n  loggedModelsV3?: LoggedModelProto[];\n  isLoadingLoggedModels?: boolean;\n  loggedModelsError?: Error;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const { usingUnifiedDetailsLayout } = useExperimentTrackingDetailsPageLayoutStyles();\n  const { search } = useLocation();\n  const intl = useIntl();\n\n  const loggedModelsFromTags = useMemo(() => Utils.getLoggedModelsFromTags(tags), [tags]);\n  const parentRunIdTag = tags[EXPERIMENT_PARENT_ID_TAG];\n  const containsLoggedModelsFromInputsOutputs = !isEmpty(runInputs?.modelInputs) || !isEmpty(runOutputs?.modelOutputs);\n  const shouldRenderLoggedModelsBox = !isRunPageLoggedModelsTableEnabled() || !containsLoggedModelsFromInputsOutputs;\n\n  // We have two flags for controlling the visibility of the \"logged models\" section:\n  // - `shouldRenderLoggedModelsBox` determines if \"logged models\" section should be rendered.\n  //   It is hidden if any IAv3 logged models are detected in inputs/outputs, in this case we're\n  //   displaying a big table instead.\n  // - `shouldDisplayContentsOfLoggedModelsBox` determines if the contents of the \"logged models\"\n  //   section should be displayed. It is hidden if there are no logged models to display.\n  const shouldDisplayContentsOfLoggedModelsBox = loggedModelsFromTags?.length > 0 || loggedModelsV3?.length > 0;\n  const { modelVersions: loggedModelsV3RegisteredModels } = useExperimentLoggedModelRegisteredVersions({\n    loggedModels: loggedModelsV3,\n  });\n\n  /**\n   * We have to query multiple sources for registered model versions (logged models API, models API, UC)\n   * and it's possible to end up with duplicates.\n   * We can dedupe them using `link` field, which should be unique for each model.\n   */\n  const registeredModelVersionSummaries = uniqBy(\n    [...registeredModelVersionSummariesForRun, ...loggedModelsV3RegisteredModels],\n    (model) => model?.link,\n  );\n\n  const renderPromptMetadataRow = () => {\n    return (\n      <DetailsOverviewMetadataRow\n        title={\n          <FormattedMessage\n            defaultMessage=\"Registered prompts\"\n            description=\"Run page > Overview > Run prompts section label\"\n          />\n        }\n        value={<RunViewRegisteredPromptsBox tags={tags} runUuid={runUuid} />}\n      />\n    );\n  };\n\n  const renderDetails = () => {\n    return (\n      <DetailsOverviewMetadataTable>\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage\n              defaultMessage=\"Created at\"\n              description=\"Run page > Overview > Run start time section label\"\n            />\n          }\n          value={runInfo.startTime ? Utils.formatTimestamp(runInfo.startTime, intl) : <EmptyValue />}\n        />\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage\n              defaultMessage=\"Created by\"\n              description=\"Run page > Overview > Run author section label\"\n            />\n          }\n          value={<RunViewUserLinkBox runInfo={runInfo} tags={tags} />}\n        />\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage\n              defaultMessage=\"Experiment ID\"\n              description=\"Run page > Overview > experiment ID section label\"\n            />\n          }\n          value={<DetailsOverviewCopyableIdBox value={runInfo?.experimentId ?? ''} />}\n        />\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage defaultMessage=\"Status\" description=\"Run page > Overview > Run status section label\" />\n          }\n          value={<RunViewStatusBox status={runInfo.status} />}\n        />\n        <DetailsOverviewMetadataRow\n          title={<FormattedMessage defaultMessage=\"Run ID\" description=\"Run page > Overview > Run ID section label\" />}\n          value={<DetailsOverviewCopyableIdBox value={runInfo.runUuid ?? ''} />}\n        />\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage\n              defaultMessage=\"Duration\"\n              description=\"Run page > Overview > Run duration section label\"\n            />\n          }\n          value={Utils.getDuration(runInfo.startTime, runInfo.endTime)}\n        />\n        {parentRunIdTag && (\n          <DetailsOverviewMetadataRow\n            title={<FormattedMessage defaultMessage=\"Parent run\" description=\"Run page > Overview > Parent run\" />}\n            value={<RunViewParentRunBox parentRunUuid={parentRunIdTag.value} />}\n          />\n        )}\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage\n              defaultMessage=\"Datasets used\"\n              description=\"Run page > Overview > Run datasets section label\"\n            />\n          }\n          value={\n            datasets?.length ? <RunViewDatasetBox tags={tags} runInfo={runInfo} datasets={datasets} /> : <EmptyValue />\n          }\n        />\n        <DetailsOverviewMetadataRow\n          title={<FormattedMessage defaultMessage=\"Tags\" description=\"Run page > Overview > Run tags section label\" />}\n          value={<RunViewTagsBox runUuid={runInfo.runUuid ?? ''} tags={tags} onTagsUpdated={onRunDataUpdated} />}\n        />\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage defaultMessage=\"Source\" description=\"Run page > Overview > Run source section label\" />\n          }\n          value={<RunViewSourceBox tags={tags} search={search} runUuid={runUuid} />}\n        />\n        {shouldRenderLoggedModelsBox && (\n          <DetailsOverviewMetadataRow\n            title={\n              <FormattedMessage\n                defaultMessage=\"Logged models\"\n                description=\"Run page > Overview > Run models section label\"\n              />\n            }\n            value={\n              isLoadingLoggedModels ? (\n                <Spinner />\n              ) : shouldDisplayContentsOfLoggedModelsBox ? (\n                <RunViewLoggedModelsBox\n                  // Pass the run info and logged models\n                  runInfo={runInfo}\n                  loggedModels={loggedModelsFromTags}\n                  // Provide loggedModels from IA v3\n                  loggedModelsV3={loggedModelsV3}\n                />\n              ) : (\n                <EmptyValue />\n              )\n            }\n          />\n        )}\n        <DetailsOverviewMetadataRow\n          title={\n            <FormattedMessage\n              defaultMessage=\"Registered models\"\n              description=\"Run page > Overview > Run models section label\"\n            />\n          }\n          value={\n            registeredModelVersionSummaries?.length > 0 ? (\n              <RunViewRegisteredModelsBox registeredModelVersionSummaries={registeredModelVersionSummaries} />\n            ) : (\n              <EmptyValue />\n            )\n          }\n        />\n        {renderPromptMetadataRow()}\n      </DetailsOverviewMetadataTable>\n    );\n  };\n\n  const renderParams = () => {\n    return <DetailsOverviewParamsTable params={params} />;\n  };\n\n  const detailsSectionsV2 = useRunDetailsPageOverviewSectionsV2({\n    runUuid,\n    runInfo,\n    tags,\n    onTagsUpdated: onRunDataUpdated,\n    datasets,\n    loggedModelsV3,\n    shouldRenderLoggedModelsBox,\n    registeredModelVersionSummaries,\n  });\n  const usingSidebarLayout = usingUnifiedDetailsLayout;\n  return (\n    <DetailsPageLayout\n      css={{ flex: 1, alignSelf: 'flex-start' }}\n      //\n      // Enable sidebar layout based on feature flag\n      usingSidebarLayout={usingSidebarLayout}\n      secondarySections={detailsSectionsV2}\n    >\n      <RunViewDescriptionBox runUuid={runUuid} tags={tags} onDescriptionChanged={onRunDataUpdated} />\n      {!usingSidebarLayout && (\n        <>\n          <Typography.Title level={4}>\n            <FormattedMessage defaultMessage=\"Details\" description=\"Run page > Overview > Details section title\" />\n          </Typography.Title>\n          {renderDetails()}\n        </>\n      )}\n      <div\n        // Use different grid setup for unified details page layout\n        css={[\n          usingSidebarLayout ? { flexDirection: 'column' } : { minHeight: 360, maxHeight: 760 },\n          { display: 'flex', gap: theme.spacing.lg, overflow: 'hidden' },\n        ]}\n      >\n        <RunViewMetricsTable latestMetrics={latestMetrics} runInfo={runInfo} loggedModels={loggedModelsV3} />\n        {renderParams()}\n      </div>\n      {isRunPageLoggedModelsTableEnabled() && containsLoggedModelsFromInputsOutputs && (\n        <>\n          <Spacer />\n          <div css={{ minHeight: 360, maxHeight: 760, overflow: 'hidden', display: 'flex' }}>\n            <RunViewLoggedModelsTable\n              loggedModelsV3={loggedModelsV3}\n              isLoadingLoggedModels={isLoadingLoggedModels}\n              inputs={runInputs}\n              outputs={runOutputs}\n              runInfo={runInfo}\n              loggedModelsError={loggedModelsError}\n            />\n          </div>\n        </>\n      )}\n      {!usingSidebarLayout && <Spacer />}\n    </DetailsPageLayout>\n  );\n};\n","import Routes from '../routes';\nimport { ErrorView } from '../../common/components/ErrorView';\n\ntype Props = {\n  runId: string;\n};\n\nexport function RunNotFoundView({ runId }: Props) {\n  return (\n    <ErrorView\n      statusCode={404}\n      subMessage={`Run ID ${runId} does not exist`}\n      fallbackHomePageReactRoute={Routes.rootRoute}\n    />\n  );\n}\n","import type { MetricHistoryByName, RunInfoEntity } from '../../types';\nimport {\n  containsMultipleRunsTooltipData,\n  RunsChartsTooltipMode,\n  type RunsChartsTooltipBodyProps,\n} from '../runs-charts/hooks/useRunsChartsTooltip';\nimport { isSystemMetricKey } from '../../utils/MetricsUtils';\nimport Utils from '../../../common/utils/Utils';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { isUndefined } from 'lodash';\nimport type {\n  RunsCompareMultipleTracesTooltipData,\n  RunsMetricsSingleTraceTooltipData,\n} from '../runs-charts/components/RunsMetricsLinePlot';\nimport type { RunsMetricsBarPlotHoverData } from '../runs-charts/components/RunsMetricsBarPlot';\nimport { RunsMultipleTracesTooltipBody } from '../runs-charts/components/RunsMultipleTracesTooltipBody';\nimport { Spacer, Typography } from '@databricks/design-system';\n\n/**\n * Tooltip body displayed when hovering over run view metric charts\n */\nexport const RunViewChartTooltipBody = ({\n  contextData: { metricsForRun },\n  hoverData,\n  chartData: { metricKey },\n  isHovering,\n  mode,\n}: RunsChartsTooltipBodyProps<\n  { metricsForRun: MetricHistoryByName },\n  { metricKey: string },\n  RunsMetricsBarPlotHoverData | RunsMetricsSingleTraceTooltipData | RunsCompareMultipleTracesTooltipData\n>) => {\n  const singleTraceHoverData = containsMultipleRunsTooltipData(hoverData) ? hoverData.hoveredDataPoint : hoverData;\n  const intl = useIntl();\n\n  if (\n    mode === RunsChartsTooltipMode.MultipleTracesWithScanline &&\n    containsMultipleRunsTooltipData(hoverData) &&\n    isHovering\n  ) {\n    return <RunsMultipleTracesTooltipBody hoverData={hoverData} />;\n  }\n\n  if (!singleTraceHoverData?.metricEntity) {\n    return null;\n  }\n\n  const { timestamp, step, value } = singleTraceHoverData.metricEntity;\n\n  const metricContainsHistory = metricsForRun?.[metricKey]?.length > 1;\n  const isSystemMetric = isSystemMetricKey(metricKey);\n  const displayTimestamp = metricContainsHistory && isSystemMetric && !isUndefined(timestamp);\n  const displayStep = metricContainsHistory && !isSystemMetric && !isUndefined(step);\n\n  return (\n    <div>\n      {displayStep && (\n        <div css={styles.valueField}>\n          <strong>\n            <FormattedMessage defaultMessage=\"Step\" description=\"Run page > Charts tab > Chart tooltip > Step label\" />:\n          </strong>{' '}\n          {step}\n        </div>\n      )}\n      {displayTimestamp && (\n        <div css={styles.valueField}>\n          <strong>\n            <FormattedMessage\n              defaultMessage=\"Timestamp\"\n              description=\"Run page > Charts tab > Chart tooltip > Timestamp label\"\n            />\n            :\n          </strong>{' '}\n          {Utils.formatTimestamp(timestamp, intl)}\n        </div>\n      )}\n      {value && (\n        <div>\n          <Typography.Text bold>{metricKey}</Typography.Text>\n          <Spacer size=\"xs\" />\n          <Typography.Text>{value}</Typography.Text>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  valueField: {\n    whiteSpace: 'nowrap' as const,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n","import { TableSkeleton, ToggleButton, useDesignSystemTheme } from '@databricks/design-system';\nimport { compact, mapValues, values } from 'lodash';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from '../../../redux-types';\nimport type { MetricEntitiesByName, RunInfoEntity } from '../../types';\nimport { KeyValueEntity } from '../../../common/types';\n\nimport { RunsChartsTooltipWrapper } from '../runs-charts/hooks/useRunsChartsTooltip';\nimport { RunViewChartTooltipBody } from './RunViewChartTooltipBody';\nimport { RunsChartType, RunsChartsCardConfig } from '../runs-charts/runs-charts.types';\nimport type { RunsChartsRunData } from '../runs-charts/components/RunsCharts.common';\nimport { RunsChartsLineChartXAxisType } from '../runs-charts/components/RunsCharts.common';\nimport type { ExperimentRunsChartsUIConfiguration } from '../experiment-page/models/ExperimentPageUIState';\nimport { RunsChartsSectionAccordion } from '../runs-charts/components/sections/RunsChartsSectionAccordion';\nimport { RunsChartsConfigureModal } from '../runs-charts/components/RunsChartsConfigureModal';\nimport {\n  RunsChartsUIConfigurationContextProvider,\n  useConfirmChartCardConfigurationFn,\n  useInsertRunsChartsFn,\n  useRemoveRunsChartFn,\n  useReorderRunsChartsFn,\n} from '../runs-charts/hooks/useRunsChartsUIConfiguration';\nimport {\n  LOG_IMAGE_TAG_INDICATOR,\n  MLFLOW_MODEL_METRIC_NAME,\n  MLFLOW_SYSTEM_METRIC_NAME,\n  MLFLOW_SYSTEM_METRIC_PREFIX,\n} from '../../constants';\nimport LocalStorageUtils from '../../../common/utils/LocalStorageUtils';\nimport { RunsChartsFullScreenModal } from '../runs-charts/components/RunsChartsFullScreenModal';\nimport { useIsTabActive } from '../../../common/hooks/useIsTabActive';\nimport { shouldEnableRunDetailsPageAutoRefresh } from '../../../common/utils/FeatureUtils';\nimport { usePopulateImagesByRunUuid } from '../experiment-page/hooks/usePopulateImagesByRunUuid';\nimport type { UseGetRunQueryResponseRunInfo } from './hooks/useGetRunQuery';\nimport { RunsChartsGlobalChartSettingsDropdown } from '../runs-charts/components/RunsChartsGlobalChartSettingsDropdown';\nimport { RunsChartsDraggableCardsGridContextProvider } from '../runs-charts/components/RunsChartsDraggableCardsGridContext';\nimport { RunsChartsFilterInput } from '../runs-charts/components/RunsChartsFilterInput';\n\ninterface RunViewMetricChartsProps {\n  metricKeys: string[];\n  runInfo: RunInfoEntity | UseGetRunQueryResponseRunInfo;\n  /**\n   * Whether to display model or system metrics. This affects labels and tooltips.\n   */\n  mode: 'model' | 'system';\n\n  latestMetrics?: MetricEntitiesByName;\n  tags?: Record<string, KeyValueEntity>;\n  params?: Record<string, KeyValueEntity>;\n}\n\n/**\n * Component displaying metric charts for a single run\n */\nconst RunViewMetricChartsImpl = ({\n  runInfo,\n  metricKeys,\n  mode,\n  chartUIState,\n  updateChartsUIState,\n  latestMetrics = {},\n  params = {},\n  tags = {},\n}: RunViewMetricChartsProps & {\n  chartUIState: ExperimentRunsChartsUIConfiguration;\n  updateChartsUIState: (\n    stateSetter: (state: ExperimentRunsChartsUIConfiguration) => ExperimentRunsChartsUIConfiguration,\n  ) => void;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const [search, setSearch] = useState('');\n  const { formatMessage } = useIntl();\n\n  const { compareRunCharts, compareRunSections, chartsSearchFilter } = chartUIState;\n\n  // For the draggable grid layout, we filter visible cards on this level\n  const visibleChartCards = useMemo(() => {\n    return compareRunCharts?.filter((chart) => !chart.deleted) ?? [];\n  }, [compareRunCharts]);\n\n  const [fullScreenChart, setFullScreenChart] = useState<\n    | {\n        config: RunsChartsCardConfig;\n        title: string | ReactNode;\n        subtitle: ReactNode;\n      }\n    | undefined\n  >(undefined);\n\n  const metricsForRun = useSelector(({ entities }: ReduxState) => {\n    return mapValues(entities.sampledMetricsByRunUuid[runInfo.runUuid ?? ''], (metricsByRange) => {\n      return compact(\n        values(metricsByRange)\n          .map(({ metricsHistory }) => metricsHistory)\n          .flat(),\n      );\n    });\n  });\n\n  const tooltipContextValue = useMemo(() => ({ runInfo, metricsForRun }), [runInfo, metricsForRun]);\n\n  const { imagesByRunUuid } = useSelector((state: ReduxState) => ({\n    imagesByRunUuid: state.entities.imagesByRunUuid,\n  }));\n\n  const [configuredCardConfig, setConfiguredCardConfig] = useState<RunsChartsCardConfig | null>(null);\n\n  const reorderCharts = useReorderRunsChartsFn();\n\n  const addNewChartCard = (metricSectionId: string) => (type: RunsChartType) =>\n    setConfiguredCardConfig(RunsChartsCardConfig.getEmptyChartCardByType(type, false, undefined, metricSectionId));\n\n  const insertCharts = useInsertRunsChartsFn();\n\n  const startEditChart = (chartCard: RunsChartsCardConfig) => setConfiguredCardConfig(chartCard);\n\n  const removeChart = useRemoveRunsChartFn();\n\n  const confirmChartCardConfiguration = useConfirmChartCardConfigurationFn();\n\n  const submitForm = (configuredCard: Partial<RunsChartsCardConfig>) => {\n    confirmChartCardConfiguration(configuredCard);\n\n    // Hide the modal\n    setConfiguredCardConfig(null);\n  };\n\n  // Create a single run data object to be used in charts\n  const chartData: RunsChartsRunData[] = useMemo(\n    () => [\n      {\n        displayName: runInfo.runName ?? '',\n        metrics: latestMetrics,\n        params,\n        tags,\n        images: imagesByRunUuid[runInfo.runUuid ?? ''] || {},\n        metricHistory: {},\n        uuid: runInfo.runUuid ?? '',\n        color: theme.colors.primary,\n        runInfo,\n      },\n    ],\n    [runInfo, latestMetrics, params, tags, imagesByRunUuid, theme],\n  );\n\n  useEffect(() => {\n    if ((!compareRunSections || !compareRunCharts) && chartData.length > 0) {\n      const { resultChartSet, resultSectionSet } = RunsChartsCardConfig.getBaseChartAndSectionConfigs({\n        runsData: chartData,\n        enabledSectionNames: [mode === 'model' ? MLFLOW_MODEL_METRIC_NAME : MLFLOW_SYSTEM_METRIC_NAME],\n        // Filter only model or system metrics\n        filterMetricNames: (name) => {\n          const isSystemMetric = name.startsWith(MLFLOW_SYSTEM_METRIC_PREFIX);\n          return mode === 'model' ? !isSystemMetric : isSystemMetric;\n        },\n      });\n\n      updateChartsUIState((current) => ({\n        ...current,\n        compareRunCharts: resultChartSet,\n        compareRunSections: resultSectionSet,\n      }));\n    }\n  }, [compareRunCharts, compareRunSections, chartData, mode, updateChartsUIState]);\n\n  /**\n   * Update charts with the latest metrics if new are found\n   */\n  useEffect(() => {\n    updateChartsUIState((current) => {\n      if (!current.compareRunCharts || !current.compareRunSections) {\n        return current;\n      }\n      const { resultChartSet, resultSectionSet, isResultUpdated } = RunsChartsCardConfig.updateChartAndSectionConfigs({\n        compareRunCharts: current.compareRunCharts,\n        compareRunSections: current.compareRunSections,\n        runsData: chartData,\n        isAccordionReordered: current.isAccordionReordered,\n        // Filter only model or system metrics\n        filterMetricNames: (name) => {\n          const isSystemMetric = name.startsWith(MLFLOW_SYSTEM_METRIC_PREFIX);\n          return mode === 'model' ? !isSystemMetric : isSystemMetric;\n        },\n      });\n\n      if (!isResultUpdated) {\n        return current;\n      }\n      return {\n        ...current,\n        compareRunCharts: resultChartSet,\n        compareRunSections: resultSectionSet,\n      };\n    });\n  }, [chartData, updateChartsUIState, mode]);\n\n  const isTabActive = useIsTabActive();\n  const autoRefreshEnabled = chartUIState.autoRefreshEnabled && shouldEnableRunDetailsPageAutoRefresh() && isTabActive;\n\n  // Determine if run contains images logged by `mlflow.log_image()`\n  const containsLoggedImages = Boolean(tags[LOG_IMAGE_TAG_INDICATOR]);\n\n  usePopulateImagesByRunUuid({\n    runUuids: [runInfo.runUuid ?? ''],\n    runUuidsIsActive: [runInfo.status === 'RUNNING'],\n    autoRefreshEnabled,\n    enabled: containsLoggedImages,\n  });\n\n  return (\n    <div\n      css={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        css={{\n          paddingBottom: theme.spacing.md,\n          display: 'flex',\n          gap: theme.spacing.sm,\n          flex: '0 0 auto',\n        }}\n      >\n        <RunsChartsFilterInput chartsSearchFilter={chartsSearchFilter} />\n        {shouldEnableRunDetailsPageAutoRefresh() && (\n          <ToggleButton\n            componentId=\"codegen_mlflow_app_src_experiment-tracking_components_run-page_runviewmetricchartsv2.tsx_244\"\n            pressed={chartUIState.autoRefreshEnabled}\n            onPressedChange={(pressed) => {\n              updateChartsUIState((current) => ({ ...current, autoRefreshEnabled: pressed }));\n            }}\n          >\n            {formatMessage({\n              defaultMessage: 'Auto-refresh',\n              description: 'Run page > Charts tab > Auto-refresh toggle button',\n            })}\n          </ToggleButton>\n        )}\n        <RunsChartsGlobalChartSettingsDropdown\n          metricKeyList={metricKeys}\n          globalLineChartConfig={chartUIState.globalLineChartConfig}\n          updateUIState={updateChartsUIState}\n        />\n      </div>\n      <div\n        css={{\n          flex: 1,\n          overflow: 'auto',\n        }}\n      >\n        <RunsChartsTooltipWrapper contextData={tooltipContextValue} component={RunViewChartTooltipBody}>\n          <RunsChartsDraggableCardsGridContextProvider visibleChartCards={visibleChartCards}>\n            <RunsChartsSectionAccordion\n              compareRunSections={compareRunSections}\n              compareRunCharts={visibleChartCards}\n              reorderCharts={reorderCharts}\n              insertCharts={insertCharts}\n              chartData={chartData}\n              startEditChart={startEditChart}\n              removeChart={removeChart}\n              addNewChartCard={addNewChartCard}\n              search={chartsSearchFilter ?? ''}\n              supportedChartTypes={[RunsChartType.LINE, RunsChartType.BAR, RunsChartType.IMAGE]}\n              setFullScreenChart={setFullScreenChart}\n              autoRefreshEnabled={autoRefreshEnabled}\n              globalLineChartConfig={chartUIState.globalLineChartConfig}\n              groupBy={null}\n            />\n          </RunsChartsDraggableCardsGridContextProvider>\n        </RunsChartsTooltipWrapper>\n      </div>\n      {configuredCardConfig && (\n        <RunsChartsConfigureModal\n          chartRunData={chartData}\n          metricKeyList={metricKeys}\n          paramKeyList={[]}\n          config={configuredCardConfig}\n          onSubmit={submitForm}\n          onCancel={() => setConfiguredCardConfig(null)}\n          groupBy={null}\n          supportedChartTypes={[RunsChartType.LINE, RunsChartType.BAR, RunsChartType.IMAGE]}\n          globalLineChartConfig={chartUIState.globalLineChartConfig}\n        />\n      )}\n      <RunsChartsFullScreenModal\n        fullScreenChart={fullScreenChart}\n        onCancel={() => setFullScreenChart(undefined)}\n        chartData={chartData}\n        tooltipContextValue={tooltipContextValue}\n        tooltipComponent={RunViewChartTooltipBody}\n        autoRefreshEnabled={autoRefreshEnabled}\n        groupBy={null}\n      />\n    </div>\n  );\n};\n\nexport const RunViewMetricCharts = (props: RunViewMetricChartsProps) => {\n  const persistenceIdentifier = `${props.runInfo.runUuid}-${props.mode}`;\n\n  const localStore = useMemo(\n    () => LocalStorageUtils.getStoreForComponent('RunPage', persistenceIdentifier),\n    [persistenceIdentifier],\n  );\n\n  const [chartUIState, updateChartsUIState] = useState<ExperimentRunsChartsUIConfiguration>(() => {\n    const defaultChartState: ExperimentRunsChartsUIConfiguration = {\n      isAccordionReordered: false,\n      compareRunCharts: undefined,\n      compareRunSections: undefined,\n      // Auto-refresh is enabled by default only if the flag is set\n      autoRefreshEnabled: shouldEnableRunDetailsPageAutoRefresh(),\n      globalLineChartConfig: {\n        xAxisKey: RunsChartsLineChartXAxisType.STEP,\n        lineSmoothness: 0,\n        selectedXAxisMetricKey: '',\n      },\n    };\n    try {\n      const persistedChartState = localStore.getItem('chartUIState');\n\n      if (!persistedChartState) {\n        return defaultChartState;\n      }\n      return JSON.parse(persistedChartState);\n    } catch {\n      return defaultChartState;\n    }\n  });\n\n  useEffect(() => {\n    localStore.setItem('chartUIState', JSON.stringify(chartUIState));\n  }, [chartUIState, localStore]);\n\n  return (\n    <RunsChartsUIConfigurationContextProvider updateChartsUIState={updateChartsUIState}>\n      <RunViewMetricChartsImpl {...props} chartUIState={chartUIState} updateChartsUIState={updateChartsUIState} />\n    </RunsChartsUIConfigurationContextProvider>\n  );\n};\n\nconst RunViewMetricChartsSkeleton = ({ className }: { className?: string }) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <div\n      css={{\n        flex: 1,\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gridTemplateRows: '200px',\n        gap: theme.spacing.md,\n      }}\n      className={className}\n    >\n      {new Array(6).fill(null).map((_, index) => (\n        <TableSkeleton key={index} lines={5} seed={index.toString()} />\n      ))}\n    </div>\n  );\n};\n","import { useMemo } from 'react';\nimport { useGetLoggedModelsQuery } from '../../../hooks/logged-models/useGetLoggedModelsQuery';\nimport { UseGetRunQueryResponseInputs, UseGetRunQueryResponseOutputs } from '../../run-page/hooks/useGetRunQuery';\nimport { compact, isEmpty, uniq } from 'lodash';\n\nexport const useLoggedModelsForExperimentRunV2 = ({\n  runInputs,\n  runOutputs,\n  enabled = true,\n}: {\n  runInputs?: UseGetRunQueryResponseInputs;\n  runOutputs?: UseGetRunQueryResponseOutputs;\n  enabled?: boolean;\n}) => {\n  const modelIds = useMemo(() => {\n    const inputs = runInputs?.modelInputs ?? [];\n    const outputs = runOutputs?.modelOutputs ?? [];\n    const allModels = [...inputs, ...outputs];\n    const modelIds = uniq(compact(allModels.map(({ modelId }) => modelId)));\n\n    if (isEmpty(modelIds)) {\n      return undefined;\n    }\n\n    return modelIds;\n  }, [runInputs, runOutputs]);\n\n  const isHookEnabled = enabled && !isEmpty(modelIds);\n\n  const {\n    data: loggedModelsData,\n    isLoading,\n    error,\n  } = useGetLoggedModelsQuery(\n    {\n      modelIds,\n    },\n    {\n      enabled: isHookEnabled,\n    },\n  );\n\n  return { models: loggedModelsData, isLoading: isHookEnabled && isLoading, error };\n};\n","import { useCallback } from 'react';\nimport { useSearchParams } from '@mlflow/mlflow/src/common/utils/RoutingUtils';\n\nconst QUERY_PARAM_KEY = 'compareToRunUuid';\n\n/**\n * Query param-powered hook that returns the compare to run uuid when comparison is enabled.\n */\nexport const useCompareToRunUuid = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const compareToRunUuid = searchParams.get(QUERY_PARAM_KEY) ?? undefined;\n\n  const setCompareToRunUuid = useCallback(\n    (compareToRunId: string | undefined) => {\n      setSearchParams((params) => {\n        if (compareToRunId === undefined) {\n          params.delete(QUERY_PARAM_KEY);\n          return params;\n        }\n        params.set(QUERY_PARAM_KEY, compareToRunId);\n        return params;\n      });\n    },\n    [setSearchParams],\n  );\n\n  return [compareToRunUuid, setCompareToRunUuid] as const;\n};\n","import {\n  Typography,\n  useDesignSystemTheme,\n  DialogCombobox,\n  DialogComboboxContent,\n  DialogComboboxOptionList,\n  DialogComboboxOptionListSelectItem,\n  DialogComboboxCustomButtonTriggerWrapper,\n  Button,\n  ChevronDownIcon,\n  XCircleFillIcon,\n} from '@databricks/design-system';\nimport { useCallback, useMemo } from 'react';\nimport { useGetExperimentRunColor } from '../experiment-page/hooks/useExperimentRunColor';\nimport { useIntl } from '@databricks/i18n';\nimport Routes from '../../routes';\nimport {\n  useGenAiExperimentRunsForComparison,\n  COMPARE_TO_RUN_DROPDOWN_COMPONENT_ID,\n} from '@databricks/web-shared/genai-traces-table';\nimport { RunColorPill } from '../experiment-page/components/RunColorPill';\n\nexport const EvaluationRunCompareSelector = ({\n  experimentId,\n  currentRunUuid,\n  setCompareToRunUuid,\n  compareToRunUuid,\n  setCurrentRunUuid: setCurrentRunUuidProp,\n}: {\n  experimentId: string;\n  currentRunUuid?: string;\n  setCompareToRunUuid?: (runUuid: string | undefined) => void;\n  compareToRunUuid?: string;\n  // used in evaluation runs tab\n  setCurrentRunUuid?: (runUuid: string) => void;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const intl = useIntl();\n  const getRunColor = useGetExperimentRunColor();\n\n  const { runInfos: experimentRunInfos } = useGenAiExperimentRunsForComparison(experimentId);\n\n  const currentRunOptions = useMemo(() => {\n    if (!experimentRunInfos) return undefined;\n    return experimentRunInfos\n      .map((runInfo) => ({\n        key: runInfo.runUuid,\n        value: runInfo.runName ?? runInfo.runUuid,\n      }))\n      .filter((result) => result.key) as {\n      key: string;\n      value: string;\n    }[];\n  }, [experimentRunInfos]);\n\n  const compareToRunOptions = useMemo(() => {\n    if (!experimentRunInfos) return undefined;\n    return experimentRunInfos\n      .filter((runInfo) => runInfo.runUuid !== currentRunUuid)\n      .map((runInfo) => ({\n        key: runInfo.runUuid,\n        value: runInfo.runName ?? runInfo.runUuid,\n      }))\n      .filter((result) => Boolean(result.key)) as {\n      key: string;\n      value: string;\n    }[];\n  }, [experimentRunInfos, currentRunUuid]);\n\n  const currentRunInfo = experimentRunInfos?.find((runInfo) => runInfo.runUuid === currentRunUuid);\n  const compareToRunInfo = experimentRunInfos?.find((runInfo) => runInfo.runUuid === compareToRunUuid);\n\n  const defaultSetCurrentRunUuid = useCallback(\n    (runUuid: string) => {\n      const link = Routes.getRunPageRoute(experimentId, runUuid) + '/evaluations';\n      // Propagate all the current URL query params.\n      const currentParams = new URLSearchParams(window.location.search);\n\n      const newUrl = new URL(link, window.location.origin);\n      currentParams.forEach((value, key) => {\n        newUrl.searchParams.set(key, value);\n      });\n\n      window.location.href = newUrl.toString();\n    },\n    [experimentId],\n  );\n\n  const setCurrentRunUuid = setCurrentRunUuidProp ?? defaultSetCurrentRunUuid;\n\n  if (!currentRunUuid) {\n    return <></>;\n  }\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        gap: theme.spacing.sm,\n        alignItems: 'center',\n      }}\n    >\n      <div\n        css={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          gap: theme.spacing.sm,\n        }}\n      >\n        <DialogCombobox\n          componentId={COMPARE_TO_RUN_DROPDOWN_COMPONENT_ID}\n          id=\"compare-to-run-combobox\"\n          value={currentRunUuid ? [currentRunUuid] : undefined}\n        >\n          <DialogComboboxCustomButtonTriggerWrapper>\n            <Button\n              endIcon={<ChevronDownIcon />}\n              componentId=\"mlflow.evaluations_review.table_ui.compare_to_run_button\"\n              css={{\n                justifyContent: 'flex-start !important',\n              }}\n            >\n              <div\n                css={{\n                  display: 'flex',\n                  gap: theme.spacing.sm,\n                  alignItems: 'center',\n                  fontSize: `${theme.typography.fontSizeSm}px !important`,\n                }}\n              >\n                <RunColorPill color={getRunColor(currentRunUuid)} />\n                {currentRunInfo?.runName ? (\n                  <Typography.Hint>{currentRunInfo?.runName}</Typography.Hint>\n                ) : (\n                  // eslint-disable-next-line formatjs/enforce-description\n                  intl.formatMessage({ defaultMessage: 'Select baseline run' })\n                )}\n              </div>\n            </Button>\n          </DialogComboboxCustomButtonTriggerWrapper>\n          <DialogComboboxContent>\n            <DialogComboboxOptionList>\n              {(currentRunOptions || []).map((item, i) => (\n                <DialogComboboxOptionListSelectItem\n                  key={i}\n                  value={item.value}\n                  onChange={(e) => setCurrentRunUuid(item.key)}\n                  checked={item.key === currentRunUuid}\n                >\n                  <div\n                    css={{\n                      display: 'flex',\n                      gap: theme.spacing.sm,\n                      alignItems: 'center',\n                    }}\n                  >\n                    <RunColorPill color={getRunColor(item.key)} />\n                    {item.value}\n                  </div>\n                </DialogComboboxOptionListSelectItem>\n              ))}\n            </DialogComboboxOptionList>\n          </DialogComboboxContent>\n        </DialogCombobox>\n      </div>\n      <span css={{}}>\n        {intl.formatMessage({\n          defaultMessage: 'compare to',\n          description: 'Label for \"to\" in compare to, which is split between two dropdowns of two runs to compare',\n        })}\n      </span>\n      {setCompareToRunUuid && (\n        <div\n          css={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div\n            css={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <DialogCombobox\n              componentId={COMPARE_TO_RUN_DROPDOWN_COMPONENT_ID}\n              id=\"compare-to-run-combobox\"\n              value={compareToRunUuid ? [compareToRunUuid] : undefined}\n            >\n              <DialogComboboxCustomButtonTriggerWrapper>\n                <Button\n                  endIcon={<ChevronDownIcon />}\n                  componentId=\"mlflow.evaluations_review.table_ui.compare_to_run_button\"\n                  css={{\n                    justifyContent: 'flex-start !important',\n                  }}\n                >\n                  <div\n                    css={{\n                      display: 'flex',\n                      gap: theme.spacing.sm,\n                      alignItems: 'center',\n                      fontSize: `${theme.typography.fontSizeSm}px !important`,\n                    }}\n                  >\n                    {compareToRunInfo?.runName ? (\n                      <>\n                        <RunColorPill color={getRunColor(compareToRunUuid)} />\n                        <Typography.Hint>{compareToRunInfo?.runName}</Typography.Hint>\n                      </>\n                    ) : (\n                      <span\n                        css={{\n                          color: theme.colors.textPlaceholder,\n                        }}\n                      >\n                        {/* eslint-disable-next-line formatjs/enforce-description */}\n                        {intl.formatMessage({ defaultMessage: 'baseline run' })}\n                      </span>\n                    )}\n                  </div>\n                </Button>\n              </DialogComboboxCustomButtonTriggerWrapper>\n              <DialogComboboxContent>\n                <DialogComboboxOptionList>\n                  {(compareToRunOptions || []).map((item, i) => (\n                    <DialogComboboxOptionListSelectItem\n                      key={i}\n                      value={item.value}\n                      onChange={(e) => setCompareToRunUuid(item.key)}\n                      checked={item.key === compareToRunUuid}\n                    >\n                      <div\n                        css={{\n                          display: 'flex',\n                          gap: theme.spacing.sm,\n                          alignItems: 'center',\n                        }}\n                      >\n                        <RunColorPill color={getRunColor(item.key)} />\n                        {item.value}\n                      </div>\n                    </DialogComboboxOptionListSelectItem>\n                  ))}\n                </DialogComboboxOptionList>\n              </DialogComboboxContent>\n            </DialogCombobox>\n            {compareToRunInfo?.runName && (\n              <XCircleFillIcon\n                aria-hidden=\"false\"\n                css={{\n                  color: theme.colors.textPlaceholder,\n                  fontSize: theme.typography.fontSizeSm,\n                  marginLeft: theme.spacing.sm,\n\n                  ':hover': {\n                    color: theme.colors.actionTertiaryTextHover,\n                  },\n                }}\n                role=\"button\"\n                onClick={() => {\n                  setCompareToRunUuid(undefined);\n                }}\n                onPointerDownCapture={(e) => {\n                  // Prevents the dropdown from opening when clearing\n                  e.stopPropagation();\n                }}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { intersection } from 'lodash';\nimport { KeyValueEntity } from '../../../../common/types';\nimport { extractLoggedTablesFromRunTags } from '../../../utils/ArtifactUtils';\nimport { GenAiTraceEvaluationArtifactFile } from '@databricks/web-shared/genai-traces-table';\nimport { useMemo } from 'react';\n\n/**\n * Returns the list of known evaluation table artifacts that are logged for a run based on its tags.\n */\nexport const useRunLoggedTraceTableArtifacts = (runTags?: Record<string, KeyValueEntity>) =>\n  useMemo(() => {\n    if (!runTags) {\n      return [];\n    }\n    return intersection(extractLoggedTablesFromRunTags(runTags), [\n      GenAiTraceEvaluationArtifactFile.Evaluations,\n      GenAiTraceEvaluationArtifactFile.Metrics,\n      GenAiTraceEvaluationArtifactFile.Assessments,\n    ]) as GenAiTraceEvaluationArtifactFile[];\n  }, [runTags]);\n","import { type ApolloError, type ApolloQueryResult, gql } from '@mlflow/mlflow/src/common/utils/graphQLHooks';\nimport { useQuery } from '@mlflow/mlflow/src/common/utils/graphQLHooks';\nimport { first } from 'lodash';\nimport { SearchRuns } from '../../../../graphql/__generated__/graphql';\n\nconst SEARCH_RUNS_QUERY = gql`\n  query SearchRuns($data: MlflowSearchRunsInput!) {\n    mlflowSearchRuns(input: $data) {\n      apiError {\n        helpUrl\n        code\n        message\n      }\n      runs {\n        info {\n          runName\n          status\n          runUuid\n          experimentId\n          artifactUri\n          endTime\n          lifecycleStage\n          startTime\n          userId\n        }\n        experiment {\n          experimentId\n          name\n          tags {\n            key\n            value\n          }\n          artifactLocation\n          lifecycleStage\n          lastUpdateTime\n        }\n        data {\n          metrics {\n            key\n            value\n            step\n            timestamp\n          }\n          params {\n            key\n            value\n          }\n          tags {\n            key\n            value\n          }\n        }\n        inputs {\n          datasetInputs {\n            dataset {\n              digest\n              name\n              profile\n              schema\n              source\n              sourceType\n            }\n            tags {\n              key\n              value\n            }\n          }\n          modelInputs {\n            modelId\n          }\n        }\n        outputs {\n          modelOutputs {\n            modelId\n            step\n          }\n        }\n        modelVersions {\n          version\n          name\n          creationTimestamp\n          status\n          source\n        }\n      }\n    }\n  }\n`;\n\nexport type UseSearchRunsQueryResponseDataMetrics = NonNullable<\n  NonNullable<NonNullable<UseSearchRunsQueryDataResponseSingleRun>['data']>['metrics']\n>;\nexport type UseSearchRunsQueryDataResponseSingleRun = NonNullable<\n  NonNullable<SearchRuns['mlflowSearchRuns']>['runs']\n>[0];\nexport type UseSearchRunsQueryDataApiError = NonNullable<SearchRuns['mlflowSearchRuns']>['apiError'];\nexport type UseSearchRunsQueryResponse = {\n  data?: UseSearchRunsQueryDataResponseSingleRun;\n  loading: boolean;\n  apolloError?: ApolloError;\n  apiError?: UseSearchRunsQueryDataApiError;\n  refetchRun: () => Promise<ApolloQueryResult<SearchRuns>>;\n};\n\nexport const useSearchRunsQuery = ({\n  filter,\n  experimentIds,\n  disabled = false,\n}: {\n  filter?: string;\n  experimentIds: string[];\n  disabled?: boolean;\n}): UseSearchRunsQueryResponse => {\n  const {\n    data,\n    loading,\n    error: apolloError,\n    refetch,\n  } = useQuery<any, any>(SEARCH_RUNS_QUERY, {\n    variables: {\n      data: {\n        filter,\n        experimentIds,\n      },\n    },\n    skip: disabled,\n  });\n\n  return {\n    loading,\n    data: first(data?.mlflowSearchRuns?.runs ?? []),\n    refetchRun: refetch,\n    apolloError,\n    apiError: data?.mlflowSearchRuns?.apiError,\n  } as const;\n};\n","import { isNil } from 'lodash';\nimport { Empty, LegacySkeleton } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport { type KeyValueEntity } from '../../../common/types';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { useCompareToRunUuid } from './hooks/useCompareToRunUuid';\nimport Utils from '@mlflow/mlflow/src/common/utils/Utils';\nimport { EvaluationRunCompareSelector } from './EvaluationRunCompareSelector';\nimport { MlflowService } from '../../sdk/MlflowService';\nimport { ModelTrace } from '@databricks/web-shared/model-trace-explorer';\nimport {\n  EXECUTION_DURATION_COLUMN_ID,\n  GenAiTraceEvaluationArtifactFile,\n  GenAiTracesTable,\n  GenAiTracesMarkdownConverterProvider,\n  STATE_COLUMN_ID,\n  TAGS_COLUMN_ID,\n  TracesTableColumn,\n  TracesTableColumnType,\n  RunEvaluationTracesDataEntry,\n  useGenAiTraceEvaluationArtifacts,\n} from '@databricks/web-shared/genai-traces-table';\nimport { useMarkdownConverter } from '../../../common/utils/MarkdownUtils';\nimport { useSearchRunsQuery } from '../run-page/hooks/useSearchRunsQuery';\nimport { useRunLoggedTraceTableArtifacts } from './hooks/useRunLoggedTraceTableArtifacts';\n\nasync function getTrace(requestId?: string, traceId?: string): Promise<ModelTrace | undefined> {\n  const [traceInfo, traceData] = await Promise.all([\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    MlflowService.getExperimentTraceInfo(requestId!).then((response) => response.trace_info || {}),\n    // get-trace-artifact is only currently supported in mlflow 2.0 apis\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    MlflowService.getExperimentTraceData(requestId!),\n  ]);\n  return traceData\n    ? {\n        info: traceInfo,\n        data: traceData,\n      }\n    : undefined;\n}\n\nexport const RunViewEvaluationsTabArtifacts = ({\n  experimentId,\n  runUuid,\n  runTags,\n  runDisplayName,\n  data,\n}: {\n  experimentId: string;\n  runUuid: string;\n  runTags?: Record<string, KeyValueEntity>;\n  runDisplayName: string;\n  data: RunEvaluationTracesDataEntry[];\n}) => {\n  const { theme } = useDesignSystemTheme();\n\n  // Determine which tables are logged in the run\n  const traceTablesLoggedInRun = useRunLoggedTraceTableArtifacts(runTags);\n\n  const noEvaluationTablesLogged = data?.length === 0;\n\n  const [compareToRunUuid, setCompareToRunUuid] = useCompareToRunUuid();\n\n  const makeHtmlFromMarkdown = useMarkdownConverter();\n\n  const {\n    data: compareToRunData,\n    displayName: compareToRunDisplayName,\n    loading: compareToRunLoading,\n  } = useGetCompareToDataWithArtifacts(experimentId, compareToRunUuid, traceTablesLoggedInRun);\n\n  if (compareToRunLoading) {\n    // TODO: Implement proper skeleton for this page\n    return <LegacySkeleton />;\n  }\n\n  const initialSelectedColumns = (allColumns: TracesTableColumn[]) => {\n    return allColumns.filter(\n      (col) =>\n        col.type === TracesTableColumnType.ASSESSMENT ||\n        col.type === TracesTableColumnType.INPUT ||\n        (col.type === TracesTableColumnType.TRACE_INFO &&\n          [EXECUTION_DURATION_COLUMN_ID, STATE_COLUMN_ID, TAGS_COLUMN_ID].includes(col.id)),\n    );\n  };\n\n  /**\n   * Determine whether to render the component from the shared codebase (GenAiTracesTable)\n   * or the legacy one from the local codebase (EvaluationsOverview).\n   */\n  const getOverviewTableComponent = () => {\n    const componentProps = {\n      experimentId,\n      currentRunDisplayName: runDisplayName,\n      currentEvaluationResults: data || [],\n      compareToEvaluationResults: compareToRunData,\n      runUuid,\n      compareToRunUuid,\n      compareToRunDisplayName,\n      compareToRunLoading,\n      getTrace,\n      initialSelectedColumns,\n    } as const;\n    return (\n      <GenAiTracesMarkdownConverterProvider makeHtml={makeHtmlFromMarkdown}>\n        <GenAiTracesTable {...componentProps} />\n      </GenAiTracesMarkdownConverterProvider>\n    );\n  };\n\n  if (noEvaluationTablesLogged) {\n    return (\n      <div css={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <Empty\n          title={\n            <FormattedMessage\n              defaultMessage=\"No evaluation tables logged\"\n              description=\"Run page > Evaluations tab > No evaluation tables logged\"\n            />\n          }\n          description={null}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      css={{\n        marginTop: theme.spacing.sm,\n        width: '100%',\n        overflowY: 'hidden',\n      }}\n    >\n      <div\n        css={{\n          width: '100%',\n          padding: `${theme.spacing.xs}px 0`,\n        }}\n      >\n        <EvaluationRunCompareSelector\n          experimentId={experimentId}\n          currentRunUuid={runUuid}\n          compareToRunUuid={compareToRunUuid}\n          setCompareToRunUuid={setCompareToRunUuid}\n        />\n      </div>\n      {getOverviewTableComponent()}\n    </div>\n  );\n};\n\nconst useGetCompareToDataWithArtifacts = (\n  experimentId: string,\n  compareToRunUuid: string | undefined,\n  traceTablesLoggedInRun: GenAiTraceEvaluationArtifactFile[],\n): {\n  data: RunEvaluationTracesDataEntry[] | undefined;\n  displayName: string;\n  loading: boolean;\n} => {\n  const { data, isLoading: loading } = useGenAiTraceEvaluationArtifacts(\n    {\n      runUuid: compareToRunUuid || '',\n      artifacts: traceTablesLoggedInRun,\n    },\n    { disabled: isNil(compareToRunUuid) },\n  );\n\n  const { data: runData, loading: runDetailsLoading } = useSearchRunsQuery({\n    experimentIds: [experimentId],\n    filter: `attributes.runId = \"${compareToRunUuid}\"`,\n    disabled: isNil(compareToRunUuid),\n  });\n\n  return {\n    data,\n    displayName: Utils.getRunDisplayName(runData?.info, compareToRunUuid),\n    loading: loading || runDetailsLoading,\n  };\n};\n","import { isNil } from 'lodash';\nimport { ParagraphSkeleton } from '@databricks/design-system';\nimport { type KeyValueEntity } from '../../../common/types';\nimport { useDesignSystemTheme } from '@databricks/design-system';\nimport { useCompareToRunUuid } from './hooks/useCompareToRunUuid';\nimport Utils from '@mlflow/mlflow/src/common/utils/Utils';\nimport { EvaluationRunCompareSelector } from './EvaluationRunCompareSelector';\nimport { MlflowService } from '../../sdk/MlflowService';\nimport { ModelTrace } from '@databricks/web-shared/model-trace-explorer';\nimport { getEvalTabTotalTracesLimit } from '@mlflow/mlflow/src/common/utils/FeatureUtils';\nimport {\n  EXECUTION_DURATION_COLUMN_ID,\n  GenAiTracesMarkdownConverterProvider,\n  RUN_EVALUATION_RESULTS_TAB_COMPARE_RUNS,\n  RUN_EVALUATION_RESULTS_TAB_SINGLE_RUN,\n  getTracesTagKeys,\n  STATE_COLUMN_ID,\n  RESPONSE_COLUMN_ID,\n  TracesTableColumn,\n  TracesTableColumnType,\n  useMlflowTracesTableMetadata,\n  useSelectedColumns,\n  useSearchMlflowTraces,\n  TraceActions,\n  GenAITracesTableToolbar,\n  GenAITracesTableProvider,\n  GenAITracesTableBodyContainer,\n  TraceInfoV3,\n  useGenAiTraceEvaluationArtifacts,\n  useFilters,\n  useTableSort,\n  TOKENS_COLUMN_ID,\n  invalidateMlflowSearchTracesCache,\n} from '@databricks/web-shared/genai-traces-table';\nimport { useRunLoggedTraceTableArtifacts } from './hooks/useRunLoggedTraceTableArtifacts';\nimport { useMarkdownConverter } from '../../../common/utils/MarkdownUtils';\nimport { useSearchRunsQuery } from '../run-page/hooks/useSearchRunsQuery';\nimport { useEditExperimentTraceTags } from '../traces/hooks/useEditExperimentTraceTags';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useDeleteTracesMutation } from './hooks/useDeleteTraces';\nimport { RunViewEvaluationsTabArtifacts } from './RunViewEvaluationsTabArtifacts';\nimport { useGetExperimentRunColor } from '../experiment-page/hooks/useExperimentRunColor';\nimport { useQueryClient } from '@databricks/web-shared/query-client';\n\nasync function getTrace(requestId?: string, traceId?: string): Promise<ModelTrace | undefined> {\n  const [traceInfo, traceData] = await Promise.all([\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    MlflowService.getExperimentTraceInfoV3(requestId!).then((response) => response.trace?.trace_info || {}),\n    // get-trace-artifact is only currently supported in mlflow 2.0 apis\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    MlflowService.getExperimentTraceData(requestId!),\n  ]);\n  return traceData\n    ? {\n        info: traceInfo,\n        data: traceData,\n      }\n    : undefined;\n}\n\nconst RunViewEvaluationsTabInner = ({\n  experimentId,\n  runUuid,\n  runTags,\n  runDisplayName,\n  setCurrentRunUuid,\n}: {\n  experimentId: string;\n  runUuid: string;\n  runTags?: Record<string, KeyValueEntity>;\n  runDisplayName: string;\n  setCurrentRunUuid?: (runUuid: string) => void;\n}) => {\n  const { theme } = useDesignSystemTheme();\n  const makeHtmlFromMarkdown = useMarkdownConverter();\n\n  const [compareToRunUuid, setCompareToRunUuid] = useCompareToRunUuid();\n\n  // Get table metadata\n  const {\n    assessmentInfos,\n    allColumns,\n    totalCount,\n    isLoading: isTableMetadataLoading,\n    error: tableMetadataError,\n    tableFilterOptions,\n  } = useMlflowTracesTableMetadata({\n    experimentId,\n    runUuid,\n    otherRunUuid: compareToRunUuid,\n  });\n\n  // Setup table states\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [filters, setFilters] = useFilters();\n  const getRunColor = useGetExperimentRunColor();\n  const queryClient = useQueryClient();\n\n  const defaultSelectedColumns = useCallback((columns: TracesTableColumn[]) => {\n    return columns.filter(\n      (col) =>\n        col.type === TracesTableColumnType.ASSESSMENT ||\n        col.type === TracesTableColumnType.INPUT ||\n        (col.type === TracesTableColumnType.TRACE_INFO &&\n          [EXECUTION_DURATION_COLUMN_ID, RESPONSE_COLUMN_ID, STATE_COLUMN_ID, TOKENS_COLUMN_ID].includes(col.id)),\n    );\n  }, []);\n\n  const { selectedColumns, toggleColumns, setSelectedColumns } = useSelectedColumns(\n    experimentId,\n    allColumns,\n    defaultSelectedColumns,\n    runUuid,\n  );\n\n  const [tableSort, setTableSort] = useTableSort(selectedColumns);\n\n  // Get traces data\n  const {\n    data: traceInfos,\n    isLoading: traceInfosLoading,\n    error: traceInfosError,\n    refetchMlflowTraces,\n  } = useSearchMlflowTraces({\n    experimentId,\n    currentRunDisplayName: runDisplayName,\n    searchQuery,\n    filters,\n    runUuid,\n    tableSort,\n  });\n\n  const deleteTracesMutation = useDeleteTracesMutation();\n\n  const {\n    data: compareToRunData,\n    displayName: compareToRunDisplayName,\n    loading: compareToRunLoading,\n  } = useGetCompareToData(experimentId, compareToRunUuid);\n\n  const countInfo = useMemo(() => {\n    return {\n      currentCount: traceInfos?.length,\n      logCountLoading: traceInfosLoading,\n      totalCount: totalCount,\n      maxAllowedCount: getEvalTabTotalTracesLimit(),\n    };\n  }, [traceInfos, traceInfosLoading, totalCount]);\n\n  // TODO: We should update this to use web-shared/unified-tagging components for the\n  // tag editor and react-query mutations for the apis.\n  const { showEditTagsModalForTrace, EditTagsModal } = useEditExperimentTraceTags({\n    onSuccess: () => invalidateMlflowSearchTracesCache({ queryClient }),\n    existingTagKeys: getTracesTagKeys(traceInfos || []),\n    useV3Apis: true,\n  });\n\n  const traceActions: TraceActions = useMemo(() => {\n    return {\n      deleteTracesAction: {\n        deleteTraces: (experimentId: string, traceIds: string[]) =>\n          deleteTracesMutation.mutateAsync({ experimentId, traceRequestIds: traceIds }),\n      },\n      exportToEvals: {\n        exportToEvalsInstanceEnabled: true,\n        getTrace,\n      },\n      editTags: {\n        showEditTagsModalForTrace,\n        EditTagsModal,\n      },\n    };\n  }, [deleteTracesMutation, showEditTagsModalForTrace, EditTagsModal]);\n\n  const isTableLoading = traceInfosLoading || compareToRunLoading;\n\n  if (isTableMetadataLoading) {\n    return <LoadingSkeleton />;\n  }\n\n  if (tableMetadataError) {\n    return (\n      <div>\n        <pre>{String(tableMetadataError)}</pre>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      css={{\n        marginTop: theme.spacing.sm,\n        width: '100%',\n        overflowY: 'hidden',\n      }}\n    >\n      <div\n        css={{\n          width: '100%',\n          padding: `${theme.spacing.xs}px 0`,\n        }}\n      >\n        <EvaluationRunCompareSelector\n          experimentId={experimentId}\n          currentRunUuid={runUuid}\n          compareToRunUuid={compareToRunUuid}\n          setCompareToRunUuid={setCompareToRunUuid}\n          setCurrentRunUuid={setCurrentRunUuid}\n        />\n      </div>\n      <GenAITracesTableProvider>\n        <div\n          css={{\n            overflowY: 'hidden',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <GenAITracesTableToolbar\n            experimentId={experimentId}\n            searchQuery={searchQuery}\n            setSearchQuery={setSearchQuery}\n            filters={filters}\n            setFilters={setFilters}\n            assessmentInfos={assessmentInfos}\n            countInfo={countInfo}\n            traceActions={traceActions}\n            tableSort={tableSort}\n            setTableSort={setTableSort}\n            allColumns={allColumns}\n            selectedColumns={selectedColumns}\n            setSelectedColumns={setSelectedColumns}\n            toggleColumns={toggleColumns}\n            traceInfos={traceInfos}\n            tableFilterOptions={tableFilterOptions}\n          />\n          {isTableLoading ? (\n            <LoadingSkeleton />\n          ) : traceInfosError ? (\n            <div>\n              <pre>{String(traceInfosError)}</pre>\n            </div>\n          ) : (\n            <GenAiTracesMarkdownConverterProvider makeHtml={makeHtmlFromMarkdown}>\n              <GenAITracesTableBodyContainer\n                experimentId={experimentId}\n                currentRunDisplayName={runDisplayName}\n                compareToRunDisplayName={compareToRunDisplayName}\n                compareToRunUuid={compareToRunUuid}\n                getTrace={getTrace}\n                getRunColor={getRunColor}\n                assessmentInfos={assessmentInfos}\n                setFilters={setFilters}\n                filters={filters}\n                selectedColumns={selectedColumns}\n                allColumns={allColumns}\n                tableSort={tableSort}\n                currentTraceInfoV3={traceInfos || []}\n                compareToTraceInfoV3={compareToRunData}\n                onTraceTagsEdit={showEditTagsModalForTrace}\n              />\n            </GenAiTracesMarkdownConverterProvider>\n          )}\n          {EditTagsModal}\n        </div>\n      </GenAITracesTableProvider>\n    </div>\n  );\n};\n\nexport const RunViewEvaluationsTab = ({\n  experimentId,\n  runUuid,\n  runTags,\n  runDisplayName,\n  setCurrentRunUuid,\n}: {\n  experimentId: string;\n  runUuid: string;\n  runTags?: Record<string, KeyValueEntity>;\n  runDisplayName: string;\n  // used in evaluation runs tab\n  setCurrentRunUuid?: (runUuid: string) => void;\n}) => {\n  // Determine which tables are logged in the run\n  const traceTablesLoggedInRun = useRunLoggedTraceTableArtifacts(runTags);\n  const isArtifactCallEnabled = Boolean(runUuid);\n\n  const { data: artifactData, isLoading: isArtifactLoading } = useGenAiTraceEvaluationArtifacts(\n    {\n      runUuid: runUuid || '',\n      ...{ artifacts: traceTablesLoggedInRun ? traceTablesLoggedInRun : undefined },\n    },\n    { disabled: !isArtifactCallEnabled },\n  );\n\n  if (isArtifactLoading) {\n    return <LoadingSkeleton />;\n  }\n\n  if (!isNil(artifactData) && artifactData.length > 0) {\n    return (\n      <RunViewEvaluationsTabArtifacts\n        experimentId={experimentId}\n        runUuid={runUuid}\n        runDisplayName={runDisplayName}\n        data={artifactData}\n        runTags={runTags}\n      />\n    );\n  }\n\n  return (\n    <RunViewEvaluationsTabInner\n      experimentId={experimentId}\n      runUuid={runUuid}\n      runDisplayName={runDisplayName}\n      setCurrentRunUuid={setCurrentRunUuid}\n    />\n  );\n};\n\nconst LoadingSkeleton = () => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <div css={{ display: 'block', marginTop: theme.spacing.md, height: '100%', width: '100%' }}>\n      {[...Array(10).keys()].map((i) => (\n        <ParagraphSkeleton label=\"Loading...\" key={i} seed={`s-${i}`} />\n      ))}\n    </div>\n  );\n};\n\nconst useGetCompareToData = (\n  experimentId: string,\n  compareToRunUuid: string | undefined,\n): {\n  data: TraceInfoV3[] | undefined;\n  displayName: string;\n  loading: boolean;\n} => {\n  const { data: traceInfos, isLoading: traceInfosLoading } = useSearchMlflowTraces({\n    experimentId,\n    currentRunDisplayName: undefined,\n    runUuid: compareToRunUuid,\n    disabled: isNil(compareToRunUuid),\n  });\n\n  const { data: runData, loading: runDetailsLoading } = useSearchRunsQuery({\n    experimentIds: [experimentId],\n    filter: `attributes.runId = \"${compareToRunUuid}\"`,\n    disabled: isNil(compareToRunUuid),\n  });\n\n  return {\n    data: traceInfos,\n    displayName: Utils.getRunDisplayName(runData?.info, compareToRunUuid),\n    loading: traceInfosLoading || runDetailsLoading,\n  };\n};\n","import { DangerIcon, Empty, ParagraphSkeleton, TitleSkeleton, useDesignSystemTheme } from '@databricks/design-system';\nimport { useSelector } from 'react-redux';\nimport invariant from 'invariant';\nimport { useMemo, useState } from 'react';\n\nimport { PageContainer } from '../../../common/components/PageContainer';\nimport { useNavigate, useParams } from '../../../common/utils/RoutingUtils';\nimport Utils from '../../../common/utils/Utils';\nimport { RunPageTabName } from '../../constants';\nimport { RenameRunModal } from '../modals/RenameRunModal';\nimport { RunViewArtifactTab } from './RunViewArtifactTab';\nimport { RunViewHeader } from './RunViewHeader';\nimport { RunViewOverview } from './RunViewOverview';\nimport { useRunDetailsPageData } from './hooks/useRunDetailsPageData';\nimport { useRunViewActiveTab } from './useRunViewActiveTab';\nimport { ReduxState } from '../../../redux-types';\nimport { ErrorWrapper } from '../../../common/utils/ErrorWrapper';\nimport { RunNotFoundView } from '../RunNotFoundView';\nimport { ErrorCodes } from '../../../common/constants';\nimport NotFoundPage from '../NotFoundPage';\nimport { FormattedMessage } from 'react-intl';\nimport { isSystemMetricKey } from '../../utils/MetricsUtils';\nimport DeleteRunModal from '../modals/DeleteRunModal';\nimport Routes from '../../routes';\nimport { RunViewMetricCharts } from './RunViewMetricCharts';\nimport {\n  shouldEnableGraphQLRunDetailsPage,\n  shouldUseGetLoggedModelsBatchAPI,\n} from '@mlflow/mlflow/src/common/utils/FeatureUtils';\nimport { useMediaQuery } from '@databricks/web-shared/hooks';\nimport { RunViewTracesTab } from './RunViewTracesTab';\nimport { getGraphQLErrorMessage } from '../../../graphql/get-graphql-error';\nimport { useLoggedModelsForExperimentRun } from '../experiment-page/hooks/useLoggedModelsForExperimentRun';\nimport { useLoggedModelsForExperimentRunV2 } from '../experiment-page/hooks/useLoggedModelsForExperimentRunV2';\nimport { RunViewEvaluationsTab } from '../evaluations/RunViewEvaluationsTab';\n\nconst RunPageLoadingState = () => (\n  <PageContainer>\n    <TitleSkeleton\n      loading\n      label={<FormattedMessage defaultMessage=\"Run page loading\" description=\"Run page > Loading state\" />}\n    />\n    {[...Array(3).keys()].map((i) => (\n      <ParagraphSkeleton key={i} seed={`s-${i}`} />\n    ))}\n  </PageContainer>\n);\n\nexport const RunPage = () => {\n  const { runUuid, experimentId } = useParams<{\n    runUuid: string;\n    experimentId: string;\n  }>();\n  const navigate = useNavigate();\n  const { theme } = useDesignSystemTheme();\n  const [renameModalVisible, setRenameModalVisible] = useState(false);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  invariant(runUuid, '[RunPage] Run UUID route param not provided');\n  invariant(experimentId, '[RunPage] Experiment ID route param not provided');\n\n  const {\n    experiment,\n    error,\n    latestMetrics,\n    loading,\n    params,\n    refetchRun,\n    runInfo,\n    tags,\n    experimentFetchError,\n    runFetchError,\n    apiError,\n    datasets,\n    runInputs,\n    runOutputs,\n    registeredModelVersionSummaries,\n  } = useRunDetailsPageData({\n    experimentId,\n    runUuid,\n  });\n\n  const [modelMetricKeys, systemMetricKeys] = useMemo<[string[], string[]]>(() => {\n    if (!latestMetrics) {\n      return [[], []];\n    }\n\n    return [\n      Object.keys(latestMetrics).filter((metricKey) => !isSystemMetricKey(metricKey)),\n      Object.keys(latestMetrics).filter((metricKey) => isSystemMetricKey(metricKey)),\n    ];\n  }, [latestMetrics]);\n\n  const { comparedExperimentIds = [], hasComparedExperimentsBefore = false } = useSelector(\n    (state: ReduxState) => state.comparedExperiments || {},\n  );\n\n  const activeTab = useRunViewActiveTab();\n\n  const isUsingGetLoggedModelsApi = shouldUseGetLoggedModelsBatchAPI();\n\n  const loggedModelsForRun = useLoggedModelsForExperimentRun(\n    experimentId,\n    runUuid,\n    runInputs,\n    runOutputs,\n    !isUsingGetLoggedModelsApi,\n  );\n  const loggedModelsForRunV2 = useLoggedModelsForExperimentRunV2({\n    runInputs,\n    runOutputs,\n    enabled: isUsingGetLoggedModelsApi,\n  });\n\n  const {\n    error: loggedModelsError,\n    isLoading: isLoadingLoggedModels,\n    models: loggedModelsV3,\n  } = isUsingGetLoggedModelsApi ? loggedModelsForRunV2 : loggedModelsForRun;\n\n  const renderActiveTab = () => {\n    if (!runInfo) {\n      return null;\n    }\n    switch (activeTab) {\n      case RunPageTabName.MODEL_METRIC_CHARTS:\n        return (\n          <RunViewMetricCharts\n            key=\"model\"\n            mode=\"model\"\n            metricKeys={modelMetricKeys}\n            runInfo={runInfo}\n            latestMetrics={latestMetrics}\n            tags={tags}\n            params={params}\n          />\n        );\n\n      case RunPageTabName.SYSTEM_METRIC_CHARTS:\n        return (\n          <RunViewMetricCharts\n            key=\"system\"\n            mode=\"system\"\n            metricKeys={systemMetricKeys}\n            runInfo={runInfo}\n            latestMetrics={latestMetrics}\n            tags={tags}\n            params={params}\n          />\n        );\n      case RunPageTabName.ARTIFACTS:\n        return (\n          <RunViewArtifactTab\n            runUuid={runUuid}\n            runTags={tags}\n            runOutputs={runOutputs}\n            experimentId={experimentId}\n            artifactUri={runInfo.artifactUri ?? undefined}\n          />\n        );\n      case RunPageTabName.TRACES:\n        return (\n          <RunViewEvaluationsTab\n            runUuid={runUuid}\n            runTags={tags}\n            experimentId={experimentId}\n            runDisplayName={Utils.getRunDisplayName(runInfo, runUuid)}\n          />\n        );\n    }\n\n    return (\n      <RunViewOverview\n        runInfo={runInfo}\n        tags={tags}\n        params={params}\n        latestMetrics={latestMetrics}\n        runUuid={runUuid}\n        onRunDataUpdated={refetchRun}\n        runInputs={runInputs}\n        runOutputs={runOutputs}\n        datasets={datasets}\n        registeredModelVersionSummaries={registeredModelVersionSummaries}\n        loggedModelsV3={loggedModelsV3}\n        isLoadingLoggedModels={isLoadingLoggedModels}\n        loggedModelsError={loggedModelsError ?? undefined}\n      />\n    );\n  };\n\n  // Use full height page with scrollable tab area only for non-xs screens\n  const useFullHeightPage = useMediaQuery(`(min-width: ${theme.responsive.breakpoints.sm}px)`);\n\n  const initialLoading = loading && (!runInfo || !experiment);\n\n  // Handle \"run not found\" error\n  if (\n    // For REST API:\n    (runFetchError instanceof ErrorWrapper && runFetchError.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST) ||\n    // For GraphQL:\n    apiError?.code === ErrorCodes.RESOURCE_DOES_NOT_EXIST ||\n    (error && getGraphQLErrorMessage(error).match(/not found$/))\n  ) {\n    return <RunNotFoundView runId={runUuid} />;\n  }\n\n  // Handle experiment not found error\n  if (\n    experimentFetchError instanceof ErrorWrapper &&\n    experimentFetchError.getErrorCode() === ErrorCodes.RESOURCE_DOES_NOT_EXIST\n  ) {\n    return <NotFoundPage />;\n  }\n\n  // Catch-all for legacy REST API errors\n  if (runFetchError || experimentFetchError) {\n    return null;\n  }\n\n  // Catch-all for GraphQL errors\n  if (shouldEnableGraphQLRunDetailsPage() && (error || apiError)) {\n    return (\n      <div css={{ marginTop: theme.spacing.lg }}>\n        <Empty\n          title={\n            <FormattedMessage\n              defaultMessage=\"Can't load run details\"\n              description=\"Run page > error loading page title\"\n            />\n          }\n          description={getGraphQLErrorMessage(apiError ?? error)}\n          image={<DangerIcon />}\n        />\n      </div>\n    );\n  }\n\n  // Display spinner/skeleton for the initial data load\n  if (initialLoading || !runInfo || !experiment) {\n    return <RunPageLoadingState />;\n  }\n\n  return (\n    <>\n      <PageContainer usesFullHeight={useFullHeightPage}>\n        {/* Header fixed on top */}\n        <RunViewHeader\n          comparedExperimentIds={comparedExperimentIds}\n          experiment={experiment}\n          handleRenameRunClick={() => setRenameModalVisible(true)}\n          handleDeleteRunClick={() => setDeleteModalVisible(true)}\n          hasComparedExperimentsBefore={hasComparedExperimentsBefore}\n          runDisplayName={Utils.getRunDisplayName(runInfo, runUuid)}\n          runTags={tags}\n          runParams={params}\n          runUuid={runUuid}\n          artifactRootUri={runInfo?.artifactUri ?? undefined}\n          registeredModelVersionSummaries={registeredModelVersionSummaries}\n          isLoading={loading || isLoadingLoggedModels}\n        />\n        {/* Scroll tab contents independently within own container */}\n        <div css={{ flex: 1, overflow: 'auto', marginBottom: theme.spacing.sm, display: 'flex' }}>\n          {renderActiveTab()}\n        </div>\n      </PageContainer>\n      <RenameRunModal\n        runUuid={runUuid}\n        onClose={() => setRenameModalVisible(false)}\n        runName={runInfo.runName ?? ''}\n        isOpen={renameModalVisible}\n        onSuccess={refetchRun}\n      />\n      <DeleteRunModal\n        selectedRunIds={[runUuid]}\n        onClose={() => setDeleteModalVisible(false)}\n        isOpen={deleteModalVisible}\n        onSuccess={() => {\n          navigate(Routes.getExperimentPageRoute(experimentId));\n        }}\n      />\n    </>\n  );\n};\n\nexport default RunPage;\n","import { useMemo } from 'react';\nimport { useSearchLoggedModelsQuery } from '../../../hooks/logged-models/useSearchLoggedModelsQuery';\nimport { UseGetRunQueryResponseInputs, UseGetRunQueryResponseOutputs } from '../../run-page/hooks/useGetRunQuery';\nimport { compact, isEmpty, uniq } from 'lodash';\n\nexport const useLoggedModelsForExperimentRun = (\n  experimentId: string,\n  runId: string,\n  runInputs?: UseGetRunQueryResponseInputs,\n  runOutputs?: UseGetRunQueryResponseOutputs,\n  enabled = true,\n) => {\n  const searchQuery = useMemo(() => {\n    const inputs = runInputs?.modelInputs ?? [];\n    const outputs = runOutputs?.modelOutputs ?? [];\n    const allModels = [...inputs, ...outputs];\n    const modelIds = uniq(compact(allModels.map(({ modelId }) => modelId)));\n\n    if (isEmpty(modelIds)) {\n      return undefined;\n    }\n\n    return `attributes.model_id IN (${modelIds.map((id) => `'${id}'`).join(',')})`;\n  }, [runInputs, runOutputs]);\n\n  const isHookEnabled = enabled && Boolean(searchQuery);\n\n  const {\n    data: loggedModelsData,\n    isLoading,\n    error,\n  } = useSearchLoggedModelsQuery(\n    { experimentIds: [experimentId], searchQuery },\n    {\n      enabled: isHookEnabled,\n    },\n  );\n\n  return {\n    // We explicitly check if the hook is supposed to be enabled before returning data,\n    // otherwise react-query might erroneously return data from the cache.\n    models: isHookEnabled ? loggedModelsData : undefined,\n    // Same goes for `isLoading` which sometimes returns `true` despite the hook being disabled.\n    isLoading: isHookEnabled && isLoading,\n    error,\n  };\n};\n","import { ApolloError } from '@mlflow/mlflow/src/common/utils/graphQLHooks';\n\ninterface CommonGraphQLApiError {\n  code: string | null;\n  message: string | null;\n}\n\nexport const getGraphQLErrorMessage = (error?: CommonGraphQLApiError | ApolloError | Error | any) => {\n  if (!error) {\n    return undefined;\n  }\n  if (error instanceof ApolloError) {\n    if (error.graphQLErrors.length > 0) {\n      return error.graphQLErrors.map((e) => e.toString()).join(', ');\n    }\n  }\n\n  if ('message' in error) {\n    return error.message;\n  }\n\n  return error.toString();\n};\n","import { useDesignSystemTheme } from '@databricks/design-system';\n\nexport function TagAssignmentRowContainer({ children }: { children: React.ReactNode }) {\n  const { theme } = useDesignSystemTheme();\n  return <div css={{ display: 'flex', flexDirection: 'column', gap: theme.spacing.sm }}>{children}</div>;\n}\n","import invariant from 'invariant';\nimport { createContext, useContext } from 'react';\nimport type { FieldValues, ArrayPath, FieldArray } from 'react-hook-form';\n\nimport type { UseTagAssignmentFormReturn } from '../hooks/useTagAssignmentForm';\n\nexport const TagAssignmentContext = createContext<UseTagAssignmentFormReturn | null>(null);\n\nexport function TagAssignmentContextProvider<\n  T extends FieldValues = FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n>({ children, ...props }: { children: React.ReactNode } & UseTagAssignmentFormReturn<T, K, V>) {\n  return <TagAssignmentContext.Provider value={props as any}>{children}</TagAssignmentContext.Provider>;\n}\n\nexport function useTagAssignmentContext<\n  T extends FieldValues = FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n>() {\n  const context = useContext(TagAssignmentContext as React.Context<UseTagAssignmentFormReturn<T, K, V> | null>);\n  invariant(context, 'useTagAssignmentContext must be used within a TagAssignmentRoot');\n  return context;\n}\n","import invariant from 'invariant';\nimport type { ArrayPath, FieldArray, FieldValues } from 'react-hook-form';\nimport { FormProvider, useFormContext } from 'react-hook-form';\n\nimport { TagAssignmentRowContainer } from './TagAssignmentUI/TagAssignmentRowContainer';\nimport { TagAssignmentContextProvider } from '../context/TagAssignmentContextProvider';\nimport type { UseTagAssignmentFormReturn } from '../hooks/useTagAssignmentForm';\n\nexport function TagAssignmentRoot<\n  T extends FieldValues = FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n>({ children, ...props }: { children: React.ReactNode } & UseTagAssignmentFormReturn<T, K, V>) {\n  const formCtx = useFormContext();\n\n  const Component = (\n    <TagAssignmentContextProvider {...props}>\n      <TagAssignmentRowContainer>{children}</TagAssignmentRowContainer>\n    </TagAssignmentContextProvider>\n  );\n\n  if (formCtx) {\n    return Component;\n  }\n\n  invariant(props.form, 'Nest your component on a FormProvider or pass a form prop');\n\n  return <FormProvider {...props.form}>{Component}</FormProvider>;\n}\n","import invariant from 'invariant';\nimport React from 'react';\n\nimport { useDesignSystemTheme } from '@databricks/design-system';\n\nexport function TagAssignmentRow({ children }: { children: React.ReactNode }) {\n  const { theme } = useDesignSystemTheme();\n\n  const stableChildren = React.Children.toArray(children);\n  invariant(stableChildren.length <= 3, 'TagAssignmentRow must have 3 children or less');\n\n  const parsedChildren = Array(3)\n    .fill(null)\n    .map((_, i) => stableChildren[i] ?? <span key={i} style={{ width: theme.general.heightSm }} />); // Sync width with only icon button width\n\n  return (\n    <div css={{ display: 'grid', gridTemplateColumns: '1fr 1fr min-content', gap: theme.spacing.sm }}>\n      {parsedChildren}\n    </div>\n  );\n}\n","import { Typography } from '@databricks/design-system';\n\nexport function TagAssignmentLabel({ children }: { children: React.ReactNode }) {\n  return <Typography.Text bold>{children}</Typography.Text>;\n}\n","import { forwardRef } from 'react';\n\nimport type { InputProps, InputRef } from '@databricks/design-system';\nimport { FormUI, Input } from '@databricks/design-system';\n\ninterface TagAssignmentInputProps extends InputProps {\n  errorMessage?: string;\n}\n\nexport const TagAssignmentInput: React.ForwardRefExoticComponent<\n  TagAssignmentInputProps & React.RefAttributes<InputRef>\n> = forwardRef<InputRef, TagAssignmentInputProps>(({ errorMessage, ...otherProps }: TagAssignmentInputProps, ref) => {\n  return (\n    <div css={{ flex: 1 }}>\n      <Input validationState={errorMessage ? 'error' : 'info'} {...otherProps} ref={ref} />\n      {errorMessage && <FormUI.Message message={errorMessage} type=\"error\" />}\n    </div>\n  );\n});\n","// Do not modify this file\n\nimport React from 'react';\nimport type { ControllerProps, FieldValues, Path, UseControllerProps } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport { TagAssignmentInput } from './TagAssignmentField/TagAssignmentInput';\nimport { useTagAssignmentContext } from '../context/TagAssignmentContextProvider';\n\ninterface TagAssignmentKeyProps<T extends FieldValues> {\n  index: number;\n  rules?: UseControllerProps<T>['rules'];\n  render?: ControllerProps<T>['render'];\n}\n\nexport function TagAssignmentKey<T extends FieldValues>({ index, rules, render }: TagAssignmentKeyProps<T>) {\n  const { name, keyProperty, getTagsValues, emptyValue, appendIfPossible } = useTagAssignmentContext<T>();\n\n  return (\n    <Controller\n      name={`${name}.${index}.${keyProperty}` as Path<T>}\n      rules={rules}\n      render={({ field, fieldState, formState }) => {\n        const legacyChange = field.onChange;\n\n        function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n          legacyChange(e);\n\n          const tags = getTagsValues();\n          if (!tags?.at(-1)?.[keyProperty]) return;\n          appendIfPossible(emptyValue, { shouldFocus: false });\n        }\n        field.onChange = handleChange;\n\n        if (render) {\n          return render({ field, fieldState, formState });\n        }\n\n        return (\n          <TagAssignmentInput\n            componentId=\"TagAssignmentKey.Default.Input\"\n            errorMessage={fieldState.error?.message}\n            {...field}\n          />\n        );\n      }}\n    />\n  );\n}\n","// Do not modify this file\n\nimport type { ControllerProps, FieldValues, Path } from 'react-hook-form';\nimport { Controller } from 'react-hook-form';\n\nimport { TagAssignmentInput } from './TagAssignmentField/TagAssignmentInput';\nimport { useTagAssignmentContext } from '../context/TagAssignmentContextProvider';\n\ninterface TagAssignmentValueProps<T extends FieldValues> {\n  rules?: ControllerProps<T>['rules'];\n  index: number;\n  render?: ControllerProps<T>['render'];\n}\n\nexport function TagAssignmentValue<T extends FieldValues>({ rules, index, render }: TagAssignmentValueProps<T>) {\n  const { name, valueProperty } = useTagAssignmentContext<T>();\n\n  return (\n    <Controller\n      rules={rules}\n      name={`${name}.${index}.${valueProperty}` as Path<T>}\n      render={({ field, fieldState, formState }) => {\n        if (render) {\n          return render({ field, fieldState, formState });\n        }\n\n        return (\n          <TagAssignmentInput\n            componentId=\"TagAssignmentValue.Default.Input\"\n            errorMessage={fieldState.error?.message}\n            {...field}\n          />\n        );\n      }}\n    />\n  );\n}\n","import type { ButtonProps } from '@databricks/design-system';\nimport { Button, TrashIcon } from '@databricks/design-system';\n\nexport function TagAssignmentRemoveButtonUI(props: Omit<ButtonProps, 'icon'>) {\n  return <Button icon={<TrashIcon />} {...props} />;\n}\n","import type { ButtonProps } from '@databricks/design-system';\n\nimport { TagAssignmentRemoveButtonUI } from './TagAssignmentUI/TagAssignmentRemoveButtonUI';\nimport { useTagAssignmentContext } from '../context/TagAssignmentContextProvider';\n\nexport interface TagAssignmentRemoveButtonProps extends Omit<ButtonProps, 'onClick' | 'icon'> {\n  index: number;\n}\n\nexport function TagAssignmentRemoveButton({ index, ...props }: TagAssignmentRemoveButtonProps) {\n  const { removeOrUpdate } = useTagAssignmentContext();\n\n  return <TagAssignmentRemoveButtonUI onClick={() => removeOrUpdate(index)} {...props} />;\n}\n","import invariant from 'invariant';\nimport { useCallback, useState } from 'react';\nimport type { ArrayPath, FieldArray, FieldArrayMethodProps, FieldValues, Path } from 'react-hook-form';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\n\nimport { useIntl } from 'react-intl';\nimport type { IntlShape } from 'react-intl';\n\nimport type { UseTagAssignmentProps } from './useTagAssignmentForm';\n\nfunction getTagAssignmentRules(maxLength: number | undefined, intl: IntlShape) {\n  if (maxLength === undefined) return undefined;\n  if (maxLength === 0) {\n    invariant(false, 'maxLength must be greater than 0');\n  }\n  return {\n    maxLength: {\n      value: maxLength,\n      message: intl.formatMessage(\n        {\n          defaultMessage: `You can set a maximum of {maxLength} values`,\n          description:\n            'Error message when trying to submit a key-value pair form with more than the maximum allowed values',\n        },\n        {\n          maxLength,\n        },\n      ),\n    },\n  };\n}\n\ntype UseTagAssignmentFieldArrayProps<\n  T extends FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n> = Pick<UseTagAssignmentProps<T, K, V>, 'name' | 'maxLength' | 'emptyValue' | 'form' | 'keyProperty'>;\n\n/**\n * Alternative to useTagAssignmentForm that only provides a wrapper around RHF's useFieldArray without any\n * side effects to initialize the form state.\n *\n * As with useFieldArray, the caller is expected to manage the form state themselves using these methods.\n * For conformance to the unified tagging pattern, there are 2 key things you are responsible for:\n *   1. Initialize the form state with an empty tag\n *   2. Call appendIfPossible when the user inputs something into the last tag key field\n */\nexport function useTagAssignmentFieldArray<\n  T extends FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n>({ name, maxLength, emptyValue, form, keyProperty }: UseTagAssignmentFieldArrayProps<T, K, V>) {\n  const intl = useIntl();\n\n  const formCtx = useFormContext<T>();\n  const shouldUseFormContext = Boolean(formCtx) && !form;\n  const internalForm = shouldUseFormContext ? formCtx : form;\n\n  invariant(internalForm, 'Nest your component on a FormProvider or pass a form prop');\n\n  const [_emptyValue] = useState(emptyValue);\n  const {\n    append: originalAppend,\n    update,\n    remove: originalRemove,\n    ...fieldArrayMethods\n  } = useFieldArray<T, K>({\n    name,\n    control: internalForm.control,\n    rules: getTagAssignmentRules(maxLength, intl),\n  });\n\n  const { getValues } = internalForm;\n\n  const getTagsValues = useCallback(() => {\n    return getValues(name as Path<T>) as V[] | undefined;\n  }, [getValues, name]);\n\n  const appendIfPossible = useCallback(\n    (value: V | V[], options: FieldArrayMethodProps) => {\n      const tags = getTagsValues();\n      if (maxLength && tags && tags.length >= maxLength) return;\n      originalAppend(value, options);\n    },\n    [getTagsValues, maxLength, originalAppend],\n  );\n\n  const removeOrUpdate = useCallback(\n    (index: number) => {\n      const tags = getTagsValues();\n      if (tags && index === tags.length - 1) {\n        return update(index, _emptyValue);\n      }\n      const lastTag = tags?.at(-1);\n      if (lastTag?.[keyProperty]) {\n        originalRemove(index);\n        originalAppend(_emptyValue, { shouldFocus: false });\n        return;\n      }\n      originalRemove(index);\n    },\n    [_emptyValue, getTagsValues, keyProperty, originalAppend, originalRemove, update],\n  );\n\n  return {\n    form: internalForm,\n    ...fieldArrayMethods,\n    originalAppend,\n    update,\n    originalRemove,\n    appendIfPossible,\n    removeOrUpdate,\n    getTagsValues,\n  };\n}\n\nexport type UseTagAssignmentFieldArrayReturn<\n  T extends FieldValues = FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n> = ReturnType<typeof useTagAssignmentFieldArray<T, K, V>>;\n","import invariant from 'invariant';\nimport { useEffect, useState } from 'react';\nimport type { ArrayPath, FieldArray, FieldValues, Path, PathValue, UseFormReturn } from 'react-hook-form';\nimport { useFormContext } from 'react-hook-form';\n\nimport { useTagAssignmentFieldArray } from './useTagAssignmentFieldArray';\n\nexport interface UseTagAssignmentProps<\n  T extends FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n> {\n  name: K;\n  maxLength?: number;\n  emptyValue: V;\n  loading?: boolean;\n  defaultValues?: V[];\n  form?: UseFormReturn<T>;\n  keyProperty: keyof V extends string ? keyof V : never;\n  valueProperty: keyof V extends string ? keyof V : never;\n}\n\nexport function useTagAssignmentForm<\n  T extends FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n>({\n  name,\n  maxLength,\n  emptyValue,\n  defaultValues,\n  loading,\n  form,\n  keyProperty,\n  valueProperty,\n}: UseTagAssignmentProps<T, K, V>) {\n  const [_emptyValue] = useState(emptyValue);\n\n  const formCtx = useFormContext<T>();\n  const shouldUseFormContext = Boolean(formCtx) && !form;\n  const internalForm = shouldUseFormContext ? formCtx : form;\n\n  invariant(internalForm, 'Nest your component on a FormProvider or pass a form prop');\n  invariant(!(defaultValues && shouldUseFormContext), 'Define defaultValues at form context level');\n\n  const { setValue } = internalForm;\n\n  const fieldArrayMethods = useTagAssignmentFieldArray({\n    name,\n    maxLength,\n    emptyValue,\n    form: internalForm,\n    keyProperty,\n  });\n  const getTagsValues = fieldArrayMethods.getTagsValues;\n\n  useEffect(() => {\n    if (loading) return;\n    if (defaultValues) {\n      const newValues = [...defaultValues];\n      if (!maxLength || (maxLength && newValues.length < maxLength)) {\n        newValues.push(_emptyValue);\n      }\n      setValue(name as Path<T>, newValues as PathValue<T, Path<T>>);\n      return;\n    }\n\n    if (shouldUseFormContext) {\n      const existentValues = getTagsValues() ?? [];\n      if (!maxLength || (maxLength && existentValues.length < maxLength)) {\n        existentValues.push(_emptyValue);\n      }\n      setValue(name as Path<T>, existentValues as PathValue<T, Path<T>>);\n      return;\n    }\n\n    setValue(name as Path<T>, [_emptyValue] as PathValue<T, Path<T>>);\n  }, [defaultValues, setValue, loading, maxLength, name, _emptyValue, shouldUseFormContext, getTagsValues]);\n\n  return {\n    ...fieldArrayMethods,\n    form: internalForm,\n    maxLength,\n    emptyValue,\n    name,\n    keyProperty,\n    valueProperty,\n  };\n}\n\nexport type UseTagAssignmentFormReturn<\n  T extends FieldValues = FieldValues,\n  K extends ArrayPath<T> = ArrayPath<T>,\n  V extends FieldArray<T, K> = FieldArray<T, K>,\n> = ReturnType<typeof useTagAssignmentForm<T, K, V>>;\n","import {\n  useTagAssignmentForm,\n  TagAssignmentRoot,\n  TagAssignmentRow,\n  TagAssignmentLabel,\n  TagAssignmentKey,\n  TagAssignmentValue,\n  TagAssignmentRemoveButton,\n} from '@databricks/web-shared/unified-tagging';\nimport { UseFormReturn } from 'react-hook-form';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { KeyValueEntity } from '../types';\n\nconst keyProperty = 'key';\nconst valueProperty = 'value';\n\ninterface Props {\n  name: string;\n  form: UseFormReturn<any>;\n  initialTags?: KeyValueEntity[];\n}\n\n/**\n * A component used for displaying the unified tagging form.\n */\nexport const UnifiedTaggingForm = ({ form, name, initialTags }: Props) => {\n  const intl = useIntl();\n\n  const tagsForm = useTagAssignmentForm({\n    name,\n    emptyValue: { key: '', value: '' },\n    keyProperty,\n    valueProperty,\n    form,\n    defaultValues: initialTags,\n  });\n\n  return (\n    <TagAssignmentRoot {...tagsForm}>\n      <TagAssignmentRow>\n        <TagAssignmentLabel>\n          <FormattedMessage defaultMessage=\"Key\" description=\"Tag assignment modal > Key label\" />\n        </TagAssignmentLabel>\n        <TagAssignmentLabel>\n          <FormattedMessage defaultMessage=\"Value\" description=\"Tag assignment modal > Value label\" />\n        </TagAssignmentLabel>\n      </TagAssignmentRow>\n\n      {tagsForm.fields.map((field, index) => {\n        return (\n          <TagAssignmentRow key={field.id}>\n            <TagAssignmentKey\n              index={index}\n              rules={{\n                validate: {\n                  unique: (value) => {\n                    const tags = tagsForm.getTagsValues();\n                    if (tags?.findIndex((tag) => tag[keyProperty] === value) !== index) {\n                      return intl.formatMessage({\n                        defaultMessage: 'Key must be unique',\n                        description: 'Error message for unique key in tag assignment modal',\n                      });\n                    }\n                    return true;\n                  },\n                  required: (value) => {\n                    const tags = tagsForm.getTagsValues();\n                    if (tags?.at(index)?.[valueProperty] && !value) {\n                      return intl.formatMessage({\n                        defaultMessage: 'Key is required if value is present',\n                        description: 'Error message for required key in tag assignment modal',\n                      });\n                    }\n                    return true;\n                  },\n                },\n              }}\n            />\n            <TagAssignmentValue index={index} />\n            <TagAssignmentRemoveButton index={index} componentId=\"endpoint-tags-section.remove-button\" />\n          </TagAssignmentRow>\n        );\n      })}\n    </TagAssignmentRoot>\n  );\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Modal, Button, Alert, useDesignSystemTheme } from '@databricks/design-system';\nimport { FormattedMessage } from 'react-intl';\nimport type { FieldValues } from 'react-hook-form';\nimport { KeyValueEntity } from '../types';\nimport { UnifiedTaggingForm } from '../components/UnifiedTaggingForm';\n\ninterface Params {\n  componentIdPrefix: string;\n  title?: React.ReactNode;\n  isLoading?: boolean;\n  visible?: boolean;\n  initialTags?: KeyValueEntity[];\n  error?: string;\n  onSubmit: (newTags: KeyValueEntity[], deletedTags: KeyValueEntity[]) => Promise<any>;\n  onSuccess?: () => void;\n  onClose?: () => void;\n}\n\nconst keyProperty = 'key' as const;\nconst valueProperty = 'value' as const;\nconst formName = 'tags';\n\nconst emptyValue = { key: '', value: '' };\n\nexport const useTagAssignmentModal = ({\n  componentIdPrefix,\n  title,\n  visible,\n  initialTags,\n  isLoading = false,\n  error,\n  onSubmit,\n  onSuccess,\n  onClose,\n}: Params) => {\n  const baseComponentId = `${componentIdPrefix}.tag-assignment-modal`;\n\n  const [isVisible, setIsVisible] = useState(false);\n  const { theme } = useDesignSystemTheme();\n  const form = useForm<{ tags: KeyValueEntity[] }>({ mode: 'onChange' });\n\n  const showTagAssignmentModal = () => {\n    setIsVisible(true);\n  };\n\n  const hideTagAssignmentModal = () => {\n    setIsVisible(false);\n    form.reset({ [formName]: [emptyValue] });\n    onClose?.();\n  };\n\n  const handleSubmit = (data: FieldValues) => {\n    const tags: KeyValueEntity[] = data[formName].filter((tag: FieldValues) => Boolean(tag[keyProperty]));\n    const newTags =\n      tags.filter(\n        (tag) =>\n          !initialTags?.some((t) => t[keyProperty] === tag[keyProperty] && t[valueProperty] === tag[valueProperty]),\n      ) ?? [];\n    const deletedTags =\n      initialTags?.filter(\n        (tag) => !tags.some((t) => t[keyProperty] === tag[keyProperty] && t[valueProperty] === tag[valueProperty]),\n      ) ?? [];\n\n    onSubmit(newTags, deletedTags).then(() => {\n      hideTagAssignmentModal();\n      onSuccess?.();\n    });\n  };\n\n  const defaultTitleNode = (\n    <FormattedMessage defaultMessage=\"Add tags\" description=\"Tag assignment modal > Title of the add tags modal\" />\n  );\n\n  const TagAssignmentModal = (\n    <Modal\n      componentId={`${baseComponentId}`}\n      title={title ?? defaultTitleNode}\n      visible={visible ?? isVisible}\n      destroyOnClose\n      onCancel={hideTagAssignmentModal}\n      footer={\n        <>\n          <Button\n            componentId={`${baseComponentId}.submit-button`}\n            onClick={hideTagAssignmentModal}\n            disabled={isLoading}\n          >\n            <FormattedMessage defaultMessage=\"Cancel\" description=\"Tag assignment modal > Cancel button\" />\n          </Button>\n          <Button\n            componentId={`${baseComponentId}.submit-button`}\n            type=\"primary\"\n            onClick={form.handleSubmit(handleSubmit)}\n            loading={isLoading}\n            disabled={isLoading}\n          >\n            <FormattedMessage defaultMessage=\"Save\" description=\"Tag assignment modal > Save button\" />\n          </Button>\n        </>\n      }\n    >\n      {error && (\n        <Alert\n          type=\"error\"\n          message={error}\n          componentId={`${baseComponentId}.error`}\n          closable={false}\n          css={{ marginBottom: theme.spacing.sm }}\n        />\n      )}\n      <UnifiedTaggingForm name={formName} form={form} initialTags={initialTags} />\n    </Modal>\n  );\n\n  return {\n    TagAssignmentModal,\n    showTagAssignmentModal,\n    hideTagAssignmentModal,\n  };\n};\n\nexport type { Params as TagAssignmentModalParams };\n","import _ from 'lodash';\n// Import pako lazily to reduce bundle size\nconst lazyPako = () => import('pako');\n\nexport const truncateToFirstLineWithMaxLength = (str: string, maxLength: number): string => {\n  const truncated = _.truncate(str, {\n    length: maxLength,\n  });\n  return _.takeWhile(truncated, (char) => char !== '\\n').join('');\n};\n\nexport const capitalizeFirstChar = (str: unknown) => {\n  if (!str || typeof str !== 'string' || str.length < 1) {\n    return str;\n  }\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nexport const middleTruncateStr = (str: string, maxLen: number) => {\n  if (str.length > maxLen) {\n    const firstPartLen = Math.floor((maxLen - 3) / 2);\n    const lastPartLen = maxLen - 3 - firstPartLen;\n    return str.substring(0, firstPartLen) + '...' + str.substring(str.length - lastPartLen, str.length);\n  } else {\n    return str;\n  }\n};\n\nconst capitalizeFirstLetter = (string: string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/* eslint-disable no-bitwise */\n/**\n * UTF-8 safe version of base64 encoder\n * Source: http://www.webtoolkit.info/javascript_base64.html\n *\n * @param {string} input - Text to encode\n */\nexport const btoaUtf8 = (input: string) => {\n  let output = '';\n  let i = 0;\n\n  const result = _utf8_encode(input);\n\n  while (i < result.length) {\n    const chr1 = result.charCodeAt(i++);\n    const chr2 = result.charCodeAt(i++);\n    const chr3 = result.charCodeAt(i++);\n\n    const enc1 = chr1 >> 2;\n    const enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    let enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    let enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc4 = 64;\n      enc3 = enc4;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n\n  return output;\n};\n\n/**\n * UTF-8 safe version of base64 decoder\n * Source: http://www.webtoolkit.info/javascript_base64.html\n *\n * @param {string} input - Text to decode\n */\nexport const atobUtf8 = (input: string) => {\n  let output = '';\n  let i = 0;\n\n  const result = input?.replace(/[^A-Za-z0-9+/=]/g, '') || '';\n\n  while (i < result.length) {\n    const enc1 = _keyStr.indexOf(result.charAt(i++));\n    const enc2 = _keyStr.indexOf(result.charAt(i++));\n    const enc3 = _keyStr.indexOf(result.charAt(i++));\n    const enc4 = _keyStr.indexOf(result.charAt(i++));\n\n    const chr1 = (enc1 << 2) | (enc2 >> 4);\n    const chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n    const chr3 = ((enc3 & 3) << 6) | enc4;\n\n    output += String.fromCharCode(chr1);\n\n    if (enc3 !== 64) {\n      output += String.fromCharCode(chr2);\n    }\n\n    if (enc4 !== 64) {\n      output += String.fromCharCode(chr3);\n    }\n  }\n\n  return _utf8_decode(output);\n};\n\n/**\n * (private method) does a UTF-8 encoding\n *\n * @private\n * @param {string} string - Text to encode\n */\nconst _utf8_encode = (string = '') => {\n  const result = string.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (let n = 0; n < result.length; n++) {\n    const c = result.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode((c >> 6) | 192) + String.fromCharCode((c & 63) | 128);\n    } else {\n      utftext +=\n        String.fromCharCode((c >> 12) | 224) +\n        String.fromCharCode(((c >> 6) & 63) | 128) +\n        String.fromCharCode((c & 63) | 128);\n    }\n  }\n\n  return utftext;\n};\n\n/**\n * (private method) does a UTF-8 decoding\n *\n * @private\n * @param {string} utftext - UTF-8 text to dencode\n */\nconst _utf8_decode = (utftext = '') => {\n  let string = '';\n  let i = 0;\n\n  while (i < utftext.length) {\n    const c = utftext.charCodeAt(i);\n\n    if (c < 128) {\n      string += String.fromCharCode(c);\n      i++;\n    } else if (c > 191 && c < 224) {\n      const c2 = utftext.charCodeAt(i + 1);\n      string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n      i += 2;\n    } else {\n      const c2 = utftext.charCodeAt(i + 1);\n      const c3 = utftext.charCodeAt(i + 2);\n      string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n      i += 3;\n    }\n  }\n  return string;\n};\n/* eslint-enable no-bitwise */\n\n/**\n * Returns a SHA256 hash of the input string\n */\nexport const getStringSHA256 = (input: string) => {\n  return crypto.subtle.digest('SHA-256', new TextEncoder().encode(input)).then((arrayBuffer) => {\n    return Array.prototype.map.call(new Uint8Array(arrayBuffer), (x) => ('00' + x.toString(16)).slice(-2)).join('');\n  });\n};\n\nconst COMPRESSED_TEXT_DEFLATE_PREFIX = 'deflate;';\n\nexport const textCompressDeflate = async (text: string) => {\n  const pako = await lazyPako();\n  const binaryData = pako.deflate(text);\n\n  // Buffer-based implementation\n  if (typeof Buffer !== 'undefined') {\n    const b64encoded = Buffer.from(binaryData).toString('base64');\n    return `${COMPRESSED_TEXT_DEFLATE_PREFIX}${b64encoded}`;\n  }\n\n  // btoa-based implementation\n  const binaryString = Array.from(binaryData, (byte) => String.fromCodePoint(byte)).join('');\n  return `${COMPRESSED_TEXT_DEFLATE_PREFIX}${btoa(binaryString)}`;\n};\n\nexport const textDecompressDeflate = async (compressedText: string) => {\n  const pako = await lazyPako();\n  if (!compressedText.startsWith(COMPRESSED_TEXT_DEFLATE_PREFIX)) {\n    throw new Error('Invalid compressed text, payload header invalid');\n  }\n  const compressedTextWithoutPrefix = compressedText.slice(COMPRESSED_TEXT_DEFLATE_PREFIX.length);\n\n  // Buffer-based implementation\n  if (typeof Buffer !== 'undefined') {\n    const binaryString = Buffer.from(compressedTextWithoutPrefix, 'base64');\n    return pako.inflate(\n      // This doesn't fail in Mlflow-Copybara-Tester-Pr. TODO: check why.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore [FEINF-4084] No overload matches this call.\n      binaryString,\n      { to: 'string' },\n    );\n  }\n\n  // atob-based implementation\n  const binaryString = atob(compressedTextWithoutPrefix);\n  return pako.inflate(\n    Uint8Array.from(binaryString, (m) => m.codePointAt(0) ?? 0),\n    { to: 'string' },\n  );\n};\n\nexport const isTextCompressedDeflate = (text: string) => text.startsWith(COMPRESSED_TEXT_DEFLATE_PREFIX);\n","/**\n * NOTE: this code file was automatically migrated to TypeScript using ts-migrate and\n * may contain multiple `any` type annotations and `@ts-expect-error` directives.\n * If possible, please improve types while making changes to this file. If the type\n * annotations are already looking good, please remove this comment.\n */\n\nimport React from 'react';\nimport { PageWrapper, Spacer } from '@databricks/design-system';\n\ntype OwnProps = {\n  usesFullHeight?: boolean;\n  children?: React.ReactNode;\n};\n\n// @ts-expect-error TS(2565): Property 'defaultProps' is used before being assig... Remove this comment to see the full error message\ntype Props = OwnProps & typeof PageContainer.defaultProps;\n\nexport function PageContainer(props: Props) {\n  const { usesFullHeight, ...restProps } = props;\n  return (\n    // @ts-expect-error TS(2322): Type '{ height: string; display: string; flexDirec... Remove this comment to see the full error message\n    <PageWrapper css={usesFullHeight ? styles.useFullHeightLayout : styles.wrapper}>\n      {/* @ts-expect-error TS(2322): Type '{ css: { flexShrink: number; }; }' is not as... Remove this comment to see the full error message */}\n      <Spacer css={styles.fixedSpacer} />\n      {usesFullHeight ? props.children : <div {...restProps} css={styles.container} />}\n    </PageWrapper>\n  );\n}\n\nPageContainer.defaultProps = {\n  usesFullHeight: false,\n};\n\nconst styles = {\n  useFullHeightLayout: {\n    height: 'calc(100% - 60px)', // 60px comes from header height\n    display: 'flex',\n    flexDirection: 'column',\n    '&:last-child': {\n      flexGrow: 1,\n    },\n  },\n  wrapper: { flex: 1 },\n  fixedSpacer: {\n    // Ensure spacer's fixed height regardless of flex\n    flexShrink: 0,\n  },\n  container: {\n    width: '100%',\n    flexGrow: 1,\n    paddingBottom: 24,\n  },\n};\n","import React, { Component } from 'react';\n\nclass NotFoundPage extends Component {\n  render() {\n    return <div>Resource not found.</div>;\n  }\n}\n\nexport default NotFoundPage;\n","import { ExperimentKind } from '../constants';\nimport { defineMessage, MessageDescriptor } from 'react-intl';\nimport { KeyValueEntity } from '../../common/types';\n\nexport const EXPERIMENT_KIND_TAG_KEY = 'mlflow.experimentKind';\n\nexport const getExperimentKindFromTags = (\n  experimentTags?:\n    | ({ __typename: 'MlflowExperimentTag'; key: string | null; value: string | null }[] | null)\n    | KeyValueEntity[],\n): ExperimentKind | undefined =>\n  experimentTags?.find((tag) => tag.key === EXPERIMENT_KIND_TAG_KEY)?.value as ExperimentKind;\n\nexport const isEditableExperimentKind = (experimentKind: ExperimentKind): boolean =>\n  experimentKind === ExperimentKind.GENAI_DEVELOPMENT_INFERRED ||\n  experimentKind === ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED ||\n  experimentKind === ExperimentKind.NO_INFERRED_TYPE ||\n  experimentKind === ExperimentKind.GENAI_DEVELOPMENT ||\n  experimentKind === ExperimentKind.CUSTOM_MODEL_DEVELOPMENT ||\n  experimentKind === ExperimentKind.EMPTY;\n\nexport const normalizeInferredExperimentKind = (experimentKind: ExperimentKind): ExperimentKind => {\n  if (experimentKind === ExperimentKind.GENAI_DEVELOPMENT_INFERRED) {\n    return ExperimentKind.GENAI_DEVELOPMENT;\n  }\n  if (experimentKind === ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED) {\n    return ExperimentKind.CUSTOM_MODEL_DEVELOPMENT;\n  }\n  return experimentKind;\n};\n\nexport const ExperimentKindDropdownLabels: Record<ExperimentKind, MessageDescriptor> = {\n  [ExperimentKind.GENAI_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description: 'Label for experiments focused on generative AI model development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'Label for custom experiments focused on machine learning',\n  }),\n  [ExperimentKind.GENAI_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description: 'Label for experiments automatically identified as generative AI development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'Label for custom experiments automatically identified as being focused on machine learning',\n  }),\n  [ExperimentKind.NO_INFERRED_TYPE]: defineMessage({\n    defaultMessage: 'None',\n    description: 'Label for experiments with no automatically inferred experiment type',\n  }),\n  [ExperimentKind.FINETUNING]: defineMessage({\n    defaultMessage: 'Finetuning',\n    description: 'Label for experiments focused on model finetuning',\n  }),\n  [ExperimentKind.REGRESSION]: defineMessage({\n    defaultMessage: 'Regression',\n    description: 'Label for experiments focused on regression modeling',\n  }),\n  [ExperimentKind.CLASSIFICATION]: defineMessage({\n    defaultMessage: 'Classification',\n    description: 'Label for experiments focused on classification modeling',\n  }),\n  [ExperimentKind.FORECASTING]: defineMessage({\n    defaultMessage: 'Forecasting',\n    description: 'Label for experiments focused on time series forecasting',\n  }),\n  [ExperimentKind.AUTOML]: defineMessage({\n    defaultMessage: 'AutoML',\n    description: 'Label for generic AutoML experiments',\n  }),\n  [ExperimentKind.EMPTY]: defineMessage({\n    defaultMessage: 'None',\n    description: 'Label for experiments with no experiment kind',\n  }),\n};\n\nexport const ExperimentKindShortLabels: Record<ExperimentKind, MessageDescriptor> = {\n  [ExperimentKind.GENAI_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description: 'A short label for custom experiments focused on generative AI app and agent development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'A short label for custom experiments focused on machine learning',\n  }),\n  [ExperimentKind.GENAI_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'GenAI apps & agents',\n    description:\n      'A short label for custom experiments automatically identified as being focused on generative AI app and agent development',\n  }),\n  [ExperimentKind.CUSTOM_MODEL_DEVELOPMENT_INFERRED]: defineMessage({\n    defaultMessage: 'Machine learning',\n    description: 'A short label for custom experiments automatically identified as being focused on machine learning',\n  }),\n  [ExperimentKind.NO_INFERRED_TYPE]: defineMessage({\n    defaultMessage: 'None',\n    description: 'A short label for experiments with no automatically inferred experiment type',\n  }),\n  [ExperimentKind.FINETUNING]: defineMessage({\n    defaultMessage: 'finetuning',\n    description: 'A short label for experiments focused on model finetuning',\n  }),\n  [ExperimentKind.REGRESSION]: defineMessage({\n    defaultMessage: 'regression',\n    description: 'A short label for experiments focused on regression modeling',\n  }),\n  [ExperimentKind.CLASSIFICATION]: defineMessage({\n    defaultMessage: 'classification',\n    description: 'A short label for experiments focused on classification modeling',\n  }),\n  [ExperimentKind.FORECASTING]: defineMessage({\n    defaultMessage: 'forecasting',\n    description: 'A short label for experiments focused on time series forecasting',\n  }),\n  [ExperimentKind.AUTOML]: defineMessage({\n    defaultMessage: 'AutoML',\n    description: 'A short label for generic AutoML experiments',\n  }),\n  [ExperimentKind.EMPTY]: defineMessage({\n    defaultMessage: 'None',\n    description: 'A short label for experiments with no experiment kind',\n  }),\n};\n\n// Returns list of experiment kinds that are user-selectable in the dropdown\nexport const getSelectableExperimentKinds = () => [\n  ExperimentKind.GENAI_DEVELOPMENT,\n  ExperimentKind.CUSTOM_MODEL_DEVELOPMENT,\n];\n"],"names":["RunViewArtifactTab","runTags","experimentId","runOutputs","artifactUri","runUuid","theme","useDesignSystemTheme","useFullHeightPage","useMediaQuery","responsive","breakpoints","sm","_jsx","css","_css","flex","overflow","display","paddingBottom","spacing","md","position","children","ArtifactPage","useAutoHeight","artifactRootUri","useRunViewActiveTab","tabParam","useParams","RunPageTabName","MODEL_METRIC_CHARTS","SYSTEM_METRIC_CHARTS","TRACES","match","ARTIFACTS","OVERVIEW","TABS_WITHOUT_MARGIN","EVALUATIONS","RunViewModeSwitch","navigate","useNavigate","currentTab","removeTabMargin","setRemoveTabMargin","useState","includes","_jsxs","LegacyTabs","activeKey","onChange","newTabKey","Routes","getRunPageTabRoute","getRunPageRoute","tabBarStyle","margin","TabPane","tab","FormattedMessage","id","defaultMessage","_ref","name","styles","_ref2","LoggedModelsDropdownContent","models","onRegisterClick","renderSection","title","sectionModels","DropdownMenu","Group","Label","map","model","registeredModelSummary","first","registeredModelVersionSummaries","Item","componentId","onClick","marginRight","last","path","split","HintColumn","Link","target","to","Button","type","size","e","stopPropagation","endIcon","NewWindowIcon","absolutePath","status","displayedName","version","link","IconWrapper","RegisteredModelOkIcon","ModelVersionStatusIcons","Tag","registeredModels","filter","length","unregisteredModels","_Fragment","Separator","RunViewHeaderRegisterModelButton","loggedModelPaths","useMemo","Utils","getLoggedModelsFromTags","artifactPath","orderBy","source","_model$registeredMode","parseInt","selectedModelToRegister","setSelectedModelToRegister","modelsRegistered","RegisterModel","modelPath","modelRelativePath","disabled","showButton","modalVisible","onCloseModal","Root","modal","LegacyTooltip","placement","values","registeredCount","loggedCount","Trigger","asChild","ChevronDownIcon","Content","align","singleModel","registeredModelVersionSummary","marginLeft","buttonType","RunViewHeader","hasComparedExperimentsBefore","comparedExperimentIds","experiment","runDisplayName","runParams","handleRenameRunClick","handleDeleteRunClick","isLoading","breadcrumbs","_experiment$experimen","getCompareExperimentsPageRoute","numExperiments","getExperimentPageRoute","getExperimentPageLink","shouldEnableExperimentPageHeaderV2","push","getExperimentPageTabRoute","ExperimentPageTabName","Runs","PageHeader","OverflowMenu","menu","itemName","renderRegisterModelButton","_experiment$experimen2","RunViewStatusBox","backgroundColor","isDarkMode","colors","green800","green100","red800","red100","blue800","blue100","RunStatusIcon","Typography","Text","color","RunViewUserLinkBox","runInfo","tags","_runInfo$experimentId","user","getUser","searchRunsByUser","systemMetricsLabel","modelMetricsLabel","defineMessages","metricKeyMatchesFilter","key","toLowerCase","RunViewMetricsTableSection","metricsList","header","table","_otherColumns$find","_otherColumns$find2","column","keyColumn","otherColumns","getLeafHeaders","valueColumn","find","anyRowHasModels","some","loggedModels","isEmpty","modelColumn","TableRow","TableCell","backgroundSecondary","bold","value","_runInfo$runUuid","style","getCanResize","getSize","undefined","toString","Overflow","_model$info","_model$info$experimen","_model$info2","_model$info$model_id","_model$info3","_model$info4","rel","getExperimentLoggedModelDetailsPage","info","experiment_id","model_id","RunViewMetricsTable","latestMetrics","detailsPageTableStyles","detailsPageNoEntriesStyles","detailsPageNoResultsWrapperStyles","usingUnifiedDetailsLayout","useExperimentTrackingDetailsPageLayoutStyles","intl","useIntl","setFilter","loggedModelsByMetricKey","metricsWithModels","compact","flatMap","_model$data","_model$data$metrics","data","metrics","groupedMetrics","groupBy","mapValues","group","metricValues","metricList","metric","_loggedModelsByMetric","modelColumnDefs","formatMessage","accessorKey","enableResizing","columns","columnDefs","metricSegments","systemMetrics","isSystemMetricKey","modelMetrics","useReactTable","getCoreRowModel","getRowId","row","enableColumnResizing","columnResizeMode","flexDirection","Title","level","padding","border","borderDecorative","borderRadius","general","borderRadiusBase","renderTableContent","Empty","description","areAllResultsFiltered","sum","marginBottom","Input","prefix","SearchIcon","placeholder","allowClear","Table","scrollable","empty","isHeader","TableHeader","setColumnSizing","isResizing","getIsResizing","flexRender","columnDef","getContext","segment","index","DatasetEntry","dataset","role","ExperimentViewDatasetWithContext","datasetWithTags","displayTextAsLink","RunViewDatasetBox","datasets","selectedDatasetWithRun","setSelectedDatasetWithRun","isDrawerOpen","setIsDrawerOpen","firstDataset","remainingDatasets","slice","datasetClicked","_runInfo$runName","runData","runName","gap","alignItems","digest","ExperimentViewDatasetDrawer","isOpen","setIsOpen","RunViewParentRunBox","parentRunUuid","dispatch","useDispatch","parentRunInfoRedux","useSelector","entities","runInfosByUuid","parentRunInfoGraphql","useGetRunQuery","shouldEnableGraphQLRunDetailsPage","parentRunInfo","_parentRunInfoGraphql","useEffect","getRunApi","ParagraphSkeleton","loading","label","RunViewTagsBox","onTagsUpdated","sharedTaggingUIEnabled","shouldUseSharedTaggingUI","isSavingTags","setIsSavingTags","visibleTagKeys","visibleTagEntities","keys","isUserFacingTag","tagsKeyValueMap","TagAssignmentModal","showTagAssignmentModal","useTagAssignmentModal","componentIdPrefix","initialTags","onSubmit","newTags","deletedTags","saveRunTagsApi","then","onSuccess","EditTagsModal","showEditTagsModal","useEditKeyValueTagsModal","valueRequired","allAvailableTags","saveTagsHandler","async","_","existingTags","setRunTagsBulkApi","showEditModal","editTagsLabel","paddingTop","xs","flexWrap","tag","KeyValueTag","enableFullViewModal","Tooltip","content","icon","PencilIcon","Spinner","RunViewDescriptionBox","onDescriptionChanged","_tags$NOTE_CONTENT_TA","noteContent","NOTE_CONTENT_TAG","showNoteEditor","setShowNoteEditor","Hint","EditableNote","defaultMarkdown","markdown","setTagApi","onCancel","handleCancelEditNote","showEditor","RunViewRegisteredModelsBox","modelSummary","queryFn","queryKey","RegisteredPromptsApi","getPromptVersionsForRun","RunViewRegisteredPromptsBox","error","usePromptVersionsForRunQuery","options","_queryResult$error","queryResult","useQuery","retry","refetch","promptVersions","model_versions","parseLinkedPromptsFromRunTags","promptVersion","getPromptDetailsPageRoute","encodeURIComponent","displayText","RunViewLoggedModelsBox","loggedModelsV3","getModelFlavorName","flavors","shouldDisplayArtifactPaths","Set","cursor","height","heightBase","heightSm","ModelsIcon","_model$info$model_id2","getExperimentLoggedModelDetailsPageRoute","_ref3","RunViewSourceBox","search","className","_tags$MLFLOW_RUN_GIT_","_tags$Utils$gitCommit","_tags$Utils$sourceTyp","branchName","MLFLOW_RUN_GIT_SOURCE_BRANCH_TAG","commitHash","gitCommitTag","runSource","renderSource","ExperimentSourceTypeIcon","sourceType","sourceTypeTag","actionPrimaryBackgroundDefault","BranchIcon","Popover","whiteSpace","alignContent","GitCommitIcon","Arrow","CopyButton","showLabel","copyText","CopyIcon","supportedAttributeColumnKeys","ExperimentLoggedModelListPageKnownColumns","RelationshipType","Step","Name","Status","CreationTime","RegisteredModels","Dataset","RunViewLoggedModelsTable","inputs","outputs","isLoadingLoggedModels","loggedModelsError","useCombinedRunInputsOutputsModels","inputLoggedModels","_inputs$modelInputs","uniq","modelInputs","modelInput","modelId","direction","outputLoggedModels","_outputs$modelOutputs","modelOutputs","modelOutput","_outputs$modelOutputs2","_correspondingOutputE","correspondingOutputEntry","step","_uniqBy","uniqBy","loggedModel","_loggedModel$data","run_id","modelData","_modelData$info","columnVisibility","setColumnVisibility","useExperimentLoggedModelListPageTableColumns","disablePinnedColumns","disableOrderBy","ExperimentLoggedModelListPageColumnSelector","onUpdateColumns","customTrigger","ColumnsIcon","Spacer","shrinks","Error","message","Alert","closable","ExperimentLoggedModelOpenDatasetDetailsContextProvider","ExperimentLoggedModelListPageTable","isLoadingMore","moreResultsAvailable","disableLoadMore","getTableTheme","displayShowExampleButton","textPrimary","actionDefaultBackgroundHover","actionDefaultBackgroundPress","backgroundPrimary","overlayOverlay","borderTop","fontSize","typography","fontSizeBase","getShadowScrollStyles","orientation","RunViewDatasetBoxV2","textAlign","iconFontSize","RunDetailsPageMetadataSections","EmptyValue","RunViewOverview","onRunDataUpdated","params","runInputs","registeredModelVersionSummariesForRun","useLocation","loggedModelsFromTags","parentRunIdTag","EXPERIMENT_PARENT_ID_TAG","containsLoggedModelsFromInputsOutputs","shouldRenderLoggedModelsBox","isRunPageLoggedModelsTableEnabled","shouldDisplayContentsOfLoggedModelsBox","modelVersions","loggedModelsV3RegisteredModels","useExperimentLoggedModelRegisteredVersions","detailsSectionsV2","useRunDetailsPageOverviewSectionsV2","_runInfo$runUuid2","detailsContent","KeyValueProperty","keyValue","startTime","formatTimestamp","NoneCell","DetailsOverviewCopyableIdBox","element","getDuration","endTime","DETAILS","DATASETS","TAGS","REGISTERED_MODELS","usingSidebarLayout","DetailsPageLayout","secondarySections","renderDetails","DetailsOverviewMetadataTable","DetailsOverviewMetadataRow","minHeight","maxHeight","lg","DetailsOverviewParamsTable","RunNotFoundView","runId","ErrorView","statusCode","subMessage","fallbackHomePageReactRoute","rootRoute","RunViewChartTooltipBody","contextData","metricsForRun","hoverData","chartData","metricKey","isHovering","mode","_metricsForRun$metric","singleTraceHoverData","containsMultipleRunsTooltipData","hoveredDataPoint","RunsChartsTooltipMode","MultipleTracesWithScanline","RunsMultipleTracesTooltipBody","metricEntity","timestamp","metricContainsHistory","isSystemMetric","displayTimestamp","isUndefined","displayStep","valueField","textOverflow","RunViewMetricChartsImpl","metricKeys","chartUIState","updateChartsUIState","_runInfo$runUuid4","setSearch","compareRunCharts","compareRunSections","chartsSearchFilter","visibleChartCards","_compareRunCharts$fil","chart","deleted","fullScreenChart","setFullScreenChart","sampledMetricsByRunUuid","metricsByRange","metricsHistory","flat","tooltipContextValue","imagesByRunUuid","state","configuredCardConfig","setConfiguredCardConfig","reorderCharts","useReorderRunsChartsFn","insertCharts","useInsertRunsChartsFn","removeChart","useRemoveRunsChartFn","confirmChartCardConfiguration","useConfirmChartCardConfigurationFn","_runInfo$runUuid3","displayName","images","metricHistory","uuid","primary","resultChartSet","resultSectionSet","RunsChartsCardConfig","getBaseChartAndSectionConfigs","runsData","enabledSectionNames","MLFLOW_MODEL_METRIC_NAME","MLFLOW_SYSTEM_METRIC_NAME","filterMetricNames","startsWith","MLFLOW_SYSTEM_METRIC_PREFIX","current","isResultUpdated","updateChartAndSectionConfigs","isAccordionReordered","isTabActive","useIsTabActive","autoRefreshEnabled","shouldEnableRunDetailsPageAutoRefresh","containsLoggedImages","Boolean","LOG_IMAGE_TAG_INDICATOR","usePopulateImagesByRunUuid","runUuids","runUuidsIsActive","enabled","RunsChartsFilterInput","ToggleButton","pressed","onPressedChange","RunsChartsGlobalChartSettingsDropdown","metricKeyList","globalLineChartConfig","updateUIState","RunsChartsTooltipWrapper","component","RunsChartsDraggableCardsGridContextProvider","RunsChartsSectionAccordion","startEditChart","chartCard","addNewChartCard","metricSectionId","getEmptyChartCardByType","supportedChartTypes","RunsChartType","LINE","BAR","IMAGE","RunsChartsConfigureModal","chartRunData","paramKeyList","config","configuredCard","RunsChartsFullScreenModal","tooltipComponent","RunViewMetricCharts","props","persistenceIdentifier","localStore","LocalStorageUtils","getStoreForComponent","defaultChartState","xAxisKey","RunsChartsLineChartXAxisType","STEP","lineSmoothness","selectedXAxisMetricKey","persistedChartState","getItem","JSON","parse","setItem","stringify","RunsChartsUIConfigurationContextProvider","QUERY_PARAM_KEY","useCompareToRunUuid","_searchParams$get","searchParams","setSearchParams","useSearchParams","get","useCallback","compareToRunId","delete","set","_ref4","_ref5","EvaluationRunCompareSelector","currentRunUuid","setCompareToRunUuid","compareToRunUuid","setCurrentRunUuid","setCurrentRunUuidProp","getRunColor","useGetExperimentRunColor","runInfos","experimentRunInfos","useGenAiExperimentRunsForComparison","currentRunOptions","result","compareToRunOptions","_runInfo$runName2","currentRunInfo","compareToRunInfo","defaultSetCurrentRunUuid","currentParams","URLSearchParams","window","location","newUrl","URL","origin","forEach","href","justifyContent","DialogCombobox","COMPARE_TO_RUN_DROPDOWN_COMPONENT_ID","DialogComboboxCustomButtonTriggerWrapper","fontSizeSm","RunColorPill","DialogComboboxContent","DialogComboboxOptionList","item","i","DialogComboboxOptionListSelectItem","checked","textPlaceholder","XCircleFillIcon","actionTertiaryTextHover","onPointerDownCapture","useRunLoggedTraceTableArtifacts","intersection","extractLoggedTablesFromRunTags","GenAiTraceEvaluationArtifactFile","Evaluations","Metrics","Assessments","SEARCH_RUNS_QUERY","gql","useSearchRunsQuery","experimentIds","_data$mlflowSearchRun","_data$mlflowSearchRun2","_data$mlflowSearchRun3","apolloError","variables","skip","mlflowSearchRuns","runs","refetchRun","apiError","getTrace","requestId","traceId","traceInfo","traceData","Promise","all","MlflowService","getExperimentTraceInfo","response","trace_info","getExperimentTraceData","RunViewEvaluationsTabArtifacts","traceTablesLoggedInRun","noEvaluationTablesLogged","makeHtmlFromMarkdown","useMarkdownConverter","compareToRunData","compareToRunDisplayName","compareToRunLoading","useGetCompareToDataWithArtifacts","LegacySkeleton","initialSelectedColumns","allColumns","col","TracesTableColumnType","ASSESSMENT","INPUT","TRACE_INFO","EXECUTION_DURATION_COLUMN_ID","STATE_COLUMN_ID","TAGS_COLUMN_ID","marginTop","width","overflowY","getOverviewTableComponent","componentProps","currentRunDisplayName","currentEvaluationResults","compareToEvaluationResults","GenAiTracesMarkdownConverterProvider","makeHtml","GenAiTracesTable","useGenAiTraceEvaluationArtifacts","artifacts","isNil","runDetailsLoading","getRunDisplayName","getExperimentTraceInfoV3","_response$trace","trace","RunViewEvaluationsTabInner","assessmentInfos","totalCount","isTableMetadataLoading","tableMetadataError","tableFilterOptions","useMlflowTracesTableMetadata","otherRunUuid","searchQuery","setSearchQuery","filters","setFilters","useFilters","queryClient","useQueryClient","defaultSelectedColumns","RESPONSE_COLUMN_ID","TOKENS_COLUMN_ID","selectedColumns","toggleColumns","setSelectedColumns","useSelectedColumns","tableSort","setTableSort","useTableSort","traceInfos","traceInfosLoading","traceInfosError","refetchMlflowTraces","useSearchMlflowTraces","deleteTracesMutation","useDeleteTracesMutation","useGetCompareToData","countInfo","currentCount","logCountLoading","maxAllowedCount","getEvalTabTotalTracesLimit","showEditTagsModalForTrace","useEditExperimentTraceTags","invalidateMlflowSearchTracesCache","existingTagKeys","getTracesTagKeys","useV3Apis","traceActions","deleteTracesAction","deleteTraces","traceIds","mutateAsync","traceRequestIds","exportToEvals","exportToEvalsInstanceEnabled","editTags","isTableLoading","LoadingSkeleton","String","GenAITracesTableProvider","GenAITracesTableToolbar","GenAITracesTableBodyContainer","currentTraceInfoV3","compareToTraceInfoV3","onTraceTagsEdit","RunViewEvaluationsTab","isArtifactCallEnabled","artifactData","isArtifactLoading","Array","seed","RunPageLoadingState","PageContainer","TitleSkeleton","RunPage","_runInfo$artifactUri2","renameModalVisible","setRenameModalVisible","deleteModalVisible","setDeleteModalVisible","invariant","experimentFetchError","runFetchError","useRunDetailsPageData","modelMetricKeys","systemMetricKeys","Object","comparedExperiments","activeTab","isUsingGetLoggedModelsApi","shouldUseGetLoggedModelsBatchAPI","loggedModelsForRun","useLoggedModelsForExperimentRun","_runInputs$modelInput","_runOutputs$modelOutp","allModels","modelIds","join","isHookEnabled","loggedModelsData","useSearchLoggedModelsQuery","loggedModelsForRunV2","useLoggedModelsForExperimentRunV2","useGetLoggedModelsQuery","initialLoading","ErrorWrapper","getErrorCode","ErrorCodes","RESOURCE_DOES_NOT_EXIST","code","getGraphQLErrorMessage","NotFoundPage","image","DangerIcon","usesFullHeight","renderActiveTab","_runInfo$artifactUri","RenameRunModal","onClose","DeleteRunModal","selectedRunIds","ApolloError","graphQLErrors","TagAssignmentRowContainer","TagAssignmentContext","createContext","TagAssignmentContextProvider","Provider","useTagAssignmentContext","context","useContext","TagAssignmentRoot","formCtx","useFormContext","Component","form","FormProvider","TagAssignmentRow","stableChildren","React","toArray","parsedChildren","fill","_stableChildren$i","gridTemplateColumns","TagAssignmentLabel","TagAssignmentInput","forwardRef","errorMessage","otherProps","ref","validationState","FormUI","Message","TagAssignmentKey","rules","render","keyProperty","getTagsValues","emptyValue","appendIfPossible","Controller","field","fieldState","formState","_fieldState$error","legacyChange","_tags$at","at","shouldFocus","TagAssignmentValue","valueProperty","TagAssignmentRemoveButtonUI","TrashIcon","TagAssignmentRemoveButton","removeOrUpdate","getTagAssignmentRules","maxLength","useTagAssignmentForm","defaultValues","_emptyValue","shouldUseFormContext","internalForm","setValue","fieldArrayMethods","append","originalAppend","update","remove","originalRemove","useFieldArray","control","getValues","lastTag","useTagAssignmentFieldArray","newValues","_getTagsValues","existentValues","UnifiedTaggingForm","tagsForm","fields","validate","unique","findIndex","required","formName","visible","baseComponentId","isVisible","setIsVisible","useForm","hideTagAssignmentModal","reset","defaultTitleNode","Modal","destroyOnClose","footer","handleSubmit","_tags$filter","_initialTags$filter","t","lazyPako","truncateToFirstLineWithMaxLength","str","truncated","char","middleTruncateStr","maxLen","firstPartLen","Math","floor","lastPartLen","substring","_keyStr","btoaUtf8","input","output","_utf8_encode","chr1","charCodeAt","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","charAt","atobUtf8","replace","indexOf","fromCharCode","_utf8_decode","string","utftext","n","c","c2","c3","getStringSHA256","crypto","subtle","TextEncoder","encode","arrayBuffer","prototype","call","Uint8Array","x","COMPRESSED_TEXT_DEFLATE_PREFIX","textCompressDeflate","binaryData","deflate","text","Buffer","b64encoded","from","binaryString","byte","fromCodePoint","btoa","textDecompressDeflate","pako","compressedText","compressedTextWithoutPrefix","inflate","atob","m","_m$codePointAt","codePointAt","isTextCompressedDeflate","restProps","PageWrapper","useFullHeightLayout","wrapper","fixedSpacer","container","defaultProps","flexGrow","flexShrink","getExperimentKindFromTags","experimentTags","_experimentTags$find","isEditableExperimentKind","experimentKind","ExperimentKind","GENAI_DEVELOPMENT_INFERRED","CUSTOM_MODEL_DEVELOPMENT_INFERRED","NO_INFERRED_TYPE","GENAI_DEVELOPMENT","CUSTOM_MODEL_DEVELOPMENT","EMPTY","normalizeInferredExperimentKind","ExperimentKindDropdownLabels","defineMessage","FINETUNING","REGRESSION","CLASSIFICATION","FORECASTING","AUTOML","ExperimentKindShortLabels","getSelectableExperimentKinds"],"sourceRoot":""}